name: Build and Test CI

on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
  workflow_dispatch:
    inputs:
      placeholder:
        description: 'placeholder, no effect'
        required: false
jobs:

  check_license_and_format:
    name: License and format
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v2
    - name: Check license and format (please run 'make of_format' if failed)
      uses: ./.github/actions/fmt

  mirror_third_party:
    name: Mirror third party dependencies
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v2
    - name: Mirror dependencies to aliyun
      env:
        OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
        OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
      run: |
        python3 -m pip install setuptools wheel
        python3 -m pip install oss2
        python3 tools/package_mirror.py -i cmake

  build_and_test:
    name: CUDA
    runs-on: [self-hosted, linux, gpu]
    if: github.event.pull_request.draft == false
    steps:
    - name: Fix permissions
      run: |
        docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
    - uses: actions/checkout@v2
    - name: Setup submodule
      uses: ./.github/actions/setup
    - name: Build OneFlow
      run: |
        ONEFLOW_CI_PACKAGE_SUFFIX="_cu102" \
        bash ci/build/make.sh
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        timestamp=$(date '+%Y.%m.%d-%H.%M.%S')
        dir=${{ github.event.pull_request.number }}/${timestamp}-${git_hash}
        for filename in $HOME/ci-tmp/wheelhouse/*.whl; do
            $HOME/ossutil64 cp $filename oss://oneflow-static/staging/pr/${dir}/`basename $filename`
        done
    - name: Build docker image for testing
      run: |
        bash docker/ci/test/build.sh
    - name: Exe test
      run: |
        docker run --shm-size=8g --rm \
          -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          -v $HOME/ci-tmp:/ci-tmp \
          -w /ci-tmp/manylinux2014-build-cache/build-oneflow/bin \
          oneflow-test \
          ./oneflow_testexe
    - name: Unit test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_op_test.sh"
    - name: Integration test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_model_test.sh"
    - name: Benchmark
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_benchmark_test.sh"
    - name: Benchmark FP16
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_benchmark_test_fp16.sh"
    - name: ONNX export test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/onnx_export_model_test.sh"
    - name: Build documentation
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp:/ci-tmp \
          -w $PWD -v $PWD:$PWD \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/build_docs.sh"

  build_and_test_xla:
    needs: mirror_third_party
    name: XLA
    runs-on: [self-hosted, linux, gpu]
    if: github.event.pull_request.draft == false
    steps:
    - name: Fix permissions
      run: |
        docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
    - uses: actions/checkout@v2
    - name: Setup submodule
      uses: ./.github/actions/setup
    - name: Build OneFlow
      run: |
        export ONEFLOW_CI_EXTRA_ONEFLOW_CMAKE_ARGS="-DWITH_XLA=ON -DTHIRD_PARTY_MIRROR=aliyun"
        export ONEFLOW_CI_TMP_DIR=$HOME/ci-tmp-xla
        export ONEFLOW_CI_CUDA_VERSION=10.1
        export ONEFLOW_CI_PACKAGE_SUFFIX="_cu101_xla"
        bash ci/build/make.sh
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        timestamp=$(date '+%Y.%m.%d-%H.%M.%S')
        dir=${{ github.event.pull_request.number }}/${timestamp}-${git_hash}
        for filename in ${ONEFLOW_CI_TMP_DIR}/wheelhouse/*.whl; do
            $HOME/ossutil64 cp $filename oss://oneflow-static/staging/pr/${dir}/`basename $filename`
        done
    - name: Build docker image for testing
      run: |
        bash docker/ci/test/build.sh
    - name: Test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp-xla:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          --env ONEFLOW_TEST_CPU_ONLY=1 \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/test_xla.sh"

  build_and_test_cpu:
    name: CPU-only
    runs-on: [self-hosted, linux, gpu]
    if: github.event.pull_request.draft == false
    steps:
    - name: Fix permissions
      run: |
        docker run --rm -v $PWD:/p -w /p busybox chmod -R o+w .
    - uses: actions/checkout@v2
    - name: Setup submodule
      uses: ./.github/actions/setup
    - name: Build OneFlow
      run: |
        export ONEFLOW_CI_EXTRA_ONEFLOW_CMAKE_ARGS="-DBUILD_CUDA=OFF"
        export ONEFLOW_CI_TMP_DIR=$HOME/ci-tmp-cpu
        export ONEFLOW_CI_PACKAGE_SUFFIX="_cpu"
        bash ci/build/make.sh
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        timestamp=$(date '+%Y.%m.%d-%H.%M.%S')
        dir=${{ github.event.pull_request.number }}/${timestamp}-${git_hash}
        for filename in ${ONEFLOW_CI_TMP_DIR}/wheelhouse/*.whl; do
            $HOME/ossutil64 cp $filename oss://oneflow-static/staging/pr/${dir}/`basename $filename`
        done
    - name: Build docker image for testing
      run: |
        bash docker/ci/test/build.sh
    - name: Unit test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp-cpu:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          --env ONEFLOW_TEST_CPU_ONLY=1 \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_op_test.sh"
    - name: Integration test
      run: |
        docker run --shm-size=8g --rm \
          -v $HOME/ci-tmp-cpu:/ci-tmp \
          -w $PWD -v $PWD:$PWD -v /dataset:/dataset -v /model_zoo:/model_zoo \
          --env ONEFLOW_WHEEL_PATH=/ci-tmp/wheelhouse \
          --env ONEFLOW_TEST_CPU_ONLY=1 \
          oneflow-test \
          bash -c "bash ci/test/try_install.sh && bash ci/test/1node_model_test.sh"
