# Copyright 2020 The OneFlow Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The following data types are allowed,
# {
#   "Tensor", "TensorTuple", "Scalar", "Int", "Int32", "Int64", "Float", "Double", "String", "Bool",
#   "ScalarList", "IntList", "Int32List", "Int64List", "FloatList", "DoubleList", "StringList",
#   "BoolList", "DataType", "Shape", "Generator", "TensorIndex", "Device", "Placement",
#   "Sbp", "SbpList"
# }

- name: "dispatch_feed_input"
  signature: "Tensor (OpExpr op, Tensor input) => DispatchFeedInput"
  bind_python: True

- name: "dispatch_feed_variable"
  signature: "Tensor (OpExpr op, Tensor input, Scalar l2) => DispatchFeedVariable"
  bind_python: True

- name: "dispatch_fetch_output"
  signature: "Tensor (OpExpr op, Tensor input) => DispatchFetchOutput"
  bind_python: True

- name: "dispatch_ofrecord_reader"
  signature: [
      "Tensor (OpExpr op, String data_dir, Int32 data_part_num, String part_name_prefix, Int32 part_name_suffix_length, Int32 batch_size, Int32 shuffle_buffer_size, Bool random_shuffle, Bool shuffle_after_epoch, Int64 seed, Device device=None) => DispatchOFRecordReader",
      "Tensor (OpExpr op, String data_dir, Int32 data_part_num, String part_name_prefix, Int32 part_name_suffix_length, Int32 batch_size, Int32 shuffle_buffer_size, Bool random_shuffle, Bool shuffle_after_epoch, Int64 seed, Placement placement, Sbp sbp) => DispatchOFRecordReader",
  ]
  bind_python: True

- name: "dispatch_ofrecord_raw_decoder"
  signature: "Tensor (OpExpr op, Tensor input, String name, Shape shape, DataType data_type, Bool dim1_varying_length, Bool truncate) => DispatchOfrecordRawDecoder"
  bind_python: True

- name: "dispatch_coin_flip"
  signature: [
      "Tensor (OpExpr op, Int64 batch_size, Scalar probability, Int64 seed, Bool has_seed, Device device=None) => DispatchCoinFlip",
      "Tensor (OpExpr op, Int64 batch_size, Scalar probability, Int64 seed, Bool has_seed, Placement placement, Sbp sbp) => DispatchCoinFlip",
  ]
  bind_python: True

- name: "dispatch_crop_mirror_normalize_from_uint8"
  signature: "Tensor (OpExpr op, TensorTuple input, Int64 crop_h, Int64 crop_w, Float crop_pos_x, Float crop_pos_y, FloatList mean, FloatList std, DataType output_dtype, String output_layout, String color_space) => DispatchCropMirrorNormalizeFromUint8"
  bind_python: True

- name: "dispatch_crop_mirror_normalize_from_tensorbuffer"
  signature: "Tensor (OpExpr op, TensorTuple input, Int64 crop_h, Int64 crop_w, Float crop_pos_x, Float crop_pos_y, FloatList mean, FloatList std, DataType output_dtype, String output_layout, String color_space) => DispatchCropMirrorNormalizeFromTensorBuffer"
  bind_python: True

- name: "dispatch_ofrecord_image_decoder_random_crop"
  signature: "Tensor (OpExpr op, Tensor input, String name, String color_space, FloatList random_area, FloatList random_aspect_ratio, Int32 num_attempts, Int64 seed, Bool has_seed) => DispatchOfrecordImageDecoderRandomCrop"
  bind_python: True

- name: "dispatch_ofrecord_image_decoder"
  signature: "Tensor (OpExpr op, Tensor input, String name, String color_space) => DispatchOfrecordImageDecoder"
  bind_python: True

- name: "dispatch_image_decoder_random_crop_resize"
  signature: "Tensor (OpExpr op, Tensor input, Int64 target_width, Int64 target_height, Int64 seed, Int64 num_workers=3, Int64 max_num_pixels=67108864, Float random_area_min=0.08f, Float random_area_max=1.0f, Float random_aspect_ratio_min=0.75f, Float random_aspect_ratio_max=1.333333f, Int64 warmup_size=6400, Int64 num_attempts=10) => DispatchImageDecoderRandomCropResize"
  bind_python: True

- name: "dispatch_tensor_buffer_to_list_of_tensors_v2"
  signature: "TensorTuple (OpExpr op, Tensor input, ShapeList out_shapes, DataTypeList out_dtypes, Bool dynamic_out) => DispatchTensorBufferToListOfTensorsV2"
  bind_python: True

- name: "dispatch_image_resize_keep_aspect_ratio"
  signature: "TensorTuple (OpExpr op, Tensor input, Int32 target_size, Int32 min_size, Int32 max_size, Bool resize_longer, String interpolation_type) => DispatchImageResizeKeepAspectRatio"
  bind_python: True

- name: "dispatch_image_resize_to_fixed"
  signature: "TensorTuple (OpExpr op, Tensor input, Int64 target_width, Int64 target_height, Int64 channels, DataType data_type, String interpolation_type) => DispatchImageResizeToFixed"
  bind_python: True

- name: "dispatch_image_normalize"
  signature: "Tensor (OpExpr op, Tensor input, FloatList mean, FloatList std) => DispatchImageNormalize"
  bind_python: True

- name: "dispatch_coco_reader"
  signature: [
      "TensorTuple (OpExpr op, String image_dir, String annotation_file, Int64 batch_size, Bool shuffle_after_epoch, Int64 random_seed, Bool group_by_ratio, Bool remove_images_without_annotations, Bool stride_partition, Int64 session_id, Device device=None) => DispatchCOCOReader",
      "TensorTuple (OpExpr op, String image_dir, String annotation_file, Int64 batch_size, Bool shuffle_after_epoch, Int64 random_seed, Bool group_by_ratio, Bool remove_images_without_annotations, Bool stride_partition, Int64 session_id, Placement placement, Sbp sbp) => DispatchCOCOReader",
  ]
  bind_python: True

- name: "dispatch_image_batch_align"
  signature: "Tensor (OpExpr op, Tensor input, Int32 alignment, Shape shape, DataType data_type, Bool dynamic_out) => DispatchImageBatchAlign"
  bind_python: True

- name: "dispatch_ofrecord_bytes_decoder"
  signature: "Tensor (OpExpr op, Tensor input, String name) => DispatchOfrecordBytesDecoder"
  bind_python: True

- name: "dispatch_megatron_gpt_mmap_data_loader"
  signature: [
      "Tensor (OpExpr op, String data_file_prefix, Int64 seq_length, Int64 label_length, Int64 num_samples, Int64 batch_size, DataType dtype, Int64List split_sizes, Int64 split_index, Bool shuffle, Int64 random_seed, Device device=None) => DispatchMegatronGptMmapDataLoader",
      "Tensor (OpExpr op, String data_file_prefix, Int64 seq_length, Int64 label_length, Int64 num_samples, Int64 batch_size, DataType dtype, Int64List split_sizes, Int64 split_index, Bool shuffle, Int64 random_seed, Placement placement, Sbp sbp) => DispatchMegatronGptMmapDataLoader",
  ]
  bind_python: True
