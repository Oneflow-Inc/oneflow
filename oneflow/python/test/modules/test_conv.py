"""
Copyright 2020 The OneFlow Authors. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import unittest
import numpy as np
import oneflow.experimental as flow

test_conv2d_weight = np.array(
    [
        [
            [
                [0.8586049675941467, -0.2279418259859085, 0.2013147622346878],
                [0.35005471110343933, 0.5360521078109741, 1.5194443464279175],
                [1.9040879011154175, -1.5734431743621826, -0.14007866382598877],
            ]
        ],
        [
            [
                [0.29670074582099915, 1.3111951351165771, 0.5035904049873352],
                [-1.1894450187683105, -0.5502137541770935, -1.591875672340393],
                [-1.1081947088241577, 0.07872020453214645, -0.9185634255409241],
            ]
        ],
        [
            [
                [-0.7457143664360046, -1.2080862522125244, 1.8140212297439575],
                [-1.5227429866790771, -2.515244960784912, -1.3549325466156006],
                [-0.9574840068817139, -0.7248556613922119, 1.1119636297225952],
            ]
        ],
    ]
)

test_conv2d_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                ],
                [
                    1.5580710172653198,
                    -0.5459445714950562,
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                ],
                [
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                    0.37723132967948914,
                ],
                [
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                ],
                [
                    1.830764889717102,
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                ],
            ]
        ]
    ]
)

test_conv2d_data_grad = np.array(
    [
        [
            [
                [
                    0.4095913469791412,
                    0.2847584038972855,
                    2.803684800863266,
                    2.3940934538841248,
                    2.5189263969659805,
                ],
                [
                    -1.9525419473648071,
                    -4.606781497597694,
                    -3.51521897315979,
                    -1.562677025794983,
                    1.0915625244379044,
                ],
                [
                    -2.1141327619552612,
                    -6.987950943410397,
                    -5.84306687861681,
                    -3.7289341166615486,
                    1.1448840647935867,
                ],
                [
                    -2.5237241089344025,
                    -7.272709347307682,
                    -8.646751679480076,
                    -6.123027570545673,
                    -1.3740423321723938,
                ],
                [
                    -0.1615908145904541,
                    -2.381169445812702,
                    -2.32784790545702,
                    -2.1662570908665657,
                    0.0533215403556824,
                ],
            ]
        ]
    ]
)

test_conv2d_weight_grad = np.array(
    [
        [
            [
                [0.6277393400669098, -2.7888944894075394, -0.2910575419664383],
                [-3.095237225294113, -4.835702538490295, -1.8706469237804413],
                [-1.0139376372098923, -6.076017692685127, -5.780256435275078],
            ]
        ],
        [
            [
                [0.6277393400669098, -2.7888944894075394, -0.2910575419664383],
                [-3.095237225294113, -4.835702538490295, -1.8706469237804413],
                [-1.0139376372098923, -6.076017692685127, -5.780256435275078],
            ]
        ],
        [
            [
                [0.6277393400669098, -2.7888944894075394, -0.2910575419664383],
                [-3.095237225294113, -4.835702538490295, -1.8706469237804413],
                [-1.0139376372098923, -6.076017692685127, -5.780256435275078],
            ]
        ],
    ]
)

test_conv2d_output = np.array(
    [
        [
            [
                [0.9699610471725464, -0.20758534967899323, 2.3857712745666504],
                [0.3666309118270874, 4.690882682800293, -8.203354835510254],
                [2.6072847843170166, -1.9033538103103638, 2.331153154373169],
            ],
            [
                [2.519343852996826, 2.3757898807525635, -1.6613528728485107],
                [0.5777544379234314, -3.5739502906799316, 5.349126815795898],
                [0.729295015335083, 1.5791023969650269, 3.7627718448638916],
            ],
            [
                [-0.27685487270355225, 6.446267127990723, -2.762883424758911],
                [-8.25644588470459, 9.616064071655273, 8.005367279052734],
                [-0.6944921016693115, 3.866114854812622, 4.788446426391602],
            ],
        ]
    ]
)

test_conv2d_with_bias_weight = np.array(
    [
        [
            [
                [1.8271433115005493, -1.0446699857711792, 1.0062190294265747],
                [0.5174201130867004, -0.806931734085083, 1.3769007921218872],
                [0.205885112285614, 0.9943519234657288, -0.23580588400363922],
            ]
        ],
        [
            [
                [0.29881811141967773, -1.9982075691223145, 0.3511354625225067],
                [-0.7644741535186768, 1.2594351768493652, -0.9629734754562378],
                [0.5080506205558777, 0.7561734318733215, 1.6839302778244019],
            ]
        ],
        [
            [
                [1.2573646306991577, 0.13123232126235962, 1.6403018236160278],
                [-1.2138012647628784, 2.399970531463623, -0.38509097695350647],
                [-0.9878040552139282, 0.9585888385772705, -1.4976465702056885],
            ]
        ],
    ]
)

test_conv2d_with_bias_bias = np.array(
    [0.6605162620544434, -0.18903568387031555, -0.27302607893943787]
)

test_conv2d_with_bias_data = np.array(
    [
        [
            [
                [
                    -0.47827261686325073,
                    -1.1739492416381836,
                    -0.7921845316886902,
                    0.9321041703224182,
                    -3.1557741165161133,
                ],
                [
                    2.1935296058654785,
                    -0.5385921001434326,
                    -0.8611332774162292,
                    -1.881519079208374,
                    -0.7205708026885986,
                ],
                [
                    -0.35601571202278137,
                    -0.15963983535766602,
                    1.797447681427002,
                    0.19594945013523102,
                    -1.7376397848129272,
                ],
                [
                    0.047347065061330795,
                    0.14580930769443512,
                    0.32604914903640747,
                    0.4578782916069031,
                    -0.8942581415176392,
                ],
                [
                    0.49383941292762756,
                    -0.9043426513671875,
                    -1.2140793800354004,
                    2.1564064025878906,
                    1.0938222408294678,
                ],
            ]
        ]
    ]
)

test_conv2d_with_bias_output = np.array(
    [
        [
            [
                [-0.05607491731643677, -0.185230553150177, -3.8808679580688477],
                [6.861937046051025, -2.3341472148895264, -0.5597308874130249],
                [1.8299254179000854, -2.770848274230957, 2.1958212852478027],
            ],
            [
                [2.9348952770233154, 4.117504119873047, -6.278541088104248],
                [0.2638452351093292, 3.998856782913208, 2.612290620803833],
                [-1.9891828298568726, -1.6476304531097412, 3.39066219329834],
            ],
            [
                [-8.44466781616211, 0.5747121572494507, -8.501373291015625],
                [-0.036642804741859436, -0.23458999395370483, -2.370849370956421],
                [2.8372013568878174, -2.987276077270508, 1.8382092714309692],
            ],
        ]
    ]
)

test_conv2d_group_weight = np.array(
    [
        [
            [
                [-0.7248556613922119, 1.1119636297225952, -0.47827261686325073],
                [-1.1739492416381836, -0.7921845316886902, 0.9321041703224182],
                [-3.1557741165161133, 2.1935296058654785, -0.5385921001434326],
            ]
        ],
        [
            [
                [-0.8611332774162292, -1.881519079208374, -0.7205708026885986],
                [-0.35601571202278137, -0.15963983535766602, 1.797447681427002],
                [0.19594945013523102, -1.7376397848129272, 0.047347065061330795],
            ]
        ],
    ]
)

test_conv2d_group_data_grad = np.array(
    [
        [
            [
                [
                    -0.7248556613922119,
                    0.3871079683303833,
                    -0.0911646485328674,
                    0.6336910128593445,
                    -0.4782726168632507,
                ],
                [
                    -1.8988049030303955,
                    -1.5790258049964905,
                    -1.125194251537323,
                    0.7736106514930725,
                    0.4538315534591675,
                ],
                [
                    -5.054579019546509,
                    -2.5412703156471252,
                    -2.6260308623313904,
                    2.4285481572151184,
                    -0.0847605466842651,
                ],
                [
                    -4.329723358154297,
                    -2.9283782839775085,
                    -2.534866213798523,
                    1.794857144355774,
                    0.3935120701789856,
                ],
                [
                    -3.1557741165161133,
                    -0.9622445106506348,
                    -1.5008366107940674,
                    1.654937505722046,
                    -0.5385921001434326,
                ],
            ],
            [
                [
                    -0.8611332774162292,
                    -2.7426523566246033,
                    -3.463223159313202,
                    -2.6020898818969727,
                    -0.7205708026885986,
                ],
                [
                    -1.2171489894390106,
                    -3.2583079040050507,
                    -2.1814310252666473,
                    -0.9642820358276367,
                    1.0768768787384033,
                ],
                [
                    -1.0211995393037796,
                    -4.799998238682747,
                    -3.6757742948830128,
                    -2.654574755579233,
                    1.1242239437997341,
                ],
                [
                    -0.1600662618875504,
                    -2.0573458820581436,
                    -0.2125511355698109,
                    -0.0524848736822605,
                    1.8447947464883327,
                ],
                [
                    0.195949450135231,
                    -1.5416903346776962,
                    -1.4943432696163654,
                    -1.6902927197515965,
                    0.0473470650613308,
                ],
            ],
        ]
    ]
)

test_conv2d_group_weight_grad = np.array(
    [
        [
            [
                [0.6277393400669098, -2.7888944894075394, -0.2910575419664383],
                [-3.095237225294113, -4.835702538490295, -1.8706469237804413],
                [-1.0139376372098923, -6.076017692685127, -5.780256435275078],
            ]
        ],
        [
            [
                [3.30740749835968, -0.7220746576786041, -3.660933956503868],
                [0.5273916646838188, -2.631059892475605, -7.6207195818424225],
                [-3.5466641262173653, -8.214546449482441, -11.031560003757477],
            ]
        ],
    ]
)

test_conv2d_group_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                ],
                [
                    1.5580710172653198,
                    -0.5459445714950562,
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                ],
                [
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                    0.37723132967948914,
                ],
                [
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                ],
                [
                    1.830764889717102,
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                ],
            ],
            [
                [
                    0.8586049675941467,
                    -0.2279418259859085,
                    0.2013147622346878,
                    0.35005471110343933,
                    0.5360521078109741,
                ],
                [
                    1.5194443464279175,
                    1.9040879011154175,
                    -1.5734431743621826,
                    -0.14007866382598877,
                    0.29670074582099915,
                ],
                [
                    1.3111951351165771,
                    0.5035904049873352,
                    -1.1894450187683105,
                    -0.5502137541770935,
                    -1.591875672340393,
                ],
                [
                    -1.1081947088241577,
                    0.07872020453214645,
                    -0.9185634255409241,
                    -0.7457143664360046,
                    -1.2080862522125244,
                ],
                [
                    1.8140212297439575,
                    -1.5227429866790771,
                    -2.515244960784912,
                    -1.3549325466156006,
                    -0.9574840068817139,
                ],
            ],
        ]
    ]
)

test_conv2d_group_output = np.array(
    [
        [
            [
                [-8.836943626403809, 3.2316627502441406, 6.994439601898193],
                [-0.8386597037315369, -9.857108116149902, 13.68197250366211],
                [-13.020713806152344, 7.310227870941162, -3.3760271072387695],
            ],
            [
                [-4.803101539611816, 1.026240587234497, 0.5452112555503845],
                [-6.839838027954102, 2.0195930004119873, 0.11328654736280441],
                [0.393694669008255, 4.987061023712158, 3.297354221343994],
            ],
        ]
    ]
)

test_conv2d_padding_weight = np.array(
    [
        [
            [
                [0.8586049675941467, -0.2279418259859085, 0.2013147622346878],
                [0.35005471110343933, 0.5360521078109741, 1.5194443464279175],
                [1.9040879011154175, -1.5734431743621826, -0.14007866382598877],
            ]
        ]
    ]
)

test_conv2d_padding_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                ],
                [
                    1.5580710172653198,
                    -0.5459445714950562,
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                ],
                [
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                    0.37723132967948914,
                ],
                [
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                ],
                [
                    1.830764889717102,
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                ],
            ]
        ]
    ]
)

test_conv2d_padding_data_grad = np.array(
    [
        [
            [
                [
                    3.237529069185257,
                    3.237529069185257,
                    3.237529069185257,
                    3.237529069185257,
                    3.237529069185257,
                ],
                [
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                ],
                [
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                ],
                [
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                    3.428095132112503,
                ],
                [
                    2.596117228269577,
                    2.596117228269577,
                    2.596117228269577,
                    2.596117228269577,
                    2.596117228269577,
                ],
            ]
        ]
    ]
)

test_conv2d_padding_weight_grad = np.array(
    [
        [
            [
                [1.7594299167394638, 1.7594299167394638, 1.7594299167394638],
                [-0.6019042432308197, -0.6019042432308197, -0.6019042432308197],
                [-1.532561555504799, -1.532561555504799, -1.532561555504799],
            ]
        ]
    ]
)

test_conv2d_padding_output = np.array(
    [
        [
            [
                [
                    1.5489805936813354,
                    -1.0164761543273926,
                    5.277345657348633,
                    3.153532028198242,
                    -7.301508903503418,
                    -3.7565059661865234,
                    4.690962314605713,
                ],
                [
                    2.425799608230591,
                    -2.0592665672302246,
                    0.9699610471725464,
                    -0.20758534967899323,
                    2.3857712745666504,
                    1.1719579696655273,
                    0.6523551940917969,
                ],
                [
                    2.1625545024871826,
                    -1.3517316579818726,
                    0.3666309118270874,
                    4.690882682800293,
                    -8.203354835510254,
                    3.0248217582702637,
                    1.2624683380126953,
                ],
                [
                    0.6193475723266602,
                    -2.0285415649414062,
                    2.6072847843170166,
                    -1.9033538103103638,
                    2.331153154373169,
                    -3.998155355453491,
                    -1.0176407098770142,
                ],
                [
                    2.8643176555633545,
                    -0.7396122217178345,
                    -0.2253415733575821,
                    -2.846742630004883,
                    -4.961236476898193,
                    -0.1308247298002243,
                    -0.7344070672988892,
                ],
            ]
        ]
    ]
)

test_conv2d_stride_weight = np.array(
    [
        [
            [
                [0.8586049675941467, -0.2279418259859085, 0.2013147622346878],
                [0.35005471110343933, 0.5360521078109741, 1.5194443464279175],
                [1.9040879011154175, -1.5734431743621826, -0.14007866382598877],
            ]
        ]
    ]
)

test_conv2d_stride_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                ],
                [
                    1.5580710172653198,
                    -0.5459445714950562,
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                ],
                [
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                    0.37723132967948914,
                ],
                [
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                ],
                [
                    1.830764889717102,
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                ],
            ]
        ]
    ]
)

test_conv2d_stride_data_grad = np.array(
    [
        [
            [
                [
                    0.5360521078109741,
                    1.5194443464279175,
                    0.3500547111034393,
                    0.5360521078109741,
                    1.5194443464279175,
                ],
                [
                    -1.8013850003480911,
                    0.061236098408699,
                    2.762692868709564,
                    -1.8013850003480911,
                    0.061236098408699,
                ],
                [
                    0.5360521078109741,
                    1.5194443464279175,
                    0.3500547111034393,
                    0.5360521078109741,
                    1.5194443464279175,
                ],
                [
                    -1.8013850003480911,
                    0.061236098408699,
                    2.762692868709564,
                    -1.8013850003480911,
                    0.061236098408699,
                ],
                [
                    0.5360521078109741,
                    1.5194443464279175,
                    0.3500547111034393,
                    0.5360521078109741,
                    1.5194443464279175,
                ],
            ]
        ]
    ]
)

test_conv2d_stride_weight_grad = np.array(
    [
        [
            [
                [-5.1135923862457275, 3.5859558284282684, 2.089697480201721],
                [-0.3276629596948624, 1.7587070614099503, -2.5950092673301697],
                [-5.1135923862457275, 3.5859558284282684, 2.089697480201721],
            ]
        ]
    ]
)

test_conv2d_stride_output = np.array(
    [
        [
            [
                [-1.0164761543273926, -7.301508903503418],
                [-1.3517316579818726, -8.203354835510254],
                [-0.7396122217178345, -4.961236476898193],
            ]
        ]
    ]
)

test_conv2d_kernel_weight = np.array(
    [
        [
            [
                [
                    -0.9574840068817139,
                    -0.7248556613922119,
                    1.1119636297225952,
                    -0.47827261686325073,
                    -1.1739492416381836,
                ],
                [
                    -0.7921845316886902,
                    0.9321041703224182,
                    -3.1557741165161133,
                    2.1935296058654785,
                    -0.5385921001434326,
                ],
                [
                    -0.8611332774162292,
                    -1.881519079208374,
                    -0.7205708026885986,
                    -0.35601571202278137,
                    -0.15963983535766602,
                ],
            ]
        ]
    ]
)
test_conv2d_kernel_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                    1.5580710172653198,
                    -0.5459445714950562,
                ],
                [
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                ],
                [
                    0.37723132967948914,
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                    1.830764889717102,
                ],
                [
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                    0.8586049675941467,
                    -0.2279418259859085,
                    0.2013147622346878,
                ],
                [
                    0.35005471110343933,
                    0.5360521078109741,
                    1.5194443464279175,
                    1.9040879011154175,
                    -1.5734431743621826,
                    -0.14007866382598877,
                    0.29670074582099915,
                ],
                [
                    1.3111951351165771,
                    0.5035904049873352,
                    -1.1894450187683105,
                    -0.5502137541770935,
                    -1.591875672340393,
                    -1.1081947088241577,
                    0.07872020453214645,
                ],
                [
                    -0.9185634255409241,
                    -0.7457143664360046,
                    -1.2080862522125244,
                    1.8140212297439575,
                    -1.5227429866790771,
                    -2.515244960784912,
                    -1.3549325466156006,
                ],
            ]
        ]
    ]
)

test_conv2d_kernel_data_grad = np.array(
    [
        [
            [
                [
                    -0.9574840068817139,
                    -1.6823396682739258,
                    -0.5703760385513306,
                    -0.0911646485328674,
                    -0.5402582287788391,
                    -1.6522218585014343,
                    -1.1739492416381836,
                ],
                [
                    -1.749668538570404,
                    -1.5424200296401978,
                    -3.586230516433716,
                    -0.121304988861084,
                    -2.0410948395729065,
                    0.0027156472206116,
                    -1.7125413417816162,
                ],
                [
                    -2.6108018159866333,
                    -4.285072386264801,
                    -7.049453675746918,
                    -3.079410582780838,
                    -3.2773211896419525,
                    -0.5129399001598358,
                    -1.8721811771392822,
                ],
                [
                    -2.6108018159866333,
                    -4.285072386264801,
                    -7.049453675746918,
                    -3.079410582780838,
                    -3.2773211896419525,
                    -0.5129399001598358,
                    -1.8721811771392822,
                ],
                [
                    -2.6108018159866333,
                    -4.285072386264801,
                    -7.049453675746918,
                    -3.079410582780838,
                    -3.2773211896419525,
                    -0.5129399001598358,
                    -1.8721811771392822,
                ],
                [
                    -1.6533178091049194,
                    -2.6027327179908752,
                    -6.479077637195587,
                    -2.9882459342479706,
                    -2.7370629608631134,
                    1.1392819583415985,
                    -0.6982319355010986,
                ],
                [
                    -0.8611332774162292,
                    -2.7426523566246033,
                    -3.463223159313202,
                    -2.958105593919754,
                    -1.236226350069046,
                    -0.5156555473804474,
                    -0.159639835357666,
                ],
            ]
        ]
    ]
)

test_conv2d_kernel_weight_grad = np.array(
    [
        [
            [
                [
                    2.974529668688774,
                    4.548736393451691,
                    1.1672898679971695,
                    -1.499158263206482,
                    0.1862268149852753,
                ],
                [
                    1.6534235626459122,
                    2.3762744814157486,
                    -1.448018729686737,
                    -5.2917241007089615,
                    -2.278435029089451,
                ],
                [
                    -2.083257421851158,
                    -2.23808591067791,
                    -5.749193429946899,
                    -7.540486767888069,
                    -6.306201495230198,
                ],
            ]
        ]
    ]
)

test_conv2d_kernel_output = np.array(
    [
        [
            [
                [-3.5647754669189453, -4.234736919403076, 1.4046944379806519],
                [-0.6964312791824341, 16.42838478088379, -9.649789810180664],
                [4.312150478363037, -6.283960819244385, -4.8443922996521],
                [-2.772286891937256, -4.483709812164307, 12.315184593200684],
                [7.39893913269043, 1.305102825164795, -2.049992561340332],
            ]
        ]
    ]
)

test_conv2d_dilation_weight = np.array(
    [
        [
            [
                [-0.9574840068817139, -0.7248556613922119, 1.1119636297225952],
                [-0.47827261686325073, -1.1739492416381836, -0.7921845316886902],
                [0.9321041703224182, -3.1557741165161133, 2.1935296058654785],
            ]
        ]
    ]
)

test_conv2d_dilation_data = np.array(
    [
        [
            [
                [
                    1.1630785465240479,
                    0.4838046133518219,
                    0.299563467502594,
                    0.15302546322345734,
                    -1.168814778327942,
                    1.5580710172653198,
                    -0.5459445714950562,
                ],
                [
                    -2.3556296825408936,
                    0.5414402484893799,
                    2.678506374359131,
                    1.2546343803405762,
                    -0.5487740635871887,
                    -0.6810643672943115,
                    -0.13531559705734253,
                ],
                [
                    0.37723132967948914,
                    0.41016456484794617,
                    0.5712682008743286,
                    -2.757962703704834,
                    1.0762799978256226,
                    -0.6141325235366821,
                    1.830764889717102,
                ],
                [
                    -1.1468064785003662,
                    0.053837940096855164,
                    -2.5074806213378906,
                    -0.5916498899459839,
                    0.8586049675941467,
                    -0.2279418259859085,
                    0.2013147622346878,
                ],
                [
                    0.35005471110343933,
                    0.5360521078109741,
                    1.5194443464279175,
                    1.9040879011154175,
                    -1.5734431743621826,
                    -0.14007866382598877,
                    0.29670074582099915,
                ],
                [
                    1.3111951351165771,
                    0.5035904049873352,
                    -1.1894450187683105,
                    -0.5502137541770935,
                    -1.591875672340393,
                    -1.1081947088241577,
                    0.07872020453214645,
                ],
                [
                    -0.9185634255409241,
                    -0.7457143664360046,
                    -1.2080862522125244,
                    1.8140212297439575,
                    -1.5227429866790771,
                    -2.515244960784912,
                    -1.3549325466156006,
                ],
            ]
        ]
    ]
)

test_conv2d_dilation_data_grad = np.array(
    [
        [
            [
                [
                    -0.9574840068817139,
                    0.0,
                    0.0,
                    -0.7248556613922119,
                    0.0,
                    0.0,
                    1.1119636297225952,
                ],
                [
                    -0.9574840068817139,
                    0.0,
                    0.0,
                    -0.7248556613922119,
                    0.0,
                    0.0,
                    1.1119636297225952,
                ],
                [
                    -1.4357566237449646,
                    0.0,
                    0.0,
                    -1.8988049030303955,
                    0.0,
                    0.0,
                    0.319779098033905,
                ],
                [
                    -0.4782726168632507,
                    0.0,
                    0.0,
                    -1.1739492416381836,
                    0.0,
                    0.0,
                    -0.7921845316886902,
                ],
                [
                    0.4538315534591675,
                    0.0,
                    0.0,
                    -4.329723358154297,
                    0.0,
                    0.0,
                    1.4013450741767883,
                ],
                [
                    0.9321041703224182,
                    0.0,
                    0.0,
                    -3.1557741165161133,
                    0.0,
                    0.0,
                    2.1935296058654785,
                ],
                [
                    0.9321041703224182,
                    0.0,
                    0.0,
                    -3.1557741165161133,
                    0.0,
                    0.0,
                    2.1935296058654785,
                ],
            ]
        ]
    ]
)

test_conv2d_dilation_weight_grad = np.array(
    [
        [
            [
                [-0.8153198063373566, -1.3503028601408005, 1.1495047211647034],
                [-0.4195204377174377, -1.4455246925354004, 2.328780397772789],
                [0.7426864206790924, 3.1678953766822815, -0.979511596262455],
            ]
        ]
    ]
)

test_conv2d_dilation_output = np.array(
    [[[[-5.2563982009887695], [5.410353183746338], [-8.517012596130371]]]]
)


def _test_conv2d(
    test_case, conv, data, weight, output, bias=None, device="cuda",
):
    to_device = flow.device(device)
    x = flow.Tensor(data, device=to_device)
    conv.weight = flow.nn.Parameter(flow.Tensor(weight))
    if bias is not None:
        conv.bias = flow.nn.Parameter(flow.Tensor(bias))
    conv.to(to_device)
    of_out = conv(x)
    test_case.assertTrue(np.allclose(of_out.numpy(), output, rtol=1e-4, atol=1e-8))


def _test_conv2d_backward(
    test_case, conv, data, weight, data_grad, weight_grad, bias=None, device="cuda",
):
    to_device = flow.device(device)
    x = flow.Tensor(data, device=to_device, requires_grad=True)
    conv.weight = flow.nn.Parameter(flow.Tensor(weight), requires_grad=True)
    if bias is not None:
        conv.bias = flow.nn.Parameter(flow.Tensor(bias))
    conv.to(to_device)
    of_out = conv(x)
    of_out.sum().backward()
    test_case.assertTrue(np.allclose(x.grad.numpy(), data_grad, rtol=1e-4, atol=1e-8))
    test_case.assertTrue(
        np.allclose(conv.weight.grad.numpy(), weight_grad, rtol=1e-4, atol=1e-8)
    )


@unittest.skipIf(
    not flow.unittest.env.eager_execution_enabled(),
    ".numpy() doesn't work in lazy mode",
)
class TestConv2d(flow.unittest.TestCase):
    def test_conv2d_default_init(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 3), bias=True).to(flow.device(device))
            test_case.assertTrue(
                not np.allclose(
                    conv.weight.numpy(), np.zeros((1, 1, 3, 3)), rtol=1e-9, atol=1e-10
                )
            )
            test_case.assertTrue(
                not np.allclose(
                    conv.bias.numpy(), np.zeros((1,)), rtol=1e-9, atol=1e-10
                )
            )

    def test_conv2d(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 3, (3, 3), bias=False).to(flow.device(device))
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_data,
                test_conv2d_weight,
                test_conv2d_output,
                device=device,
            )

    def test_conv2d_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 3, (3, 3), bias=False).to(flow.device(device))
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_data,
                test_conv2d_weight,
                test_conv2d_data_grad,
                test_conv2d_weight_grad,
                device=device,
            )

    # bias grad not yet supported
    def test_conv2d_with_bias(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 3, (3, 3), bias=True).to(flow.device(device))
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_with_bias_data,
                test_conv2d_with_bias_weight,
                test_conv2d_with_bias_output,
                bias=test_conv2d_with_bias_bias,
                device=device,
            )

    def test_conv2d_group(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(2, 2, (3, 3), groups=2, bias=False).to(
                flow.device(device)
            )
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_group_data,
                test_conv2d_group_weight,
                test_conv2d_group_output,
                device=device,
            )

    def test_conv2d_group_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(2, 2, (3, 3), groups=2, bias=False).to(
                flow.device(device)
            )
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_group_data,
                test_conv2d_group_weight,
                test_conv2d_group_data_grad,
                test_conv2d_group_weight_grad,
                device=device,
            )

    def test_conv2d_padding(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 3), padding=(1, 2), bias=False).to(
                flow.device(device)
            )
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_padding_data,
                test_conv2d_padding_weight,
                test_conv2d_padding_output,
                device=device,
            )

    def test_conv2d_padding_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 3), padding=(1, 2), bias=False).to(
                flow.device(device)
            )
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_padding_data,
                test_conv2d_padding_weight,
                test_conv2d_padding_data_grad,
                test_conv2d_padding_weight_grad,
                device=device,
            )

    def test_conv2d_stride(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(
                1, 1, (3, 3), padding=(1, 1), stride=(2, 3), bias=False
            ).to(flow.device(device))
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_stride_data,
                test_conv2d_stride_weight,
                test_conv2d_stride_output,
                device=device,
            )

    def test_conv2d_stride_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(
                1, 1, (3, 3), padding=(1, 1), stride=(2, 3), bias=False
            ).to(flow.device(device))
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_stride_data,
                test_conv2d_stride_weight,
                test_conv2d_stride_data_grad,
                test_conv2d_stride_weight_grad,
                device=device,
            )

    def test_conv2d_kernel(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 5), bias=False).to(flow.device(device))
            conv.to(flow.device("cuda"))
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_kernel_data,
                test_conv2d_kernel_weight,
                test_conv2d_kernel_output,
            )

    def test_conv2d_kernel_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 5), bias=False).to(flow.device(device))
            conv.to(flow.device("cuda"))
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_kernel_data,
                test_conv2d_kernel_weight,
                test_conv2d_kernel_data_grad,
                test_conv2d_kernel_weight_grad,
            )

    def test_conv2d_dilation(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 3), dilation=(2, 3), bias=False).to(
                flow.device(device)
            )
            _test_conv2d(
                test_case,
                conv,
                test_conv2d_dilation_data,
                test_conv2d_dilation_weight,
                test_conv2d_dilation_output,
                device=device,
            )

    def test_conv2d_dilation_backward(test_case):
        for device in ["cuda", "cpu"]:
            conv = flow.nn.Conv2d(1, 1, (3, 3), dilation=(2, 3), bias=False).to(
                flow.device(device)
            )
            _test_conv2d_backward(
                test_case,
                conv,
                test_conv2d_dilation_data,
                test_conv2d_dilation_weight,
                test_conv2d_dilation_data_grad,
                test_conv2d_dilation_weight_grad,
                device=device,
            )


if __name__ == "__main__":
    unittest.main()
