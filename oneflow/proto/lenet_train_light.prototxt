name: "LeNet"
layer {
  name: "mnist"
  type: "Loader"
  loader_proto {
    data: "data"
    label: "label"
    channel: 1
    height: 28
    width: 28
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  convolution_proto {
    in: "mnist/data"
    out: "out"
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    param {
      lr_mult: 1
    }
    param {
      lr_mult: 2
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  pooling_proto {
    in: "conv1/out"
    out: "out"
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  convolution_proto {
    in: "pool1/out"
    out: "out"
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    param {
      lr_mult: 1
    }
    param {
      lr_mult: 2
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  pooling_proto {
    in: "conv2/out"
    out: "out"
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  innerproduct_proto {
    in: "pool2/out"
    out: "out"
    num_output: 480
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    param {
      lr_mult: 1
    }
    param {
      lr_mult: 2
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  relu_proto {
    in: "ip1/out"
    out: "out"
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  innerproduct_proto {
    in: "relu1/out"
    out: "out"
    num_output: 12
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
    param {
      lr_mult: 1
    }
    param {
      lr_mult: 2
    }
  }
}
layer {
  name: "softmax"
  type: "Softmax"
  softmax_proto {
    in: "ip2/out"
    out: "out"
  }
}
layer {
  name: "loss"
  type: "MultinomialLogisticLoss"
  multinomiallogisticloss_proto {
    data: "softmax/out"
    label: "mnist/label"
    loss: "loss"
  }
}
