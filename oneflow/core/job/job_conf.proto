syntax = "proto2";
package oneflow;

import "oneflow/core/common/data_type.proto";
import "oneflow/core/job/placement.proto";
import "oneflow/core/register/blob_desc.proto";
import "oneflow/core/operator/op_conf.proto";
import "oneflow/core/job/sbp_parallel.proto";
import "oneflow/core/framework/user_op_attr.proto";

message DynamicLossScalePolicy {
  optional float initial_loss_scale = 1 [default = 32768.0];
  optional float increment_period = 2 [default = 2000];
  optional float multiplier = 3 [default=2.0];
}

message TrainConf {
  optional NormalModelUpdateOpUserConf model_update_conf = 3;
  repeated string loss_lbn = 6;
  optional string train_step_lbn = 8;
  optional string primary_lr_lbn = 9;
  optional string secondary_lr_lbn = 10;
  oneof loss_scale_policy {
    float loss_scale_factor = 11 [default = 1];
    DynamicLossScalePolicy dynamic_loss_scale_policy = 12;
  }

  optional float primary_lr = 101;
  optional float secondary_lr = 102;
}

message PredictConf {
}

message ExperimentalRunConf {
  optional int64 piece_num_of_experiment_phase = 1 [default = -1];
  optional bool enable_experiment_run = 2 [default = false];
}

message MemoryAllocationAlgorithmConf {
  optional bool use_mem_size_first_algo = 1 [default = true];
  optional bool use_mutual_exclusion_first_algo = 2 [default = true];
  optional bool use_time_line_algo = 3 [default = false];
}

message XrtConfig {
  message XlaConfig {
    // TODO
  }
  message TensorRTConfig {
    optional bool use_fp16 = 1 [default = false];
    optional bool use_int8 = 2 [default = false];
    optional string int8_calibration = 3;
  }
  optional bool use_xla_jit = 1 [default = false];
  optional bool use_tensorrt = 2 [default = false];
  optional XlaConfig xla_config = 3;
  optional TensorRTConfig tensorrt_config = 4;
}

message IndexedSlicesOptimizerConf {
  optional bool enable = 1 [default = true];
  required OpNameSet include_op_names = 2;
}

message ParallelBlobConf {
  required BlobDescProto logical_blob_desc_conf = 1;
  required ParallelConf parallel_conf = 2;
  required SbpParallel sbp_conf = 3;
  required OptInt64 batch_axis = 4;
}

message JobConfigProto {
  required string job_name = 1;

  oneof job_type {
    TrainConf train_conf = 3;
    PredictConf predict_conf = 4;
  }
  optional int64 total_batch_num = 7 [default = 1];
  optional DataType default_data_type = 8 [default = kFloat]; // kFloat or kDouble
  oneof default_initialize_conf {
    InitializerConf default_initializer_conf = 10;
    string default_initialize_with_snapshot_path = 11;
  }

  optional ExperimentalRunConf exp_run_conf = 100;
  optional bool use_memory_allocation_algorithm_v2 = 101 [default = true];
  optional MemoryAllocationAlgorithmConf memory_allocation_algorithm_conf = 102;

  optional XrtConfig xrt_config = 103;

  optional IndexedSlicesOptimizerConf indexed_slices_optimizer_conf = 104;
  optional bool enable_fuse_model_update_ops = 105 [default = false];

  optional bool enable_cudnn = 200 [default = true];
  optional int64 cudnn_buf_limit_mbyte = 201 [default = 1024];  // 1GByte
  optional int32 cudnn_conv_force_fwd_algo = 202;
  optional int32 cudnn_conv_force_bwd_data_algo = 203;
  optional int32 cudnn_conv_force_bwd_filter_algo = 204;
  optional bool cudnn_conv_heuristic_search_algo = 205 [default = true];
  optional bool cudnn_conv_use_deterministic_algo_only = 206 [default = false];
  optional bool enable_cudnn_fused_normalization_add_relu = 207;
  optional bool enable_fuse_add_to_output = 208 [default = false];

  optional bool enable_reuse_mem = 300 [default = true];
  optional bool enable_inplace = 301 [default = true];
  optional bool enable_inplace_in_reduce_struct = 302 [default = true];

  optional bool do_parallel_cast_before_widening_type_cast = 403 [default = true];

  optional bool enable_non_distributed_optimizer = 506 [default = false];
  optional bool prune_parallel_cast_ops = 509 [default = true];
  optional bool prune_cast_to_static_shape_ops = 510 [default = true];

  optional bool cudnn_conv_enable_pseudo_half = 600 [default = true];
  optional bool enable_float_compute_for_half_gemm = 601 [default = true];
  optional bool enable_auto_mixed_precision = 602 [default = false];
  
  optional bool enable_keep_header_only = 700 [default = true];

  optional int64 concurrency_width = 1000 [default = 128];

  map<string, AttrValue> flag_name2flag_value = 2000;

  optional int64 logical_object_id = 3000;
}
