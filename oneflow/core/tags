!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/boxing_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kBoxingConf, BoxingKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kBoxingConf, BoxingKernel, ARITHMETIC_DATA_TYPE_SEQ)
ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/data_loader_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kDataLoaderConf, DataLoaderKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kDataLoaderConf, DataLoaderKernel, ARITHMETIC_DATA_TYPE_SEQ)
ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/kernel.h	130;"	d
ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/loss_print_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kLossPrintConf, LossPrintKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kLossPrintConf, LossPrintKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/accumulate_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kAccumulateConf, AccumulateKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kAccumulateConf, AccumulateKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/clone_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kCloneConf, CloneKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCloneConf, CloneKernel, ALL_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/convolution_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kConvolutionConf, ConvolutionKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConvolutionConf, ConvolutionKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/innerproduct_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kInnerproductConf, InnerProductKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kInnerproductConf, InnerProductKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/kernel.h	112;"	d
ADD_DEFAULT_KERNEL_CREATOR	kernel/momentum_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kMomentumMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMomentumMdupdtConf, MomentumMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/normal_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kNormalMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kNormalMdupdtConf, NormalMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/pooling_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kPoolingConf, PoolingKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPoolingConf, PoolingKernel, ARITHMETIC_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/relu_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kReluConf, ReluKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kReluConf, ReluKernel, FLOATING_DATA_TYPE_SEQ SIGNED_INT_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/rmsprop_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kRmspropMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kRmspropMdupdtConf, RMSPropMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
ADD_DEFAULT_KERNEL_CREATOR	kernel/softmax_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kSoftmaxConf, SoftmaxKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxConf, SoftmaxKernel, FLOATING_DATA_TYPE_SEQ)
ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(int32, Int32);$/;"	p	namespace:oneflow	signature:(int32, Int32)
ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(int64, Int64);$/;"	p	namespace:oneflow	signature:(int64, Int64)
ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(uint32, UInt32);$/;"	p	namespace:oneflow	signature:(uint32, UInt32)
ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(uint64, UInt64);$/;"	p	namespace:oneflow	signature:(uint64, UInt64)
ALIAS_PB_TYPE	common/protobuf.h	44;"	d
ALIAS_PB_TYPE	common/protobuf.h	51;"	d
ALL_DATA_TYPE_SEQ	common/data_type.h	36;"	d
ARITHMETIC_DATA_TYPE_SEQ	common/data_type.h	32;"	d
AccCompTaskNode	graph/accumulate_compute_task_node.h	/^  AccCompTaskNode() = default;$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:()
AccCompTaskNode	graph/accumulate_compute_task_node.h	/^class AccCompTaskNode : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
AccumulateCompActor	actor/accumulate_compute_actor.h	/^  AccumulateCompActor() = default;$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:()
AccumulateCompActor	actor/accumulate_compute_actor.h	/^class AccumulateCompActor : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
AccumulateKernel	kernel/accumulate_kernel.h	/^  AccumulateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
AccumulateOp	operator/accumulate_op.h	/^  AccumulateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
Act	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::Act() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
Act	actor/actor.h	/^  virtual void Act() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
Act	actor/backward_compute_actor.cpp	/^void BackwardCompActor::Act() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
Act	actor/boxing_actor.cpp	/^void BoxingActor::Act() {$/;"	f	class:oneflow::BoxingActor	signature:()
Act	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::Act() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
Act	actor/copy_hd_actor.cpp	/^void CopyHdActor::Act() {$/;"	f	class:oneflow::CopyHdActor	signature:()
Act	actor/forward_compute_actor.cpp	/^void ForwardCompActor::Act() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
Act	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::Act() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
Act	actor/rnn_boxing_actor.cpp	/^void BoxingActor::Act() {$/;"	f	class:oneflow::BoxingActor	signature:()
Act	actor/sink_compute_actor.cpp	/^void SinkCompActor::Act() {$/;"	f	class:oneflow::SinkCompActor	signature:()
Act	actor/source_compute_actor.cpp	/^void SourceCompActor::Act() {$/;"	f	class:oneflow::SourceCompActor	signature:()
ActEventLogger	actor/act_event_logger.cpp	/^ActEventLogger::ActEventLogger()$/;"	f	class:oneflow::ActEventLogger	signature:()
ActEventLogger	actor/act_event_logger.h	/^  ActEventLogger();$/;"	p	class:oneflow::final	access:private	signature:()
ActUntilFail	actor/actor.cpp	/^void Actor::ActUntilFail() {$/;"	f	class:oneflow::Actor	signature:()
ActUntilFail	actor/actor.h	/^  void ActUntilFail();$/;"	p	class:oneflow::Actor	access:protected	signature:()
Actor	actor/actor.h	/^class Actor {$/;"	c	namespace:oneflow
ActorCmd	actor/actor_message.h	/^enum class ActorCmd {$/;"	c	namespace:oneflow
ActorCreatorMap	actor/actor.cpp	/^static HashMap<int, std::function<Actor*()>>& ActorCreatorMap() {$/;"	f	namespace:oneflow	signature:()
ActorMsg	actor/actor_message.h	/^  ActorMsg() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ActorMsgBus	actor/actor_message_bus.h	/^  ActorMsgBus() = default;$/;"	p	class:oneflow::final	access:private	signature:()
ActorMsgType	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	c	namespace:oneflow
ActorReadContext	comm_network/epoll/epoll_comm_network.h	/^  struct ActorReadContext {$/;"	s	class:oneflow::final	access:private
ActorRegistry	actor/actor.h	/^  ActorRegistry() {$/;"	f	struct:oneflow::ActorRegistry	access:public	signature:()
ActorRegistry	actor/actor.h	/^struct ActorRegistry {$/;"	s	namespace:oneflow
AddActorCreator	actor/actor.cpp	/^void AddActorCreator(TaskType task_type, std::function<Actor*()> creator) {$/;"	f	namespace:oneflow	signature:(TaskType task_type, std::function<Actor*()> creator)
AddActorCreator	actor/actor.h	/^void AddActorCreator(TaskType task_type, std::function<Actor*()> creator);$/;"	p	namespace:oneflow	signature:(TaskType task_type, std::function<Actor*()> creator)
AddAllocatedEdge	graph/graph.h	/^  void AddAllocatedEdge(EdgeType*);$/;"	p	class:oneflow::Graph	access:public	signature:(EdgeType*)
AddAllocatedEdge	graph/graph.h	/^void Graph<NodeType, EdgeType>::AddAllocatedEdge(EdgeType* edge) {$/;"	f	class:oneflow::Graph	signature:(EdgeType* edge)
AddAllocatedNode	graph/graph.h	/^  void AddAllocatedNode(NodeType*);$/;"	p	class:oneflow::Graph	access:public	signature:(NodeType*)
AddAllocatedNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::AddAllocatedNode(NodeType* node) {$/;"	f	class:oneflow::Graph	signature:(NodeType* node)
AddCallBack	device/cuda_device_context.cpp	/^void CudaDeviceCtx::AddCallBack(std::function<void()> callback_stack) const {$/;"	f	class:oneflow::CudaDeviceCtx	signature:(std::function<void()> callback_stack) const
AddCallBack	device/device_context.h	/^  virtual void AddCallBack(std::function<void()>) const = 0;$/;"	p	class:oneflow::DeviceCtx	access:public	signature:(std::function<void()>) const
AddCloneNodes	graph/logical_graph.cpp	/^void LogicalGraph::AddCloneNodes($/;"	f	class:oneflow::LogicalGraph	signature:( const HashMap<LogicalEdge*, std::string>& edge2lbn, const HashMap<LogicalEdge*, std::string>& edge2ibn)
AddCloneNodes	graph/logical_graph.h	/^  void AddCloneNodes(const HashMap<LogicalEdge*, std::string>& edge2lbn,$/;"	p	class:oneflow::final	access:private	signature:(const HashMap<LogicalEdge*, std::string>& edge2lbn, const HashMap<LogicalEdge*, std::string>& edge2ibn)
AddConsumer	register/register_desc.cpp	/^void RegstDesc::AddConsumer(const TaskNode* new_consumer) {$/;"	f	class:oneflow::RegstDesc	signature:(const TaskNode* new_consumer)
AddConsumer	register/register_desc.h	/^  void AddConsumer(const TaskNode*);$/;"	p	class:oneflow::final	access:public	signature:(const TaskNode*)
AddCopyCommNetTask	graph/task_graph.cpp	/^void TaskGraph::AddCopyCommNetTask(TaskNode* src, TaskNode* dst) {$/;"	f	class:oneflow::TaskGraph	signature:(TaskNode* src, TaskNode* dst)
AddCopyCommNetTask	graph/task_graph.h	/^  void AddCopyCommNetTask(TaskNode* src, TaskNode* dst);$/;"	p	class:oneflow::final	access:private	signature:(TaskNode* src, TaskNode* dst)
AddCopyD2HTaskIfNotCpu	graph/task_graph.cpp	/^TaskNode* TaskGraph::AddCopyD2HTaskIfNotCpu(CompTaskNode* comp_task) {$/;"	f	class:oneflow::TaskGraph	signature:(CompTaskNode* comp_task)
AddCopyD2HTaskIfNotCpu	graph/task_graph.h	/^  TaskNode* AddCopyD2HTaskIfNotCpu(CompTaskNode*);$/;"	p	class:oneflow::final	access:private	signature:(CompTaskNode*)
AddCopyH2DTaskIfNotCpu	graph/task_graph.cpp	/^TaskNode* TaskGraph::AddCopyH2DTaskIfNotCpu(CompTaskNode* comp_task) {$/;"	f	class:oneflow::TaskGraph	signature:(CompTaskNode* comp_task)
AddCopyH2DTaskIfNotCpu	graph/task_graph.h	/^  TaskNode* AddCopyH2DTaskIfNotCpu(CompTaskNode*);$/;"	p	class:oneflow::final	access:private	signature:(CompTaskNode*)
AddDataOutputLbnsTo	graph/chain_node.cpp	/^void ChainNode::AddDataOutputLbnsTo(const ChainNode* to_node) {$/;"	f	class:oneflow::ChainNode	signature:(const ChainNode* to_node)
AddDataOutputLbnsTo	graph/chain_node.h	/^  void AddDataOutputLbnsTo(const ChainNode*);$/;"	p	class:oneflow::ChainNode	access:protected	signature:(const ChainNode*)
AddFd	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFd(int fd, std::function<void()> read_handler,$/;"	f	class:oneflow::IOEventPoller	signature:(int fd, std::function<void()> read_handler, std::function<void()> write_handler)
AddFd	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFd(int fd, std::function<void()>* read_handler,$/;"	f	class:oneflow::IOEventPoller	signature:(int fd, std::function<void()>* read_handler, std::function<void()>* write_handler)
AddFd	comm_network/epoll/io_event_poller.h	/^  void AddFd(int fd, std::function<void()> read_handler,$/;"	p	class:oneflow::final	access:public	signature:(int fd, std::function<void()> read_handler, std::function<void()> write_handler)
AddFd	comm_network/epoll/io_event_poller.h	/^  void AddFd(int fd, std::function<void()>* read_handler,$/;"	p	class:oneflow::final	access:private	signature:(int fd, std::function<void()>* read_handler, std::function<void()>* write_handler)
AddFdWithOnlyReadHandler	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFdWithOnlyReadHandler($/;"	f	class:oneflow::IOEventPoller	signature:( int fd, std::function<void()> read_handler)
AddFdWithOnlyReadHandler	comm_network/epoll/io_event_poller.h	/^  void AddFdWithOnlyReadHandler(int fd, std::function<void()> read_handler);$/;"	p	class:oneflow::final	access:public	signature:(int fd, std::function<void()> read_handler)
AddKernelCreator	kernel/copy_comm_net_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kCopyCommNetConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyCommNetConf, []() { return new CopyCommNetKernel; })
AddKernelCreator	kernel/copy_hd_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kCopyHdConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyHdConf, []() { return new CopyHdKernel; })
AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator1 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator1 creator)
AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator2 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator2 creator)
AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator3 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator3 creator)
AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator4 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator4 creator)
AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator1);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator1)
AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator2);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator2)
AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator3);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator3)
AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator4);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator4)
AddKernelCreator	kernel/model_save_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kModelSaveConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kModelSaveConf, []() { return new ModelSaveKernel; })
AddKernelCreator	kernel/print_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kPrintConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPrintConf, []() { return new PrintKernel; })
AddLbn	register/register_desc.cpp	/^BlobDesc* RegstDesc::AddLbn(const std::string& lbn) {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn)
AddLbn	register/register_desc.h	/^  BlobDesc* AddLbn(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
AddNForCurFilePos	persistence/cyclic_persistent_in_stream.cpp	/^void CyclicPersistentInStream::AddNForCurFilePos(uint64_t n) {$/;"	f	class:oneflow::CyclicPersistentInStream	signature:(uint64_t n)
AddNForCurFilePos	persistence/persistent_in_stream.h	/^  virtual void AddNForCurFilePos(uint64_t n) { cur_file_pos_ += n; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:(uint64_t n)
AddOneCloneNode	graph/logical_graph.cpp	/^void LogicalGraph::AddOneCloneNode($/;"	f	class:oneflow::LogicalGraph	signature:( const CloneInfo& clone_info, const HashMap<LogicalEdge*, std::string>& edge2ibn)
AddOneCloneNode	graph/logical_graph.h	/^  void AddOneCloneNode(const CloneInfo& clone_info,$/;"	p	class:oneflow::final	access:private	signature:(const CloneInfo& clone_info, const HashMap<LogicalEdge*, std::string>& edge2ibn)
AddOpCreator	operator/operator.cpp	/^void AddOpCreator(OperatorConf::OpTypeCase op_type_case,$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase op_type_case, std::function<Operator*()> creator)
AddOpCreator	operator/operator.h	/^void AddOpCreator(OperatorConf::OpTypeCase op_type_case,$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase op_type_case, std::function<Operator*()> creator)
AddReadCallBack	comm_network/comm_network.h	/^  virtual void AddReadCallBack(void* actor_read_id, void* read_id,$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, void* read_id, std::function<void()> callback)
AddReadCallBack	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::AddReadCallBack(void* actor_read_id, void* read_id,$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, void* read_id, std::function<void()> callback)
AddReadCallBackDone	comm_network/comm_network.h	/^  virtual void AddReadCallBackDone(void* actor_read_id, void* read_id) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, void* read_id)
AddReadCallBackDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::AddReadCallBackDone(void* actor_read_id, void* read_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, void* read_id)
AddRegst	graph/task_node.cpp	/^void TaskEdge::AddRegst(const std::string& name_in_producer,$/;"	f	class:oneflow::TaskEdge	signature:(const std::string& name_in_producer, std::shared_ptr<RegstDesc> regst)
AddRegst	graph/task_node.h	/^  void AddRegst(const std::string& name_in_producer,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name_in_producer, std::shared_ptr<RegstDesc> regst)
AddTask	thread/thread.cpp	/^void Thread::AddTask(const TaskProto& task) {$/;"	f	class:oneflow::Thread	signature:(const TaskProto& task)
AddTask	thread/thread.h	/^  void AddTask(const TaskProto&);$/;"	p	class:oneflow::Thread	access:public	signature:(const TaskProto&)
AdditionAssign	kernel/clone_kernel.cpp	/^  static void AdditionAssign(DeviceCtx* device_ctx, const Blob* a, Blob* b);$/;"	p	class:oneflow::final	file:	access:public	signature:(DeviceCtx* device_ctx, const Blob* a, Blob* b)
Allocate	memory/memory_allocator.cpp	/^std::tuple<char*, const void*, std::function<void()>> MemoryAllocator::Allocate($/;"	f	class:oneflow::MemoryAllocator	signature:( MemoryCase mem_case, std::size_t size)
Allocate	memory/memory_allocator.h	/^  std::tuple<char*, const void*, std::function<void()>> Allocate($/;"	p	class:oneflow::final	access:public	signature:( MemoryCase mem_case, std::size_t size)
AllocateBoxingThrdId	job/id_manager.cpp	/^int64_t IDMgr::AllocateBoxingThrdId(int64_t machine_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id)
AllocateBoxingThrdId	job/id_manager.h	/^  int64_t AllocateBoxingThrdId(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
AllocatePersistenceThrdId	job/id_manager.cpp	/^int64_t IDMgr::AllocatePersistenceThrdId(int64_t machine_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id)
AllocatePersistenceThrdId	job/id_manager.h	/^  int64_t AllocatePersistenceThrdId(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
Append	persistence/file_system.h	/^  virtual void Append(const char* data, size_t n) = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:(const char* data, size_t n)
AsyncDo	actor/actor.cpp	/^void Actor::AsyncDo(std::function<void()> func) {$/;"	f	class:oneflow::Actor	signature:(std::function<void()> func)
AsyncDo	actor/actor.h	/^  void AsyncDo(std::function<void()>);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<void()>)
AsyncLaunchKernel	actor/actor.cpp	/^void Actor::AsyncLaunchKernel($/;"	f	class:oneflow::Actor	signature:( const KernelCtx& kernel_ctx, std::function<Regst*(int64_t)> Regst4RegstDescId)
AsyncLaunchKernel	actor/actor.h	/^  void AsyncLaunchKernel(const KernelCtx&,$/;"	p	class:oneflow::Actor	access:protected	signature:(const KernelCtx&, std::function<Regst*(int64_t)> Regst4RegstDescId)
AsyncReturnAllReadableRegst	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
AsyncReturnAllReadableRegst	actor/actor.h	/^  virtual void AsyncReturnAllReadableRegst() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
AsyncReturnAllReadableRegst	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
AsyncReturnAllReadableRegst	actor/boxing_actor.cpp	/^void BoxingActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BoxingActor	signature:()
AsyncReturnAllReadableRegst	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::AsyncReturnAllReadableRegst() { UNEXPECTED_RUN(); }$/;"	f	class:oneflow::CopyCommNetActor	signature:()
AsyncReturnAllReadableRegst	actor/copy_hd_actor.cpp	/^void CopyHdActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::CopyHdActor	signature:()
AsyncReturnAllReadableRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
AsyncReturnAllReadableRegst	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
AsyncReturnAllReadableRegst	actor/rnn_boxing_actor.cpp	/^void BoxingActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BoxingActor	signature:()
AsyncReturnAllReadableRegst	actor/sink_compute_actor.cpp	/^void SinkCompActor::AsyncReturnAllReadableRegst() { UNEXPECTED_RUN(); }$/;"	f	class:oneflow::SinkCompActor	signature:()
AsyncReturnModelRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::AsyncReturnModelRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
AsyncReturnModelRegst	actor/forward_compute_actor.h	/^  void AsyncReturnModelRegst();$/;"	p	class:oneflow::final	access:private	signature:()
AsyncReturnModelRegstUntilLastPieceIdGreaterThan	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnModelRegstUntilLastPieceIdGreaterThan($/;"	f	class:oneflow::BackwardCompActor	signature:( int64_t piece_id)
AsyncReturnModelRegstUntilLastPieceIdGreaterThan	actor/backward_compute_actor.h	/^  void AsyncReturnModelRegstUntilLastPieceIdGreaterThan(int64_t piece_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t piece_id)
AsyncReturnModelRegstUntilMatchCurOutRegst	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnModelRegstUntilMatchCurOutRegst() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
AsyncReturnModelRegstUntilMatchCurOutRegst	actor/backward_compute_actor.h	/^  void AsyncReturnModelRegstUntilMatchCurOutRegst();$/;"	p	class:oneflow::final	access:private	signature:()
AsyncSendEORDMsgForAllProducedRegstDesc	actor/actor.cpp	/^void Actor::AsyncSendEORDMsgForAllProducedRegstDesc() {$/;"	f	class:oneflow::Actor	signature:()
AsyncSendEORDMsgForAllProducedRegstDesc	actor/actor.h	/^  void AsyncSendEORDMsgForAllProducedRegstDesc();$/;"	p	class:oneflow::Actor	access:protected	signature:()
AsyncSendEORDMsgToConsumers	actor/actor.cpp	/^void Actor::AsyncSendEORDMsgToConsumers(int64_t regst_desc_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t regst_desc_id)
AsyncSendEORDMsgToConsumers	actor/actor.h	/^  void AsyncSendEORDMsgToConsumers(int64_t regst_desc_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t regst_desc_id)
AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(Regst*)> RegstPreProcess)
AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(Regst*)> RegstPreProcess, std::function<bool(int64_t)> IsAllowedActor)
AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(int64_t)> IsAllowedActor)
AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer() {$/;"	f	class:oneflow::Actor	signature:()
AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer();$/;"	p	class:oneflow::Actor	access:protected	signature:()
AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(Regst*)> RegstPreProcess);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(Regst*)> RegstPreProcess)
AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(Regst*)> RegstPreProcess,$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(Regst*)> RegstPreProcess, std::function<bool(int64_t)> IsAllowedActor)
AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(int64_t)> IsAllowedActor);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(int64_t)> IsAllowedActor)
AsyncSendRegstMsgToProducer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToProducer(Regst* regst) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst)
AsyncSendRegstMsgToProducer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToProducer(Regst* regst, int64_t producer) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst, int64_t producer)
AsyncSendRegstMsgToProducer	actor/actor.h	/^  void AsyncSendRegstMsgToProducer(Regst*);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst*)
AsyncSendRegstMsgToProducer	actor/actor.h	/^  void AsyncSendRegstMsgToProducer(Regst*, int64_t producer);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst*, int64_t producer)
AsyncService	control/ctrl_service.cpp	/^CtrlService::AsyncService::AsyncService() {$/;"	f	class:oneflow::CtrlService::AsyncService	signature:()
AsyncService	control/ctrl_service.h	/^    AsyncService();$/;"	p	class:oneflow::final::final	access:public	signature:()
AsyncWrite	comm_network/epoll/socket_helper.cpp	/^void SocketHelper::AsyncWrite(const SocketMsg& msg) {$/;"	f	class:oneflow::SocketHelper	signature:(const SocketMsg& msg)
AsyncWrite	comm_network/epoll/socket_helper.h	/^  void AsyncWrite(const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const SocketMsg& msg)
AsyncWrite	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::AsyncWrite(const SocketMsg& msg) {$/;"	f	class:oneflow::SocketWriteHelper	signature:(const SocketMsg& msg)
AsyncWrite	comm_network/epoll/socket_write_helper.h	/^  void AsyncWrite(const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const SocketMsg& msg)
At	common/balanced_splitter.cpp	/^Range BalancedSplitter::At(int64_t first_idx, int64_t last_idx) const {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t first_idx, int64_t last_idx) const
At	common/balanced_splitter.cpp	/^Range BalancedSplitter::At(int64_t idx) const {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t idx) const
At	common/balanced_splitter.h	/^  Range At(int64_t first_idx, int64_t last_idx) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t first_idx, int64_t last_idx) const
At	common/balanced_splitter.h	/^  Range At(int64_t idx) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t idx) const
At	common/shape.h	/^  int64_t At(int64_t index) const { return dim_vec_[index]; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t index) const
Axpy	kernel/kernel_util.cpp	/^  static void Axpy(DeviceCtx* ctx, const int n, const T alpha, const T* x,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, const T* x, const int incx, T* y, const int incy)
Axpy	kernel/kernel_util.h	/^  static void Axpy(DeviceCtx* ctx, const int n, const T alpha, const T* x,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, const T* x, const int incx, T* y, const int incy)
BIND_HDFS_FUNC	persistence/hadoop/hadoop_file_system.cpp	120;"	d	file:
BIND_HDFS_FUNC	persistence/hadoop/hadoop_file_system.cpp	99;"	d	file:
BOOL_SEQ	common/util.h	144;"	d
Backward	kernel/kernel.cpp	/^void Kernel::Backward($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Backward	kernel/kernel.h	/^  virtual void Backward($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Backward	kernel/multinomial_logistic_loss_kernel.cpp	/^  static void Backward(DeviceCtx* ctx, const int64_t instance_num,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* prediction_diff)
Backward	kernel/multinomial_logistic_loss_kernel.h	/^  static void Backward(DeviceCtx* ctx, const int64_t instance_num,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* prediction_diff)
Backward	kernel/relu_kernel.cpp	/^  static void Backward(const KernelCtx& ctx, const int64_t n, const T* out_diff,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* out_diff, const T* in, T* in_diff)
Backward	kernel/relu_kernel.h	/^  static void Backward(const KernelCtx& ctx, const int64_t n, const T* out_diff,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* out_diff, const T* in, T* in_diff)
BackwardChainNode	graph/chain_node.h	/^class BackwardChainNode;$/;"	x
BackwardCompActor	actor/backward_compute_actor.h	/^  BackwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BackwardCompTaskNode	graph/backward_compute_task_node.h	/^  BackwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BackwardDataContent	kernel/clone_kernel.cpp	/^void CloneKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::CloneKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::BackwardDataContent($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/kernel.h	/^  virtual void BackwardDataContent($/;"	f	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/pooling_kernel.cpp	/^void PoolingKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::PoolingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/relu_kernel.cpp	/^void ReluKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::ReluKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataContent	kernel/softmax_kernel.cpp	/^void SoftmaxKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::SoftmaxKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataId	kernel/kernel.cpp	/^void KernelIf<device_type>::BackwardDataId($/;"	f	class:oneflow::KernelIf	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDataId	kernel/kernel.h	/^  virtual void BackwardDataId($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
BackwardDot	kernel/softmax_kernel.cpp	/^  static void BackwardDot(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, const T* out_diff, T* tmp)
BackwardDot	kernel/softmax_kernel.h	/^  static void BackwardDot(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, const T* out_diff, T* tmp)
BackwardSub	kernel/softmax_loss_kernel.cpp	/^  static void BackwardSub(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, PredType* in_diff)
BackwardSub	kernel/softmax_loss_kernel.h	/^  static void BackwardSub(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, PredType* in_diff)
BalancedSplitter	common/balanced_splitter.cpp	/^BalancedSplitter::BalancedSplitter(int64_t total_num, int64_t split_num) {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t total_num, int64_t split_num)
BalancedSplitter	common/balanced_splitter.h	/^  BalancedSplitter() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
BalancedSplitter	common/balanced_splitter.h	/^  BalancedSplitter(int64_t total_num, int64_t split_num);$/;"	p	class:oneflow::final	access:public	signature:(int64_t total_num, int64_t split_num)
Barrier	control/ctrl_client.cpp	/^void CtrlClient::Barrier(const std::string& barrier_name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& barrier_name)
Barrier	control/ctrl_client.cpp	/^void CtrlClient::Barrier(const std::string& barrier_name, int32_t barrier_num) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& barrier_name, int32_t barrier_num)
Barrier	control/ctrl_client.h	/^  void Barrier(const std::string& barrier_name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& barrier_name)
Barrier	control/ctrl_client.h	/^  void Barrier(const std::string& barrier_name, int32_t barrier_num);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& barrier_name, int32_t barrier_num)
BarrierHandler	control/ctrl_server.cpp	/^void CtrlServer::BarrierHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<BarrierRequest, BarrierResponse>* call)
Basename	common/str_util.cpp	/^std::string Basename(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
Basename	common/str_util.h	/^std::string Basename(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
BatchSize	job/job_desc.cpp	/^int32_t JobDesc::BatchSize() const {$/;"	f	class:oneflow::JobDesc	signature:() const
BatchSize	job/job_desc.h	/^  int32_t BatchSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
BindBnInOpAndRegst	graph/exec_graph.cpp	/^void ExecNode::BindBnInOpAndRegst(const std::string& bn_in_op,$/;"	f	class:oneflow::ExecNode	signature:(const std::string& bn_in_op, std::weak_ptr<RegstDesc> regst)
BindBnInOpAndRegst	graph/exec_graph.h	/^  void BindBnInOpAndRegst(const std::string&, std::weak_ptr<RegstDesc>);$/;"	p	class:oneflow::final	access:public	signature:(const std::string&, std::weak_ptr<RegstDesc>)
BindFunc	persistence/hadoop/hadoop_file_system.cpp	/^bool BindFunc(void* handle, const char* name, std::function<R(Args...)>* func) {$/;"	f	namespace:oneflow::fs	signature:(void* handle, const char* name, std::function<R(Args...)>* func)
BlasMatrixMatrix	kernel/innerproduct_kernel.cpp	/^void BlasMatrixMatrix(const KernelCtx& ctx, const enum CBLAS_TRANSPOSE trans_a,$/;"	f	namespace:oneflow::__anon21	signature:(const KernelCtx& ctx, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const T alpha, const T beta, const Blob* a, const Blob* b, Blob* c)
BldSubTskGphByBoxing	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphByBoxing($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
BldSubTskGphByBoxing	graph/task_graph.h	/^  void BldSubTskGphByBoxing($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
BldSubTskGphByOneToOne	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphByOneToOne($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>*, HashMap<const ChainNode*, std::vector<TaskNode*>>*)
BldSubTskGphByOneToOne	graph/task_graph.h	/^  void BldSubTskGphByOneToOne($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
BldSubTskGphBySelectOneSourceToSoleSink	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphBySelectOneSourceToSoleSink($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>*, HashMap<const ChainNode*, std::vector<TaskNode*>>*)
BldSubTskGphBySelectOneSourceToSoleSink	graph/task_graph.h	/^  void BldSubTskGphBySelectOneSourceToSoleSink($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
Blob	register/blob.cpp	/^Blob::Blob(const BlobDesc* blob_desc, char* mem_ptr,$/;"	f	class:oneflow::Blob	signature:(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token)
Blob	register/blob.h	/^  Blob(const BlobDesc* blob_desc, char* mem_ptr)$/;"	f	class:oneflow::final	access:public	signature:(const BlobDesc* blob_desc, char* mem_ptr)
Blob	register/blob.h	/^  Blob(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token);$/;"	p	class:oneflow::final	access:public	signature:(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token)
BlobCmp	kernel/opkernel_test_common.cpp	/^  static void BlobCmp(const Blob* lhs, const Blob* rhs) {$/;"	f	class:oneflow::test::final	access:public	signature:(const Blob* lhs, const Blob* rhs)
BlobCmp	kernel/opkernel_test_common.h	/^  static void BlobCmp(const Blob* lhs, const Blob* rhs);$/;"	p	class:oneflow::test::final	access:public	signature:(const Blob* lhs, const Blob* rhs)
BlobDesc	register/blob_desc.cpp	/^BlobDesc::BlobDesc()$/;"	f	class:oneflow::BlobDesc	signature:()
BlobDesc	register/blob_desc.h	/^  BlobDesc();$/;"	p	class:oneflow::final	access:public	signature:()
BlobDesc	register/blob_desc.h	/^  BlobDesc(Shape shape, DataType data_type, bool has_data_id)$/;"	f	class:oneflow::final	access:public	signature:(Shape shape, DataType data_type, bool has_data_id)
BlobDesc	register/blob_desc.h	/^  BlobDesc(const BlobDescProto& proto) {$/;"	f	class:oneflow::final	access:public	signature:(const BlobDescProto& proto)
BlockingCounter	common/blocking_counter.h	/^  BlockingCounter() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
BlockingCounter	common/blocking_counter.h	/^  BlockingCounter(int64_t cnt_val) { cnt_val_ = cnt_val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t cnt_val)
BlocksNum4ThreadsNum	device/cuda_util.h	/^inline int32_t BlocksNum4ThreadsNum(const int32_t n) {$/;"	f	namespace:oneflow	signature:(const int32_t n)
BnInOp2Blob_	kernel/boxing_kernel.cpp	/^  std::function<Blob*(const std::string&)> BnInOp2Blob_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
BoxingActor	actor/boxing_actor.h	/^  BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BoxingActor	actor/rnn_boxing_actor.h	/^  BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BoxingKernel	kernel/boxing_kernel.h	/^  BoxingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BoxingOp	operator/boxing_op.h	/^  BoxingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
BoxingTaskNode	graph/boxing_task_node.h	/^  BoxingTaskNode() = default;$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:()
BoxingTaskNode	graph/boxing_task_node.h	/^class BoxingTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
BoxingWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::BoxingWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
BoxingWorkerNum	job/job_desc.h	/^  int32_t BoxingWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
Build	graph/task_node.cpp	/^void TaskNode::Build() {$/;"	f	class:oneflow::TaskNode	signature:()
Build	graph/task_node.h	/^  void Build();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
BuildAccumulateKernel	kernel/accumulate_kernel_test.cpp	/^Kernel* BuildAccumulateKernel() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
BuildActivationDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildActivationDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
BuildActivationDiffRegst	graph/backward_compute_task_node.h	/^  void BuildActivationDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildActivationRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildActivationRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
BuildActivationRegst	graph/forward_compute_task_node.h	/^  void BuildActivationRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildBnInOp2Blob	kernel/innerproduct_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term)
BuildBnInOp2Blob	kernel/momentum_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon17	signature:()
BuildBnInOp2Blob	kernel/multinomial_logistic_loss_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
BuildBnInOp2Blob	kernel/normal_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon15	signature:()
BuildBnInOp2Blob	kernel/pooling_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob($/;"	f	namespace:oneflow::test::__anon29	signature:( const PoolingOpConf::PoolMethod& pooling_method)
BuildBnInOp2Blob	kernel/rmsprop_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob($/;"	f	namespace:oneflow::test::__anon10	signature:( std::vector<int64_t>& dim_vec)
BuildBnInOp2Blob	kernel/softmax_loss_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
BuildBnInOp2BlobFunc	kernel/clone_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc(int out_num) {$/;"	f	namespace:oneflow::test::__anon24	signature:(int out_num)
BuildBnInOp2BlobFunc	kernel/convolution_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc($/;"	f	namespace:oneflow::test::__anon23	signature:( bool has_bias_term)
BuildBnInOp2BlobFunc	kernel/copy_hd_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc($/;"	f	namespace:oneflow::test::__anon9	signature:( CopyHdOpConf::Type hd_type)
BuildBnInOp2BlobMap	kernel/accumulate_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
BuildBnInOp2BlobMap	kernel/boxing_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap($/;"	f	namespace:oneflow::test::__anon26	signature:( const std::vector<std::vector<int64_t>>& in_dim_vecs, const std::vector<std::vector<int64_t>>& out_dim_vecs, const std::vector<int64_t> middle_dim = {0, 0, 0, 0})
BuildBnInOp2BlobMap	kernel/boxing_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap($/;"	f	namespace:oneflow::test::__anon26	signature:( std::function<Blob*(const std::string&)> bn2bptr, const std::vector<std::vector<int64_t>>& in_dim_vecs, const std::vector<std::vector<int64_t>>& out_dim_vecs, const std::vector<int64_t> middle_dim = {0, 0, 0, 0})
BuildBnInOp2BlobMap	kernel/concat_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
BuildBnInOp2BlobMap	kernel/relu_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test	signature:()
BuildBnInOp2BlobMap	kernel/softmax_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
BuildBoxingKernel	kernel/boxing_kernel_test.cpp	/^BoxingKernel<T>* BuildBoxingKernel(int32_t in_num, int32_t out_num,$/;"	f	namespace:oneflow::test::__anon26	signature:(int32_t in_num, int32_t out_num, int kernel_name, BoxingOpConf::InBoxCase in_box_case, BoxingOpConf::OutBoxCase out_box_case, int32_t concat_axis = 1)
BuildBwStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildBwStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
BuildBwStruct	graph/chain_graph.h	/^  void BuildBwStruct();$/;"	p	class:oneflow::final	access:private	signature:()
BuildCloneKernel	kernel/clone_kernel_test.cpp	/^Kernel* BuildCloneKernel(int out_num) {$/;"	f	namespace:oneflow::test::__anon24	signature:(int out_num)
BuildCommandMsg	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildCommandMsg(int64_t dst_actor_id, ActorCmd cmd) {$/;"	f	class:oneflow::ActorMsg	signature:(int64_t dst_actor_id, ActorCmd cmd)
BuildCommandMsg	actor/actor_message.h	/^  static ActorMsg BuildCommandMsg(int64_t dst_actor_id, ActorCmd cmd);$/;"	p	class:oneflow::final	access:public	signature:(int64_t dst_actor_id, ActorCmd cmd)
BuildConcatKernel	kernel/concat_kernel_test.cpp	/^Kernel* BuildConcatKernel() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
BuildConvolutionKernel	kernel/convolution_kernel_test.cpp	/^Kernel* BuildConvolutionKernel(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon23	signature:(bool has_bias_term)
BuildCopyHdKernel	kernel/copy_hd_kernel_test.cpp	/^Kernel* BuildCopyHdKernel(CopyHdOpConf::Type hd_type) {$/;"	f	namespace:oneflow::test::__anon9	signature:(CopyHdOpConf::Type hd_type)
BuildEmptyMdlForFill	kernel/innerproduct_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildEmptyMdlForFill() {$/;"	f	namespace:oneflow::test::__anon13	signature:()
BuildEordMsg	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildEordMsg(int64_t consumer, int64_t regst_desc_id) {$/;"	f	class:oneflow::ActorMsg	signature:(int64_t consumer, int64_t regst_desc_id)
BuildEordMsg	actor/actor_message.h	/^  static ActorMsg BuildEordMsg(int64_t consumer, int64_t regst_desc_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t consumer, int64_t regst_desc_id)
BuildExecGphAndBindOutDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildExecGphAndBindOutDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
BuildExecGphAndBindOutDiffRegst	graph/backward_compute_task_node.h	/^  void BuildExecGphAndBindOutDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildExecGphAndRegst	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
BuildExecGphAndRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
BuildExecGphAndRegst	graph/boxing_task_node.cpp	/^void BoxingTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
BuildExecGphAndRegst	graph/copy_task_node.cpp	/^void CopyTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
BuildExecGphAndRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
BuildExecGphAndRegst	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
BuildExecGphAndRegst	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
BuildExecGphAndRegst	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
BuildExecGphAndRegst	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
BuildExecGphAndRegst	graph/task_node.h	/^  virtual void BuildExecGphAndRegst() = 0;$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
BuildExecGphStructAndBindInRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildExecGphStructAndBindInRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
BuildExecGphStructAndBindInRegst	graph/forward_compute_task_node.h	/^  void BuildExecGphStructAndBindInRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildFwStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildFwStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
BuildFwStruct	graph/chain_graph.h	/^  void BuildFwStruct();$/;"	p	class:oneflow::final	access:private	signature:()
BuildInBoxingIfNeed	graph/task_graph.cpp	/^void TaskGraph::BuildInBoxingIfNeed($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* chain, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box)
BuildInBoxingIfNeed	graph/task_graph.h	/^  void BuildInBoxingIfNeed($/;"	p	class:oneflow::final	access:private	signature:( const ChainNode*, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box)
BuildInDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildInDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
BuildInDiffRegst	graph/backward_compute_task_node.h	/^  void BuildInDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildInnerProductKernel	kernel/innerproduct_kernel_test.cpp	/^Kernel* BuildInnerProductKernel(bool has_bias_term, const FillConf* fill_conf) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term, const FillConf* fill_conf)
BuildKernelCtx	kernel/opkernel_test_common.cpp	/^void BuildKernelCtx<DeviceType::kCPU>(KernelCtx* ctx) {$/;"	f	namespace:oneflow::test	signature:(KernelCtx* ctx)
BuildKernelCtx	kernel/opkernel_test_common.h	/^void BuildKernelCtx(KernelCtx* ctx);$/;"	p	namespace:oneflow::test	signature:(KernelCtx* ctx)
BuildLossPrintStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildLossPrintStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
BuildLossPrintStruct	graph/chain_graph.h	/^  void BuildLossPrintStruct();$/;"	p	class:oneflow::final	access:private	signature:()
BuildMdUpdateKernel	kernel/normal_model_update_kernel_test.cpp	/^Kernel* BuildMdUpdateKernel(float learning_rate) {$/;"	f	namespace:oneflow::test::__anon15	signature:(float learning_rate)
BuildModelAndTmpRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildModelAndTmpRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
BuildModelAndTmpRegsts	graph/forward_compute_task_node.h	/^  void BuildModelAndTmpRegsts();$/;"	p	class:oneflow::final	access:private	signature:()
BuildModelDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildModelDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
BuildModelDiffRegst	graph/backward_compute_task_node.h	/^  void BuildModelDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildModelStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildModelStruct(bool is_train) {$/;"	f	class:oneflow::ChainGraph	signature:(bool is_train)
BuildModelStruct	graph/chain_graph.h	/^  void BuildModelStruct(bool is_train);$/;"	p	class:oneflow::final	access:private	signature:(bool is_train)
BuildMomentumMdUpdateKernel	kernel/momentum_model_update_kernel_test.cpp	/^Kernel* BuildMomentumMdUpdateKernel(float learning_rate, float beta) {$/;"	f	namespace:oneflow::test::__anon17	signature:(float learning_rate, float beta)
BuildMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel_test.cpp	/^Kernel* BuildMultinomialLogisticLossKernel() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
BuildOutBoxingIfNeed	graph/task_graph.cpp	/^void TaskGraph::BuildOutBoxingIfNeed($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* chain, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
BuildOutBoxingIfNeed	graph/task_graph.h	/^  void BuildOutBoxingIfNeed($/;"	p	class:oneflow::final	access:private	signature:( const ChainNode*, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
BuildOutRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildOutRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
BuildOutRegst	graph/forward_compute_task_node.h	/^  void BuildOutRegst();$/;"	p	class:oneflow::final	access:private	signature:()
BuildPoolingKernel	kernel/pooling_kernel_test.cpp	/^Kernel* BuildPoolingKernel(const PoolingOpConf::PoolMethod& pooling_method) {$/;"	f	namespace:oneflow::test::__anon29	signature:(const PoolingOpConf::PoolMethod& pooling_method)
BuildRMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel_test.cpp	/^Kernel* BuildRMSPropMdUpdateKernel(float learning_rate, float decay_rate,$/;"	f	namespace:oneflow::test::__anon10	signature:(float learning_rate, float decay_rate, float epsilon)
BuildRegstMsgToConsumer	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildRegstMsgToConsumer(int64_t producer, int64_t consumer,$/;"	f	class:oneflow::ActorMsg	signature:(int64_t producer, int64_t consumer, Regst* regst_raw_ptr)
BuildRegstMsgToConsumer	actor/actor_message.h	/^  static ActorMsg BuildRegstMsgToConsumer(int64_t producer, int64_t consumer,$/;"	p	class:oneflow::final	access:public	signature:(int64_t producer, int64_t consumer, Regst*)
BuildRegstMsgToProducer	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildRegstMsgToProducer(int64_t consumer, int64_t producer,$/;"	f	class:oneflow::ActorMsg	signature:(int64_t consumer, int64_t producer, Regst* regst_raw_ptr)
BuildRegstMsgToProducer	actor/actor_message.h	/^  static ActorMsg BuildRegstMsgToProducer(int64_t consumer, int64_t producer,$/;"	p	class:oneflow::final	access:public	signature:(int64_t consumer, int64_t producer, Regst*)
BuildReluKernel	kernel/relu_kernel_test.cpp	/^Kernel* BuildReluKernel() {$/;"	f	namespace:oneflow::test	signature:()
BuildRnnStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildRnnStruct() {}$/;"	f	class:oneflow::ChainGraph	signature:()
BuildRnnStruct	graph/chain_graph.h	/^  void BuildRnnStruct();$/;"	p	class:oneflow::final	access:private	signature:()
BuildSoftmaxKernel	kernel/softmax_kernel_test.cpp	/^Kernel* BuildSoftmaxKernel() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
BuildSoftmaxLossKernel	kernel/softmax_loss_kernel_test.cpp	/^Kernel* BuildSoftmaxLossKernel() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
BuildWithChainPair	graph/boxing_task_node.cpp	/^void BoxingTaskNode::BuildWithChainPair($/;"	f	class:oneflow::BoxingTaskNode	signature:( const ChainNode* in_chain, const std::vector<EdgeInfo>& sorted_in_edges, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_out_edges)
BuildWithChainPair	graph/boxing_task_node.h	/^  void BuildWithChainPair(const ChainNode* in_chain,$/;"	p	class:oneflow::BoxingTaskNode	access:private	signature:(const ChainNode* in_chain, const std::vector<EdgeInfo>& sorted_in_edges, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_out_edges)
ByteSizeOfDataContentField	register/blob.h	/^  size_t ByteSizeOfDataContentField() const {$/;"	f	class:oneflow::final	access:public	signature:() const
ByteSizeOfDataContentField	register/blob_desc.cpp	/^size_t BlobDesc::ByteSizeOfDataContentField() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
ByteSizeOfDataContentField	register/blob_desc.h	/^  size_t ByteSizeOfDataContentField() const;$/;"	p	class:oneflow::final	access:public	signature:() const
ByteSizeOfDataIdField	register/blob.h	/^  size_t ByteSizeOfDataIdField() const {$/;"	f	class:oneflow::final	access:public	signature:() const
ByteSizeOfDataIdField	register/blob_desc.cpp	/^size_t BlobDesc::ByteSizeOfDataIdField() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
ByteSizeOfDataIdField	register/blob_desc.h	/^  size_t ByteSizeOfDataIdField() const;$/;"	p	class:oneflow::final	access:public	signature:() const
CBLAS_DIAG	blas/cblas.h	/^enum CBLAS_DIAG { CblasNonUnit = 131, CblasUnit = 132 };$/;"	g
CBLAS_INDEX	blas/cblas.h	8;"	d
CBLAS_ORDER	blas/cblas.h	/^enum CBLAS_ORDER { CblasRowMajor = 101, CblasColMajor = 102 };$/;"	g
CBLAS_SIDE	blas/cblas.h	/^enum CBLAS_SIDE { CblasLeft = 141, CblasRight = 142 };$/;"	g
CBLAS_TRANSPOSE	blas/cblas.h	/^enum CBLAS_TRANSPOSE {$/;"	g
CBLAS_UPLO	blas/cblas.h	/^enum CBLAS_UPLO { CblasUpper = 121, CblasLower = 122 };$/;"	g
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(BackwardChainNode);$/;"	p	class:oneflow::final	access:public	signature:(BackwardChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(ForwardChainNode);$/;"	p	class:oneflow::final	access:public	signature:(ForwardChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossAccChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossAccChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossPrintChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(MdDiffAccChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(MdSaveChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(SourceChainNode);$/;"	p	class:oneflow::final	access:public	signature:(SourceChainNode)
CHAIN_NODE_BOILERPLATE	graph/chain_node.h	109;"	d
CHAIN_TYPE_SEQ	graph/chain_node.h	28;"	d
CHAR_DATA_TYPE_SEQ	common/data_type.h	26;"	d
COMMAND	common/util.h	64;"	d
CONCAT_KERNEL_ENTRY	kernel/concat_kernel.cpp	93;"	d	file:
COPY_TYPE_SEQ	kernel/copy_hd_kernel_test.cpp	77;"	d	file:
CTRL_METHOD_SEQ	control/ctrl_service.h	19;"	d
CUDA_1D_KERNEL_LOOP	device/cuda_util.h	17;"	d
CalcSumOfBlobs	kernel/boxing_kernel.cpp	/^void CalcSumOfBlobs(DeviceCtx* ctx,$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& src_bns, const std::string& dst_bn)
CallFromReceiverThread	common/channel_test.cpp	/^void CallFromReceiverThread(std::vector<int>* visit, Channel<int>* channel) {$/;"	f	namespace:oneflow	signature:(std::vector<int>* visit, Channel<int>* channel)
CallFromSenderThread	common/channel_test.cpp	/^void CallFromSenderThread(Channel<int>* channel, Range range) {$/;"	f	namespace:oneflow	signature:(Channel<int>* channel, Range range)
CblasColMajor	blas/cblas.h	/^enum CBLAS_ORDER { CblasRowMajor = 101, CblasColMajor = 102 };$/;"	e	enum:CBLAS_ORDER
CblasConjTrans	blas/cblas.h	/^  CblasConjTrans = 113$/;"	e	enum:CBLAS_TRANSPOSE
CblasLeft	blas/cblas.h	/^enum CBLAS_SIDE { CblasLeft = 141, CblasRight = 142 };$/;"	e	enum:CBLAS_SIDE
CblasLower	blas/cblas.h	/^enum CBLAS_UPLO { CblasUpper = 121, CblasLower = 122 };$/;"	e	enum:CBLAS_UPLO
CblasNoTrans	blas/cblas.h	/^  CblasNoTrans = 111,$/;"	e	enum:CBLAS_TRANSPOSE
CblasNonUnit	blas/cblas.h	/^enum CBLAS_DIAG { CblasNonUnit = 131, CblasUnit = 132 };$/;"	e	enum:CBLAS_DIAG
CblasRight	blas/cblas.h	/^enum CBLAS_SIDE { CblasLeft = 141, CblasRight = 142 };$/;"	e	enum:CBLAS_SIDE
CblasRowMajor	blas/cblas.h	/^enum CBLAS_ORDER { CblasRowMajor = 101, CblasColMajor = 102 };$/;"	e	enum:CBLAS_ORDER
CblasTrans	blas/cblas.h	/^  CblasTrans = 112,$/;"	e	enum:CBLAS_TRANSPOSE
CblasUnit	blas/cblas.h	/^enum CBLAS_DIAG { CblasNonUnit = 131, CblasUnit = 132 };$/;"	e	enum:CBLAS_DIAG
CblasUpper	blas/cblas.h	/^enum CBLAS_UPLO { CblasUpper = 121, CblasLower = 122 };$/;"	e	enum:CBLAS_UPLO
Chain	graph/chain_graph.cpp	/^struct Chain {$/;"	s	namespace:oneflow::__anon43	file:
ChainEdge	graph/chain_node.h	/^  ChainEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ChainEdge	graph/chain_node.h	/^class ChainEdge;$/;"	x
ChainGraph	graph/chain_graph.cpp	/^ChainGraph::ChainGraph(bool is_train) {$/;"	f	class:oneflow::ChainGraph	signature:(bool is_train)
ChainGraph	graph/chain_graph.h	/^  ChainGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ChainGraph	graph/chain_graph.h	/^  ChainGraph(bool is_train);$/;"	p	class:oneflow::final	access:public	signature:(bool is_train)
ChainNode	graph/boxing_task_node.h	/^class ChainNode;$/;"	x
ChainNode	graph/chain_node.h	/^  ChainNode() = default;$/;"	p	class:oneflow::ChainNode	access:protected	signature:()
ChainNode	graph/chain_node.h	/^class ChainNode : public Node<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Node
ChainNode	graph/compute_task_node.h	/^class ChainNode;$/;"	x
Channel	common/channel.h	/^  Channel() : is_send_closed_(false), is_receive_closed_(false) {}$/;"	f	class:oneflow::final	access:public	signature:()
CheckDataType	register/blob.h	/^  void CheckDataType() const {$/;"	f	class:oneflow::final	access:private	signature:() const
CheckFillResult	kernel/opkernel_test_common.cpp	/^  static void CheckFillResult(const Blob* blob, const FillConf& fill_conf) {$/;"	f	class:oneflow::test::final	access:public	signature:(const Blob* blob, const FillConf& fill_conf)
CheckFillResult	kernel/opkernel_test_common.h	/^  static void CheckFillResult(const Blob* blob, const FillConf& fill_conf);$/;"	p	class:oneflow::test::final	access:public	signature:(const Blob* blob, const FillConf& fill_conf)
CheckResult	kernel/opkernel_test_common.h	/^  static void CheckResult(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::test::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const std::string& result, const std::string& expected_result)
CleanPath	common/str_util.cpp	/^std::string CleanPath(const std::string& unclean_path) {$/;"	f	namespace:oneflow	signature:(const std::string& unclean_path)
CleanPath	common/str_util.h	/^std::string CleanPath(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
Clear	control/ctrl_client.cpp	/^void CtrlClient::Clear() {$/;"	f	class:oneflow::CtrlClient	signature:()
Clear	control/ctrl_client.h	/^  void Clear();$/;"	p	class:oneflow::final	access:public	signature:()
ClearHandler	control/ctrl_server.cpp	/^void CtrlServer::ClearHandler(CtrlCall<ClearRequest, ClearResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<ClearRequest, ClearResponse>* call)
ClearKV	control/ctrl_client.cpp	/^void CtrlClient::ClearKV(const std::string& k) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k)
ClearKV	control/ctrl_client.h	/^  void ClearKV(const std::string& k);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k)
ClearKVHandler	control/ctrl_server.cpp	/^void CtrlServer::ClearKVHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<ClearKVRequest, ClearKVResponse>* call)
ClearPort	comm_network/epoll/epoll_comm_network.cpp	/^void ClearPort(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
ClearUp	job/parallel_desc.cpp	/^void ParallelDesc::ClearUp() {$/;"	f	class:oneflow::ParallelDesc	signature:()
ClearUp	job/parallel_desc.h	/^  void ClearUp();$/;"	p	class:oneflow::ParallelDesc	access:private	signature:()
CloneInfo	graph/logical_graph.h	/^  struct CloneInfo {$/;"	s	class:oneflow::final	access:private
CloneKernel	kernel/clone_kernel.h	/^  CloneKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CloneOp	operator/clone_op.h	/^  CloneOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
Close	persistence/file_system.h	/^  virtual void Close() = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
CloseHandleFunc	persistence/windows/windows_file_system.cpp	/^const auto CloseHandleFunc = [](HANDLE h) { ::CloseHandle(h); };$/;"	m	namespace:oneflow::fs::__anon41	file:
CloseReceiveEnd	common/channel.h	/^  void CloseReceiveEnd();$/;"	p	class:oneflow::final	access:public	signature:()
CloseReceiveEnd	common/channel.h	/^void Channel<T>::CloseReceiveEnd() {$/;"	f	class:oneflow::Channel	signature:()
CloseSendEnd	common/channel.h	/^  void CloseSendEnd();$/;"	p	class:oneflow::final	access:public	signature:()
CloseSendEnd	common/channel.h	/^void Channel<T>::CloseSendEnd() {$/;"	f	class:oneflow::Channel	signature:()
CloseStdoutAndStderr	common/util.cpp	/^void CloseStdoutAndStderr() {$/;"	f	namespace:oneflow	signature:()
CloseStdoutAndStderr	common/util.h	/^void CloseStdoutAndStderr();$/;"	p	namespace:oneflow	signature:()
Col2Im	kernel/convolution_kernel.cpp	/^  static void Col2Im(const KernelCtx& ctx, const T* data_col,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_col, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* mut_dptr)
Col2Im	kernel/convolution_kernel.h	/^  static void Col2Im(const KernelCtx& ctx, const T* data_col,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_col, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_im)
CollectCloneInfos	graph/logical_graph.cpp	/^void LogicalGraph::CollectCloneInfos($/;"	f	class:oneflow::LogicalGraph	signature:( std::vector<CloneInfo>* clone_infos, const HashMap<LogicalEdge*, std::string>& edge2lbn)
CollectCloneInfos	graph/logical_graph.h	/^  void CollectCloneInfos(std::vector<CloneInfo>* clone_infos,$/;"	p	class:oneflow::final	access:private	signature:(std::vector<CloneInfo>* clone_infos, const HashMap<LogicalEdge*, std::string>& edge2lbn)
CommNet	comm_network/comm_network.h	/^  CommNet() = default;$/;"	p	class:oneflow::CommNet	access:protected	signature:()
CommNet	comm_network/comm_network.h	/^class CommNet {$/;"	c	namespace:oneflow
CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  CommNetDeviceCtx() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  CommNetDeviceCtx(int64_t work_stream_id, void* actor_read_id)$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id, void* actor_read_id)
CommNetDeviceCtx	actor/copy_comm_net_actor.h	/^  class CommNetDeviceCtx;$/;"	x
CommNetThrdId	job/id_manager.cpp	/^int64_t IDMgr::CommNetThrdId() const {$/;"	f	class:oneflow::IDMgr	signature:() const
CommNetThrdId	job/id_manager.h	/^  int64_t CommNetThrdId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
CommNetWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::CommNetWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
CommNetWorkerNum	job/job_desc.h	/^  int32_t CommNetWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
CompActor	actor/compute_actor.h	/^  CompActor() = default;$/;"	p	class:oneflow::CompActor	access:protected	signature:()
CompActor	actor/compute_actor.h	/^class CompActor : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
CompPackedBlobDesc	register/register_desc.cpp	/^BlobDesc RegstDesc::CompPackedBlobDesc() const {$/;"	f	class:oneflow::RegstDesc	signature:() const
CompPackedBlobDesc	register/register_desc.h	/^  BlobDesc CompPackedBlobDesc() const;$/;"	p	class:oneflow::final	access:public	signature:() const
CompTaskNode	graph/compute_task_node.h	/^  CompTaskNode() = default;$/;"	p	class:oneflow::CompTaskNode	access:public	signature:()
CompTaskNode	graph/compute_task_node.h	/^class CompTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
Compile	job/compiler.cpp	/^Plan Compiler::Compile() {$/;"	f	class:oneflow::Compiler	signature:()
Compile	job/compiler.h	/^  Plan Compile();$/;"	p	class:oneflow::final	access:public	signature:()
Compiler	job/compiler.h	/^  Compiler() = default;$/;"	p	class:oneflow::final	access:private	signature:()
ComputeBiasDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeBiasDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ComputeBiasDiff	kernel/convolution_kernel.h	/^  void ComputeBiasDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ComputeInputDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeInputDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ComputeInputDiff	kernel/convolution_kernel.h	/^  void ComputeInputDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ComputeLoss	kernel/softmax_loss_kernel.cpp	/^  static void ComputeLoss(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, const PredType* prob, PredType* tmp, PredType* loss)
ComputeLoss	kernel/softmax_loss_kernel.h	/^  static void ComputeLoss(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, const PredType* prob, PredType* tmp, PredType* loss)
ComputePackedBlobDesc	register/blob_desc.cpp	/^BlobDesc ComputePackedBlobDesc(std::function<const BlobDesc*()> NextBlobDesc) {$/;"	f	namespace:oneflow	signature:(std::function<const BlobDesc*()> NextBlobDesc)
ComputePackedBlobDesc	register/blob_desc.h	/^BlobDesc ComputePackedBlobDesc(std::function<const BlobDesc*()> NextBlobDesc);$/;"	p	namespace:oneflow	signature:(std::function<const BlobDesc*()> NextBlobDesc)
ComputeWeightDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeWeightDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ComputeWeightDiff	kernel/convolution_kernel.h	/^  void ComputeWeightDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ConcatKernel	kernel/concat_kernel.h	/^  ConcatKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ConcatKernelWork	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ConcatKernelWork($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, const std::string& obn, const PbRpf<std::string>& ibns, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ConcatKernelWork	kernel/concat_kernel.h	/^  void ConcatKernelWork($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, const std::string& obn, const PbRpf<std::string>& ibns, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ConcatLbnFile	persistence/snapshot.cpp	/^void Snapshot::ConcatLbnFile(const std::string& lbn, int32_t part_num,$/;"	f	class:oneflow::Snapshot	signature:(const std::string& lbn, int32_t part_num, const std::string& concat_file)
ConcatLbnFile	persistence/snapshot.h	/^  void ConcatLbnFile(const std::string& lbn, int32_t part_num,$/;"	p	class:oneflow::final	access:private	signature:(const std::string& lbn, int32_t part_num, const std::string& concat_file)
ConcatOp	operator/concat_op.h	/^  ConcatOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ConcatSplitDataContent	kernel/boxing_kernel.cpp	/^void ConcatSplitDataContent($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& concat_bns, int32_t concat_axis, const PbRpf<std::string>& split_bns, int32_t split_axis)
ConcatSplitDataId	kernel/boxing_kernel.cpp	/^void ConcatSplitDataId(DeviceCtx* ctx,$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& concat_bns, int32_t concat_axis, const PbRpf<std::string>& split_bns, int32_t split_axis)
Connect	graph/node.h	/^  friend void Connect<NodeType, EdgeType>(NodeType* src_node, EdgeType* edge,$/;"	p	class:oneflow::Edge	access:friend	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
Connect	graph/node.h	/^  friend void Connect<NodeType, EdgeType>(NodeType* src_node, EdgeType* edge,$/;"	p	class:oneflow::Node	access:friend	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
Connect	graph/node.h	/^void Connect(NodeType* src_node, EdgeType* edge, NodeType* dst_node) {$/;"	f	namespace:oneflow	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
Connect	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::Connect(hdfsFS* fs) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(hdfsFS* fs)
Connect	persistence/hadoop/hadoop_file_system.h	/^  bool Connect(hdfsFS* fs);$/;"	p	class:oneflow::fs::final	access:private	signature:(hdfsFS* fs)
ConstantFill	kernel/kernel_util.cpp	/^void ConstantFill(const ConstantFillConf& fill_conf, Blob* blob) {$/;"	f	namespace:oneflow::__anon28	signature:(const ConstantFillConf& fill_conf, Blob* blob)
ConstructActor	thread/thread.cpp	/^void Thread::ConstructActor(int64_t actor_id, const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Thread	signature:(int64_t actor_id, const ThreadCtx& thread_ctx)
ConstructActor	thread/thread.h	/^  void ConstructActor(int64_t actor_id, const ThreadCtx& thread_ctx);$/;"	p	class:oneflow::Thread	access:private	signature:(int64_t actor_id, const ThreadCtx& thread_ctx)
ConstructBn2BlobDescFunc	kernel/opkernel_test_common.cpp	/^std::function<BlobDesc*(const std::string)> ConstructBn2BlobDescFunc($/;"	f	namespace:oneflow::test	signature:( std::shared_ptr<Operator> op)
ConstructBn2BlobDescFunc	kernel/opkernel_test_common.h	/^std::function<BlobDesc*(const std::string)> ConstructBn2BlobDescFunc($/;"	p	namespace:oneflow::test	signature:( std::shared_ptr<Operator>)
ConstructKernel	kernel/kernel.cpp	/^std::unique_ptr<const Kernel> ConstructKernel($/;"	f	namespace:oneflow	signature:( DeviceType device_type, const ParallelContext* parallel_ctx, const KernelConf& conf)
ConstructKernel	kernel/kernel.h	/^std::unique_ptr<const Kernel> ConstructKernel(DeviceType,$/;"	p	namespace:oneflow	signature:(DeviceType, const ParallelContext*, const KernelConf&)
ConstructModelUpdateOp	graph/chain_graph.cpp	/^std::shared_ptr<const Operator> ConstructModelUpdateOp() {$/;"	f	namespace:oneflow	signature:()
ConstructOp	operator/operator.cpp	/^std::shared_ptr<Operator> ConstructOp(const OperatorConf& op_conf) {$/;"	f	namespace:oneflow	signature:(const OperatorConf& op_conf)
ConstructOp	operator/operator.h	/^std::shared_ptr<Operator> ConstructOp(const OperatorConf&);$/;"	p	namespace:oneflow	signature:(const OperatorConf&)
ConstructPbRpf	kernel/boxing_kernel.cpp	/^PbRpf<std::string> ConstructPbRpf(const std::string& s) {$/;"	f	namespace:oneflow::__anon27	signature:(const std::string& s)
ConsumeAllRegsts	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
ConsumeAllRegsts	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
ConsumeAllRegsts	graph/boxing_task_node.cpp	/^void BoxingTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
ConsumeAllRegsts	graph/copy_task_node.cpp	/^void CopyTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
ConsumeAllRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
ConsumeAllRegsts	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
ConsumeAllRegsts	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
ConsumeAllRegsts	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
ConsumeAllRegsts	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::ConsumeAllRegsts() {}$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
ConsumeAllRegsts	graph/task_node.h	/^  virtual void ConsumeAllRegsts() = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
ConsumeRegst	graph/task_node.cpp	/^void TaskNode::ConsumeRegst(const std::string& name,$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name, std::shared_ptr<RegstDesc> regst)
ConsumeRegst	graph/task_node.h	/^  void ConsumeRegst(const std::string& name, std::shared_ptr<RegstDesc>);$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name, std::shared_ptr<RegstDesc>)
ConvolutionKernel	kernel/convolution_kernel.h	/^  ConvolutionKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ConvolutionKernelUtil	kernel/convolution_kernel.cpp	/^  ConvolutionKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
ConvolutionOp	operator/convolution_op.h	/^  ConvolutionOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
Copy	kernel/kernel_util.cpp	/^  static void Copy(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, T* y, const int incy)
Copy	kernel/kernel_util.h	/^  static void Copy(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, T* y, const int incy)
CopyBlobDescFrom	register/register_desc.cpp	/^void RegstDesc::CopyBlobDescFrom(const RegstDesc* rhs) {$/;"	f	class:oneflow::RegstDesc	signature:(const RegstDesc* rhs)
CopyBlobDescFrom	register/register_desc.h	/^  void CopyBlobDescFrom(const RegstDesc*);$/;"	p	class:oneflow::final	access:public	signature:(const RegstDesc*)
CopyBlobDescWithoutAddLbn	register/register_desc.cpp	/^void RegstDesc::CopyBlobDescWithoutAddLbn(const RegstDesc* rhs) {$/;"	f	class:oneflow::RegstDesc	signature:(const RegstDesc* rhs)
CopyBlobDescWithoutAddLbn	register/register_desc.h	/^  void CopyBlobDescWithoutAddLbn(const RegstDesc*);$/;"	p	class:oneflow::final	access:public	signature:(const RegstDesc*)
CopyCommNetActor	actor/copy_comm_net_actor.h	/^  CopyCommNetActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyCommNetKernel	kernel/copy_comm_net_kernel.h	/^  CopyCommNetKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyCommNetOp	operator/copy_comm_net_op.h	/^  CopyCommNetOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyCommNetTaskNode	graph/copy_task_node.h	/^  CopyCommNetTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyDataContentFrom	register/blob.cpp	/^void Blob::CopyDataContentFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyDataContentFrom	register/blob.h	/^  void CopyDataContentFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyDataContentFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyDataContentFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns)
CopyDataIdFrom	register/blob.cpp	/^void Blob::CopyDataIdFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyDataIdFrom	register/blob.h	/^  void CopyDataIdFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyDataIdFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyDataIdFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns)
CopyDataIdToAllOb	kernel/kernel.cpp	/^void KernelIf<device_type>::CopyDataIdToAllOb($/;"	f	class:oneflow::KernelIf	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const Blob* blob) const
CopyDataIdToAllOb	kernel/kernel.h	/^  void CopyDataIdToAllOb(DeviceCtx* ctx,$/;"	p	class:oneflow::KernelIf	access:protected	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const Blob* blob) const
CopyFrom	register/blob.cpp	/^void Blob::CopyFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyFrom	register/blob.h	/^  void CopyFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
CopyFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns, void (Blob::*Copy)(DeviceCtx*, const Blob*))
CopyFromIterToIter	kernel/boxing_kernel.cpp	/^void CopyFromIterToIter(DeviceCtx* ctx, Iter& src_it, Iter& dst_it) {$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, Iter& src_it, Iter& dst_it)
CopyHdActor	actor/copy_hd_actor.h	/^  CopyHdActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyHdKernel	kernel/copy_hd_kernel.h	/^  CopyHdKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyHdOp	operator/copy_hd_op.h	/^  CopyHdOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyHdTaskNode	graph/copy_task_node.h	/^  CopyHdTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CopyTaskNode	graph/copy_task_node.h	/^  CopyTaskNode() = default;$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:()
CopyTaskNode	graph/copy_task_node.h	/^class CopyTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
Count	common/shape.cpp	/^int64_t Shape::Count(int64_t begin_axis) const {$/;"	f	class:oneflow::Shape	signature:(int64_t begin_axis) const
Count	common/shape.cpp	/^int64_t Shape::Count(int64_t begin_axis, int64_t end_axis) const {$/;"	f	class:oneflow::Shape	signature:(int64_t begin_axis, int64_t end_axis) const
Count	common/shape.h	/^  int64_t Count(int64_t begin_axis) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t begin_axis) const
Count	common/shape.h	/^  int64_t Count(int64_t begin_axis, int64_t end_axis) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t begin_axis, int64_t end_axis) const
CpuDeviceCtx	device/cpu_device_context.h	/^  CpuDeviceCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
CpuDeviceCtx	device/cpu_device_context.h	/^  CpuDeviceCtx(int64_t work_stream_id) { set_work_stream_id(work_stream_id); }$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id)
CpuThread	thread/cpu_thread.cpp	/^CpuThread::CpuThread(int64_t thrd_id) {$/;"	f	class:oneflow::CpuThread	signature:(int64_t thrd_id)
CpuThread	thread/cpu_thread.h	/^  CpuThread(int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id)
CreateBlob	kernel/opkernel_test_common.cpp	/^Blob* CreateBlob<DeviceType::kCPU>(const BlobDesc* blob_desc) {$/;"	f	namespace:oneflow::test	signature:(const BlobDesc* blob_desc)
CreateBlob	kernel/opkernel_test_common.h	/^Blob* CreateBlob(const BlobDesc*);$/;"	p	namespace:oneflow::test	signature:(const BlobDesc*)
CreateBlobWithRandomVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithRandomVal(const BlobDesc* blob_desc) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc)
CreateBlobWithSameVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSameVal(const BlobDesc* blob_desc, T val) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, T val)
CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.cpp	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc* blob_desc, T* val) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, T* val)
CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc* blob_desc,$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, std::vector<T> val)
CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc*, T* val);$/;"	p	class:oneflow::test::final	access:public	signature:(const BlobDesc*, T* val)
CreateConcatKernel	kernel/concat_kernel.cpp	/^Kernel* CreateConcatKernel(DeviceType dev_type) {$/;"	f	namespace:oneflow::__anon8	signature:(DeviceType dev_type)
CreateDir	persistence/file_system.h	/^  virtual void CreateDir(const std::string& dirname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
CreateDir	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::CreateDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
CreateDir	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::CreateDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dirname)
CreateDir	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::CreateDir(const std::string& name) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& name)
CreateDirIfNotExist	persistence/file_system.cpp	/^void FileSystem::CreateDirIfNotExist(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
CreateDirIfNotExist	persistence/file_system.h	/^  void CreateDirIfNotExist(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
CreateMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.cpp	/^Kernel* CreateMultinomialLogisticLossKernel(DeviceType dev_type,$/;"	f	namespace:oneflow::__anon19	signature:(DeviceType dev_type, const KernelConf& kernel_conf)
CreateSoftmaxLossKernel	kernel/softmax_loss_kernel.cpp	/^Kernel* CreateSoftmaxLossKernel(DeviceType dev_type,$/;"	f	namespace:oneflow::__anon14	signature:(DeviceType dev_type, const KernelConf& kernel_conf)
CtrlCall	control/ctrl_call.h	/^  CtrlCall()$/;"	f	class:oneflow::final	access:public	signature:()
CtrlCallIf	control/ctrl_call.h	/^  CtrlCallIf() = default;$/;"	p	class:oneflow::CtrlCallIf	access:protected	signature:()
CtrlCallIf	control/ctrl_call.h	/^class CtrlCallIf {$/;"	c	namespace:oneflow
CtrlClient	control/ctrl_client.cpp	/^CtrlClient::CtrlClient() {$/;"	f	class:oneflow::CtrlClient	signature:()
CtrlClient	control/ctrl_client.h	/^  CtrlClient();$/;"	p	class:oneflow::final	access:private	signature:()
CtrlMethod	control/ctrl_service.h	/^enum class CtrlMethod {$/;"	c	namespace:oneflow
CtrlServer	control/ctrl_server.cpp	/^CtrlServer::CtrlServer(const std::string& server_addr) {$/;"	f	class:oneflow::CtrlServer	signature:(const std::string& server_addr)
CtrlServer	control/ctrl_server.h	/^  CtrlServer() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
CtrlServer	control/ctrl_server.h	/^  CtrlServer(const std::string& server_addr);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& server_addr)
CublasGetErrorString	device/cuda_util.cpp	/^const char* CublasGetErrorString(cublasStatus_t error) {$/;"	f	namespace:oneflow::__anon32	signature:(cublasStatus_t error)
CudaCallBackHandle	device/cuda_device_context.cpp	/^void CUDART_CB CudaCallBackHandle(cudaStream_t, cudaError_t status,$/;"	f	namespace:oneflow::__anon31	signature:(cudaStream_t, cudaError_t status, void* void_ptr)
CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cublasStatus_t error) {$/;"	f	namespace:oneflow	signature:(cublasStatus_t error)
CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cudaError_t error) {$/;"	f	namespace:oneflow	signature:(cudaError_t error)
CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cudnnStatus_t error) {$/;"	f	namespace:oneflow	signature:(cudnnStatus_t error)
CudaCheck	device/cuda_util.cpp	/^void CudaCheck(curandStatus_t error) {$/;"	f	namespace:oneflow	signature:(curandStatus_t error)
CudaCheck	device/cuda_util.h	/^void CudaCheck(T error);$/;"	p	namespace:oneflow	signature:(T error)
CudaDeviceCtx	device/cuda_device_context.h	/^  CudaDeviceCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
CudaDeviceCtx	device/cuda_device_context.h	/^  CudaDeviceCtx(int64_t work_stream_id, const cudaStream_t* cuda_stream,$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id, const cudaStream_t* cuda_stream, const cublasHandle_t* cublas_handle = nullptr, const cudnnHandle_t* cudnn_handle = nullptr)
CudaStreamHandle	device/cuda_stream_handle.h	/^  CudaStreamHandle() = default;$/;"	p	class:oneflow::final	access:public	signature:()
CurandGetErrorString	device/cuda_util.cpp	/^const char* CurandGetErrorString(curandStatus_t error) {$/;"	f	namespace:oneflow::__anon32	signature:(curandStatus_t error)
CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.cpp	/^CyclicPersistentInStream::CyclicPersistentInStream(fs::FileSystem* fs,$/;"	f	class:oneflow::CyclicPersistentInStream	signature:(fs::FileSystem* fs, const std::string& file_path)
CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  CyclicPersistentInStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  CyclicPersistentInStream(fs::FileSystem* fs, const std::string& file_path);$/;"	p	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndClone)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndDataSplit)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndModelSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndModelSplit)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(DataConcatAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndClone)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(DataConcatAndModelSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndModelSplit)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(ModelConcatAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(ModelConcatAndClone)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(ModelConcatAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(ModelConcatAndDataSplit)
DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	29;"	d
DECLARE_CTRL_METHOD_HANDLE	control/ctrl_server.h	21;"	d
DECLARE_CTRL_METHOD_HANDLE	control/ctrl_server.h	26;"	d
DECLARE_GET_DATA_TYPE	common/data_type.h	51;"	d
DECLARE_GET_SIZE_OF	common/data_type.h	61;"	d
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(bool, Bool);$/;"	p	namespace:oneflow	signature:(bool, Bool)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(const PbMessage&, Message);$/;"	p	namespace:oneflow	signature:(const PbMessage&, Message)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(int32_t, Int32);$/;"	p	namespace:oneflow	signature:(int32_t, Int32)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(int64_t, Int64);$/;"	p	namespace:oneflow	signature:(int64_t, Int64)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(std::string, String);$/;"	p	namespace:oneflow	signature:(std::string, String)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(uint32_t, UInt32);$/;"	p	namespace:oneflow	signature:(uint32_t, UInt32)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(uint64_t, UInt64);$/;"	p	namespace:oneflow	signature:(uint64_t, UInt64)
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	28;"	d
DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	40;"	d
DECLARE_RPC_METHOD	control/ctrl_service.h	54;"	d
DECLARE_RPC_METHOD	control/ctrl_service.h	56;"	d
DECLARE_STUB_METHOD	control/ctrl_service.h	44;"	d
DECLARE_STUB_METHOD	control/ctrl_service.h	51;"	d
DECLARE_VIRTUAL_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_VIRTUAL_BLD_BOXING_OP_CONF_METHOD(DataConcatAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndDataSplit)
DECLARE_VIRTUAL_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	35;"	d
DECLARE_VIRTUAL_FROM_METHOD	graph/chain_node.h	73;"	d
DECLARE_VIRTUAL_METHOD	graph/chain_node.h	81;"	d
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndClone)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndDataSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndDataSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndModelSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndModelSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, DataConcatAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, DataConcatAndClone)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, DataConcatAndModelSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, DataConcatAndModelSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, ModelConcatAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, ModelConcatAndClone)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, ModelConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, ModelConcatAndDataSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(InBoxingTaskNode, DataConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(InBoxingTaskNode, DataConcatAndDataSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(OutBoxingTaskNode, DataConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(OutBoxingTaskNode, DataConcatAndDataSplit)
DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	46;"	d	file:
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(data_tmp_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(data_tmp_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(input_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(input_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(input_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(input_diff_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_diff_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_tmp_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_tmp_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(output_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(output_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(output_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(output_diff_bns)
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	69;"	d
DEFINE_BLOB_NAMES_GETTER	operator/operator.h	81;"	d
DEFINE_FLOATING_CLONE_KERNEL_UTIL	kernel/clone_kernel.cpp	42;"	d	file:
DEFINE_GET_DATA_TYPE_VAL	common/data_type.cpp	24;"	d	file:
DEFINE_GET_SIZE_OF_VAL	common/data_type.cpp	28;"	d	file:
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(bool, Bool);$/;"	p	namespace:oneflow	file:	signature:(bool, Bool)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(const PbMessage&, Message);$/;"	p	namespace:oneflow	file:	signature:(const PbMessage&, Message)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(int32_t, Int32);$/;"	p	namespace:oneflow	file:	signature:(int32_t, Int32)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(int64_t, Int64);$/;"	p	namespace:oneflow	file:	signature:(int64_t, Int64)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(std::string, String);$/;"	p	namespace:oneflow	file:	signature:(std::string, String)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(uint32_t, UInt32);$/;"	p	namespace:oneflow	file:	signature:(uint32_t, UInt32)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(uint64_t, UInt64);$/;"	p	namespace:oneflow	file:	signature:(uint64_t, UInt64)
DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	32;"	d	file:
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(bool, Bool);$/;"	p	class:oneflow::Operator	access:public	signature:(bool, Bool)
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(const PbMessage&, Message);$/;"	p	class:oneflow::Operator	access:public	signature:(const PbMessage&, Message)
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(int32_t, Int32);$/;"	p	class:oneflow::Operator	access:public	signature:(int32_t, Int32)
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(int64_t, Int64);$/;"	p	class:oneflow::Operator	access:public	signature:(int64_t, Int64)
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(std::string, String);$/;"	p	class:oneflow::Operator	access:public	signature:(std::string, String)
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	43;"	d
DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	61;"	d
DEFINE_INT_KERNEL_UTIL	kernel/kernel_util.cpp	172;"	d	file:
DEFINE_METHOD_NAME	control/ctrl_service.cpp	9;"	d	file:
DEFINE_NONFLOAT_CLONE_KERNEL_UTIL	kernel/clone_kernel.cpp	56;"	d	file:
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(int, strtol);$/;"	p	namespace:oneflow	file:	signature:(int, strtol)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(long long, strtoll);$/;"	p	namespace:oneflow	file:	signature:(long long, strtoll)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(long, strtol);$/;"	p	namespace:oneflow	file:	signature:(long, strtol)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(short, strtol);$/;"	p	namespace:oneflow	file:	signature:(short, strtol)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(signed char, strtol);$/;"	p	namespace:oneflow	file:	signature:(signed char, strtol)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned char, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned char, strtoul)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned int, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned int, strtoul)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned long long, strtoull);$/;"	p	namespace:oneflow	file:	signature:(unsigned long long, strtoull)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned long, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned long, strtoul)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned short, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned short, strtoul)
DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	7;"	d	file:
DEFINE_STUB_METHOD	control/ctrl_service.cpp	28;"	d	file:
DEFINE_VIRTUAL_METHOD	graph/chain_node.cpp	139;"	d	file:
DEVICE_TYPE_SEQ	common/util.h	141;"	d
DataContentIterator	kernel/boxing_kernel.cpp	/^  DataContentIterator() = delete;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
DataContentIterator	kernel/boxing_kernel.cpp	/^  DataContentIterator(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::__anon27::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>* bns, int32_t axis)
DataIdIterator	kernel/boxing_kernel.cpp	/^  DataIdIterator() = delete;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
DataIdIterator	kernel/boxing_kernel.cpp	/^  DataIdIterator(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::__anon27::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>* bns, int32_t axis)
DataLoaderKernel	kernel/data_loader_kernel.h	/^  DataLoaderKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
DataLoaderOp	operator/data_loader_op.h	/^  DataLoaderOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
DataMergeChains	graph/chain_graph.cpp	/^void DataMergeChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
Deallocate	memory/memory_allocator.cpp	/^void MemoryAllocator::Deallocate(char* dptr, const void* comm_net_token,$/;"	f	class:oneflow::MemoryAllocator	signature:(char* dptr, const void* comm_net_token, MemoryCase mem_case)
Deallocate	memory/memory_allocator.h	/^  void Deallocate(char* dptr, const void*, MemoryCase mem_case);$/;"	p	class:oneflow::final	access:private	signature:(char* dptr, const void*, MemoryCase mem_case)
DebugStr	common/shape.cpp	/^std::string Shape::DebugStr() const {$/;"	f	class:oneflow::Shape	signature:() const
DebugStr	common/shape.h	/^  std::string DebugStr() const;$/;"	p	class:oneflow::final	access:public	signature:() const
Decrease	common/blocking_counter.h	/^  int64_t Decrease() {$/;"	f	class:oneflow::final	access:public	signature:()
DecreaseCounter	job/runtime_context.cpp	/^void RuntimeCtx::DecreaseCounter(const std::string& name) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name)
DecreaseCounter	job/runtime_context.h	/^  void DecreaseCounter(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
DecreaseRemainingEordCnt	actor/actor.cpp	/^void Actor::DecreaseRemainingEordCnt() { remaining_eord_cnt_ -= 1; }$/;"	f	class:oneflow::Actor	signature:()
DecreaseRemainingEordCnt	actor/actor.h	/^  void DecreaseRemainingEordCnt();$/;"	p	class:oneflow::Actor	access:protected	signature:()
DefaultDataType	job/job_desc.h	/^  DataType DefaultDataType() const { return job_conf_.default_data_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
DefaultFillConf	job/job_desc.cpp	/^const FillConf* JobDesc::DefaultFillConf() const {$/;"	f	class:oneflow::JobDesc	signature:() const
DefaultFillConf	job/job_desc.h	/^  const FillConf* DefaultFillConf() const;$/;"	p	class:oneflow::final	access:public	signature:() const
DelFile	persistence/file_system.h	/^  virtual void DelFile(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
DelFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
DelFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
DelFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
DeleteActorReadId	comm_network/comm_network.h	/^  virtual void DeleteActorReadId(void* actor_read_id) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id)
DeleteActorReadId	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::DeleteActorReadId(void* actor_read_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id)
DeleteActorReadId	comm_network/epoll/epoll_comm_network.h	/^  void DeleteActorReadId(void* actor_read_id);$/;"	p	class:oneflow::final	access:public	signature:(void* actor_read_id)
DeleteAllSingleton	job/runtime.cpp	/^void Runtime::DeleteAllSingleton() {$/;"	f	class:oneflow::Runtime	signature:()
DeleteAllSingleton	job/runtime.h	/^  void DeleteAllSingleton();$/;"	p	class:oneflow::final	access:private	signature:()
DeleteDir	persistence/file_system.h	/^  virtual void DeleteDir(const std::string& dirname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
DeleteDir	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::DeleteDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
DeleteDir	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::DeleteDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dirname)
DeleteDir	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::DeleteDir(const std::string& name) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& name)
Deserialize	actor/actor_message.h	/^  void Deserialize(StreamT& in_stream) {$/;"	f	class:oneflow::final	access:public	signature:(StreamT& in_stream)
DeviceCtx	device/device_context.h	/^  DeviceCtx()$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:()
DeviceCtx	device/device_context.h	/^class DeviceCtx {$/;"	c	namespace:oneflow
Dirname	common/str_util.cpp	/^std::string Dirname(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
Dirname	common/str_util.h	/^std::string Dirname(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
DisConnect	graph/node.h	/^  friend void DisConnect<EdgeType>(EdgeType* edge);$/;"	p	class:oneflow::Edge	access:friend	signature:(EdgeType* edge)
DisConnect	graph/node.h	/^  friend void DisConnect<EdgeType>(EdgeType* edge);$/;"	p	class:oneflow::Node	access:friend	signature:(EdgeType* edge)
DisConnect	graph/node.h	/^void DisConnect(EdgeType* edge) {$/;"	f	namespace:oneflow	signature:(EdgeType* edge)
DisconnectAllEdges	graph/node.h	/^  void DisconnectAllEdges() {$/;"	f	class:oneflow::Node	access:public	signature:()
Div	kernel/kernel_util.cpp	/^  static void Div(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha)
Div	kernel/kernel_util.h	/^  static void Div(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha)
DoCompile	job/compiler.cpp	/^Plan Compiler::DoCompile() {$/;"	f	class:oneflow::Compiler	signature:()
DoCompile	job/compiler.h	/^  Plan DoCompile();$/;"	p	class:oneflow::final	access:private	signature:()
DoCurRead	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::DoCurRead($/;"	f	class:oneflow::SocketReadHelper	signature:( void (SocketReadHelper::*set_cur_read_done)())
DoCurRead	comm_network/epoll/socket_read_helper.h	/^  bool DoCurRead(void (SocketReadHelper::*set_cur_read_done)());$/;"	p	class:oneflow::final	access:private	signature:(void (SocketReadHelper::*set_cur_read_done)())
DoCurWrite	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::DoCurWrite($/;"	f	class:oneflow::SocketWriteHelper	signature:( void (SocketWriteHelper::*set_cur_write_done)())
DoCurWrite	comm_network/epoll/socket_write_helper.h	/^  bool DoCurWrite(void (SocketWriteHelper::*set_cur_write_done)());$/;"	p	class:oneflow::final	access:private	signature:(void (SocketWriteHelper::*set_cur_write_done)())
DoOneDataMerge	graph/chain_graph.cpp	/^bool DoOneDataMerge(const std::vector<const LogicalNode*>& data_parallel_node,$/;"	f	namespace:oneflow::__anon43	signature:(const std::vector<const LogicalNode*>& data_parallel_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
Dot	kernel/kernel_util.cpp	/^  static void Dot(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, const T* y, const int incy, T* result)
Dot	kernel/kernel_util.h	/^  static void Dot(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, const T* y, const int incy, T* result)
EINTERNAL	persistence/hadoop/hdfs.h	42;"	d
ELASTIC_BYTE_BUFFER_POOL_CLASS	persistence/hadoop/hdfs.h	45;"	d
ENQUEUE_REQUEST	control/ctrl_server.cpp	37;"	d	file:
ERASE_BNS	operator/boxing_op.cpp	22;"	d	file:
Edge	graph/node.h	/^  Edge() {$/;"	f	class:oneflow::Edge	access:public	signature:()
Edge	graph/node.h	/^class Edge {$/;"	c	namespace:oneflow
EdgeInfo	graph/boxing_task_node.h	/^  struct EdgeInfo {$/;"	s	class:oneflow::BoxingTaskNode	access:public
EnrollDataTmpBn	operator/operator.cpp	/^void Operator::EnrollDataTmpBn(const std::string& dtbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& dtbn)
EnrollDataTmpBn	operator/operator.h	/^  void EnrollDataTmpBn(const std::string& dtbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& dtbn)
EnrollInputBn	operator/operator.cpp	/^void Operator::EnrollInputBn(const std::string& ibn, bool has_diff) {$/;"	f	class:oneflow::Operator	signature:(const std::string& ibn, bool has_diff)
EnrollInputBn	operator/operator.h	/^  void EnrollInputBn(const std::string& ibn) { EnrollInputBn(ibn, true); }$/;"	f	class:oneflow::Operator	access:protected	signature:(const std::string& ibn)
EnrollInputBn	operator/operator.h	/^  void EnrollInputBn(const std::string& ibn, bool has_diff);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& ibn, bool has_diff)
EnrollModelBn	operator/operator.cpp	/^void Operator::EnrollModelBn(const std::string& mbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& mbn)
EnrollModelBn	operator/operator.h	/^  void EnrollModelBn(const std::string& mbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& mbn)
EnrollModelTmpBn	operator/operator.cpp	/^void Operator::EnrollModelTmpBn(const std::string& mtbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& mtbn)
EnrollModelTmpBn	operator/operator.h	/^  void EnrollModelTmpBn(const std::string& mtbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& mtbn)
EnrollOutputBn	operator/operator.cpp	/^void Operator::EnrollOutputBn(const std::string& obn, bool has_diff) {$/;"	f	class:oneflow::Operator	signature:(const std::string& obn, bool has_diff)
EnrollOutputBn	operator/operator.h	/^  void EnrollOutputBn(const std::string& obn) { EnrollOutputBn(obn, true); }$/;"	f	class:oneflow::Operator	access:protected	signature:(const std::string& obn)
EnrollOutputBn	operator/operator.h	/^  void EnrollOutputBn(const std::string& obn, bool has_diff);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& obn, bool has_diff)
EpollCommNet	comm_network/epoll/epoll_comm_network.cpp	/^EpollCommNet::EpollCommNet() {$/;"	f	class:oneflow::EpollCommNet	signature:()
EpollCommNet	comm_network/epoll/epoll_comm_network.h	/^  EpollCommNet();$/;"	p	class:oneflow::final	access:private	signature:()
EpollLoop	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::EpollLoop() {$/;"	f	class:oneflow::IOEventPoller	signature:()
EpollLoop	comm_network/epoll/io_event_poller.h	/^  void EpollLoop();$/;"	p	class:oneflow::final	access:private	signature:()
Equal	job/parallel_desc.cpp	/^bool ParallelDesc::Equal(const ParallelDesc& rhs) const {$/;"	f	class:oneflow::ParallelDesc	signature:(const ParallelDesc& rhs) const
Equal	job/parallel_desc.h	/^  bool Equal(const ParallelDesc& rhs) const;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const ParallelDesc& rhs) const
Equal	job/parallel_desc.h	/^  bool Equal(const ParallelDesc* rhs) const { return Equal(*rhs); }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(const ParallelDesc* rhs) const
EraseEmptyBnInVec	operator/boxing_op.cpp	/^void EraseEmptyBnInVec($/;"	f	namespace:oneflow::__anon3	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, PbRpf<std::string>* bns)
EraseEmptyProducedRegst	graph/task_node.cpp	/^void TaskNode::EraseEmptyProducedRegst() {$/;"	f	class:oneflow::TaskNode	signature:()
EraseEmptyProducedRegst	graph/task_node.h	/^  void EraseEmptyProducedRegst();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
EraseIf	common/util.h	/^void EraseIf(HashMap<K, V>* hash_map,$/;"	f	namespace:oneflow	signature:(HashMap<K, V>* hash_map, std::function<bool(typename HashMap<K, V>::iterator)> cond)
EraseZeroSizeBlob	register/register_desc.cpp	/^void RegstDesc::EraseZeroSizeBlob() {$/;"	f	class:oneflow::RegstDesc	signature:()
EraseZeroSizeBlob	register/register_desc.h	/^  void EraseZeroSizeBlob();$/;"	p	class:oneflow::final	access:public	signature:()
ExecEdge	graph/exec_graph.h	/^  ExecEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ExecGraph	graph/exec_graph.h	/^  ExecGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ExecKernel	actor/actor.h	/^  struct ExecKernel {$/;"	s	class:oneflow::Actor	access:protected
ExecNode	graph/exec_graph.h	/^  ExecNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ExecNode	graph/exec_graph.h	/^class ExecNode;$/;"	x
Exp	kernel/kernel_util.cpp	/^  static void Exp(DeviceCtx* ctx, const int64_t n, const T* x, T* y) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* y)
Exp	kernel/kernel_util.h	/^  static void Exp(DeviceCtx* ctx, const int64_t n, const T* x, T* y);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* y)
ExtractPortFromAddr	control/ctrl_server.cpp	/^int ExtractPortFromAddr(const std::string& addr) {$/;"	f	namespace:oneflow::__anon39	signature:(const std::string& addr)
FILE_LINE_STR	control/ctrl_client.h	47;"	d
FLOATING_DATA_TYPE_SEQ	common/data_type.h	10;"	d
FOR_EACH	common/util.h	149;"	d
FOR_RANGE	common/util.h	148;"	d
FS_RETURN_FALSE_IF_FALSE	persistence/hadoop/hadoop_file_system.cpp	18;"	d	file:
FileExists	persistence/file_system.h	/^  virtual bool FileExists(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
FileExists	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
FileExists	persistence/posix/posix_file_system.cpp	/^bool PosixFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
FileExists	persistence/windows/windows_file_system.cpp	/^bool WindowsFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
FileSystem	persistence/file_system.h	/^  FileSystem() = default;$/;"	p	class:oneflow::fs::FileSystem	access:protected	signature:()
FileSystem	persistence/file_system.h	/^class FileSystem {$/;"	c	namespace:oneflow::fs
Fill	kernel/kernel_util.cpp	/^  static void Fill(DeviceCtx* ctx, const FillConf& fill_conf,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf& fill_conf, uint32_t random_seed, Blob* blob)
Fill	kernel/kernel_util.h	/^  static void Fill(DeviceCtx* ctx, const FillConf& fill_conf,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf& fill_conf, uint32_t random_seed, Blob* blob)
FillNodeWithParallelDesc	graph/logical_graph.cpp	/^void LogicalGraph::FillNodeWithParallelDesc() {$/;"	f	class:oneflow::LogicalGraph	signature:()
FillNodeWithParallelDesc	graph/logical_graph.h	/^  void FillNodeWithParallelDesc();$/;"	p	class:oneflow::final	access:private	signature:()
FillWithModelDir	kernel/kernel_util.cpp	/^  static void FillWithModelDir(DeviceCtx* ctx, int32_t part_id,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, int32_t part_id, int32_t part_num, const std::string& model_dir, Blob* blob, const std::string& bn_in_op, int32_t dim_num, int64_t num_in_each_dim)
FillWithModelDir	kernel/kernel_util.h	/^  static void FillWithModelDir(DeviceCtx* ctx, int32_t part_id,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, int32_t part_id, int32_t part_num, const std::string& model_dir, Blob* blob, const std::string& bn_in_op, int32_t dim_num, int64_t num_in_each_dim)
FillWithProperConf	kernel/kernel_util.h	/^  static void FillWithProperConf(DeviceCtx* ctx, const FillConf* fill_conf,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf* fill_conf, uint32_t random_seed, Blob* blob)
FindIntersectant	common/range.cpp	/^Range FindIntersectant(const Range& lhs, const Range& rhs) {$/;"	f	namespace:oneflow	signature:(const Range& lhs, const Range& rhs)
FindIntersectant	common/range.h	/^Range FindIntersectant(const Range& lhs, const Range& rhs);$/;"	p	namespace:oneflow	signature:(const Range& lhs, const Range& rhs)
FindLbnsBetween	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetween(const ChainNode* in_chain,$/;"	f	namespace:oneflow	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
FindLbnsBetween	graph/chain_node.h	/^std::vector<std::string> FindLbnsBetween(const ChainNode* in_chain,$/;"	p	namespace:oneflow	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
FindLbnsBetweenBw	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenBw(const ChainNode* in_chain,$/;"	f	namespace:oneflow::__anon44	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
FindLbnsBetweenChainPair	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenChainPair($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const std::vector<std::string>& (Operator::*GetOutLbns)() const, const ChainNode* out_chain, const std::vector<std::string>& (Operator::*GetInLbns)() const)
FindLbnsBetweenFw	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenFw(const ChainNode* in_chain,$/;"	f	namespace:oneflow::__anon44	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
FindLbnsFromBackward	graph/chain_node.cpp	/^std::vector<std::string> BackwardChainNode::FindLbnsFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> ForwardChainNode::FindLbnsFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> LossChainNode::FindLbnsFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
FindLbnsFromLoss	graph/chain_node.cpp	/^std::vector<std::string> BackwardChainNode::FindLbnsFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
FindLbnsFromLoss	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
FindLbnsFromLossAcc	graph/chain_node.cpp	/^std::vector<std::string> LossPrintChainNode::FindLbnsFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
FindLbnsFromMdDiffAcc	graph/chain_node.cpp	/^std::vector<std::string> MdUpdtChainNode::FindLbnsFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> ForwardChainNode::FindLbnsFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> LossChainNode::FindLbnsFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
FindLbnsTo	graph/chain_node.h	/^  virtual std::vector<std::string> FindLbnsTo(const ChainNode*) const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:(const ChainNode*) const
FinishOneReadContext	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::FinishOneReadContext(ActorReadContext* actor_read_ctx,$/;"	f	class:oneflow::EpollCommNet	signature:(ActorReadContext* actor_read_ctx, ReadContext* read_ctx)
FinishOneReadContext	comm_network/epoll/epoll_comm_network.h	/^  void FinishOneReadContext(ActorReadContext*, ReadContext*);$/;"	p	class:oneflow::final	access:private	signature:(ActorReadContext*, ReadContext*)
FixCompTaskNode	graph/chain_node.cpp	/^void MdUpdtChainNode::FixCompTaskNode(CompTaskNode* node) const {$/;"	f	class:oneflow::MdUpdtChainNode	signature:(CompTaskNode* node) const
FixCompTaskNode	graph/chain_node.h	/^  virtual void FixCompTaskNode(CompTaskNode*) const {}$/;"	f	class:oneflow::ChainNode	access:protected	signature:(CompTaskNode*) const
FixParallelDesc	operator/operator.cpp	/^void Operator::FixParallelDesc(ParallelDesc* pr_desc) const {$/;"	f	class:oneflow::Operator	signature:(ParallelDesc* pr_desc) const
FixParallelDesc	operator/operator.h	/^  void FixParallelDesc(ParallelDesc* pr_desc) const;$/;"	p	class:oneflow::Operator	access:public	signature:(ParallelDesc* pr_desc) const
FixThrdId	graph/compute_task_node.h	/^  virtual void FixThrdId() {}$/;"	f	class:oneflow::CompTaskNode	access:public	signature:()
FixThrdId	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::FixThrdId() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
FixThrdId	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::FixThrdId() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
Flush	persistence/file_system.h	/^  virtual void Flush() = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
Flush	persistence/persistent_out_stream.cpp	/^void PersistentOutStream::Flush() { file_->Flush(); }$/;"	f	class:oneflow::PersistentOutStream	signature:()
Flush	persistence/persistent_out_stream.h	/^  void Flush();$/;"	p	class:oneflow::final	access:public	signature:()
ForEachChainNode	graph/chain_graph.h	/^  void ForEachChainNode(std::function<void(ChainNodeType*)> Handler) {$/;"	f	class:oneflow::final	access:private	signature:(std::function<void(ChainNodeType*)> Handler)
ForEachEdge	graph/graph.h	/^  void ForEachEdge(std::function<void(EdgeType*)> EdgeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(EdgeType*)> EdgeHandler) const
ForEachEdge	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachEdge($/;"	f	class:oneflow::Graph	signature:( std::function<void(EdgeType*)> EdgeHandler) const
ForEachLbn	register/register_desc.cpp	/^void RegstDesc::ForEachLbn(std::function<void(const std::string&)> func) const {$/;"	f	class:oneflow::RegstDesc	signature:(std::function<void(const std::string&)> func) const
ForEachLbn	register/register_desc.h	/^  void ForEachLbn(std::function<void(const std::string&)> func) const;$/;"	p	class:oneflow::final	access:public	signature:(std::function<void(const std::string&)> func) const
ForEachNode	graph/graph.h	/^  void ForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
ForEachNode	graph/graph.h	/^  void ForEachNode(std::function<void(NodeType*)> NodeHandler,$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler, std::function<bool(NodeType*)> IsNodeReady) const
ForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
ForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler, std::function<bool(NodeType*)> IsNodeReady) const
ForEachNodeOnInEdge	graph/node.h	/^  void ForEachNodeOnInEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
ForEachNodeOnInOutEdge	graph/node.h	/^  void ForEachNodeOnInOutEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
ForEachNodeOnOutEdge	graph/node.h	/^  void ForEachNodeOnOutEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
Forward	kernel/clone_kernel.cpp	/^void CloneKernel<device_type, T>::Forward($/;"	f	class:oneflow::CloneKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/copy_hd_kernel.cpp	/^void CopyHdKernel::Forward($/;"	f	class:oneflow::CopyHdKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/data_loader_kernel.cpp	/^void DataLoaderKernel<T>::Forward($/;"	f	class:oneflow::DataLoaderKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/kernel.cpp	/^void Kernel::Forward($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/kernel.h	/^  virtual void Forward($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/loss_print_kernel.cpp	/^void LossPrintKernel<T>::Forward($/;"	f	class:oneflow::LossPrintKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/model_save_kernel.cpp	/^void ModelSaveKernel::Forward($/;"	f	class:oneflow::ModelSaveKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/momentum_model_update_kernel.cpp	/^void MomentumMdUpdateKernel<device_type, T>::Forward($/;"	f	class:oneflow::MomentumMdUpdateKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/multinomial_logistic_loss_kernel.cpp	/^  static void Forward(DeviceCtx* ctx, const int64_t instance_num,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* loss, PredType* loss_buff)
Forward	kernel/multinomial_logistic_loss_kernel.h	/^  static void Forward(DeviceCtx* ctx, const int64_t instance_num,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* loss, PredType* loss_buff)
Forward	kernel/print_kernel.cpp	/^void PrintKernel::Forward($/;"	f	class:oneflow::PrintKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Forward	kernel/relu_kernel.cpp	/^  static void Forward(const KernelCtx& ctx, const int64_t n, const T* in,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* in, T* out)
Forward	kernel/relu_kernel.h	/^  static void Forward(const KernelCtx& ctx, const int64_t n, const T* in,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* in, T* out)
ForwardCompActor	actor/forward_compute_actor.h	/^  ForwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ForwardCompTaskNode	graph/forward_compute_task_node.h	/^  ForwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ForwardDataContent	kernel/accumulate_kernel.cpp	/^void AccumulateKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::AccumulateKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::ForwardDataContent($/;"	f	class:oneflow::BoxingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ForwardDataContent($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/kernel.h	/^  virtual void ForwardDataContent($/;"	f	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/multinomial_logistic_loss_kernel.cpp	/^    ForwardDataContent($/;"	f	class:oneflow::MultinomialLogisticLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/pooling_kernel.cpp	/^void PoolingKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::PoolingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/relu_kernel.cpp	/^void ReluKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::ReluKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/softmax_kernel.cpp	/^void SoftmaxKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::SoftmaxKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataContent	kernel/softmax_loss_kernel.cpp	/^void SoftmaxLossKernel<device_type, PredType, LabelType>::ForwardDataContent($/;"	f	class:oneflow::SoftmaxLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::ForwardDataId($/;"	f	class:oneflow::BoxingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ForwardDataId($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/kernel.cpp	/^void KernelIf<device_type>::ForwardDataId($/;"	f	class:oneflow::KernelIf	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/kernel.h	/^  virtual void ForwardDataId($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/multinomial_logistic_loss_kernel.cpp	/^    ForwardDataId(const KernelCtx& ctx,$/;"	f	class:oneflow::MultinomialLogisticLossKernel	signature:(const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardDataId	kernel/softmax_loss_kernel.cpp	/^void SoftmaxLossKernel<device_type, PredType, LabelType>::ForwardDataId($/;"	f	class:oneflow::SoftmaxLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
ForwardMax	kernel/softmax_kernel.cpp	/^  static void ForwardMax(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
ForwardMax	kernel/softmax_kernel.h	/^  static void ForwardMax(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
ForwardSum	kernel/softmax_kernel.cpp	/^  static void ForwardSum(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
ForwardSum	kernel/softmax_kernel.h	/^  static void ForwardSum(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
GaussianFill	kernel/kernel_util.cpp	/^void GaussianFill(const GaussianFillConf& fill_conf, uint32_t random_seed,$/;"	f	namespace:oneflow::__anon28	signature:(const GaussianFillConf& fill_conf, uint32_t random_seed, Blob* blob)
Gemm	kernel/kernel_util.cpp	/^  static void Gemm(DeviceCtx* ctx, const enum CBLAS_ORDER order,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const T alpha, const T* a, const int lda, const T* b, const int ldb, const T beta, T* c, const int ldc)
Gemm	kernel/kernel_util.h	/^  static void Gemm(DeviceCtx* ctx, const enum CBLAS_ORDER order,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const T alpha, const T* a, const int lda, const T* b, const int ldb, const T beta, T* c, const int ldc)
Gemv	kernel/kernel_util.cpp	/^  static void Gemv(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m, int n, const T alpha, const T* a, int lda, const T* x, const int incx, const T beta, T* y, const int incy)
Gemv	kernel/kernel_util.h	/^  static void Gemv(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m, int n, const T alpha, const T* a, int lda, const T* x, const int incx, const T beta, T* y, const int incy)
GenDefaultKernelCtx	actor/actor.cpp	/^KernelCtx Actor::GenDefaultKernelCtx() const {$/;"	f	class:oneflow::Actor	signature:() const
GenDefaultKernelCtx	actor/actor.h	/^  KernelCtx GenDefaultKernelCtx() const;$/;"	p	class:oneflow::Actor	access:protected	signature:() const
GenDiffBn	operator/operator.cpp	/^std::string GenDiffBn(const std::string& bn) { return bn + "_diff"; }$/;"	f	namespace:oneflow	signature:(const std::string& bn)
GenDiffBn	operator/operator.h	/^std::string GenDiffBn(const std::string& bn);$/;"	p	namespace:oneflow	signature:(const std::string& bn)
GenKernelConf	operator/operator.cpp	/^void Operator::GenKernelConf($/;"	f	class:oneflow::Operator	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, bool is_forward, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
GenKernelConf	operator/operator.h	/^  void GenKernelConf($/;"	p	class:oneflow::Operator	access:public	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, bool is_forward, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
GenPortKey	comm_network/epoll/epoll_comm_network.cpp	/^std::string GenPortKey(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
GenSinkKernelCtx	actor/model_save_compute_actor.cpp	/^KernelCtx MdSaveCompActor::GenSinkKernelCtx() {$/;"	f	class:oneflow::MdSaveCompActor	signature:()
GenSinkKernelCtx	actor/sink_compute_actor.h	/^  virtual KernelCtx GenSinkKernelCtx() { return GenDefaultKernelCtx(); }$/;"	f	class:oneflow::SinkCompActor	access:protected	signature:()
GenSortedCompTaskNodes	graph/chain_node.cpp	/^void ChainNode::GenSortedCompTaskNodes(CompTaskNodeHandler Handler) const {$/;"	f	class:oneflow::ChainNode	signature:(CompTaskNodeHandler Handler) const
GenSortedCompTaskNodes	graph/chain_node.h	/^  void GenSortedCompTaskNodes(CompTaskNodeHandler) const;$/;"	p	class:oneflow::ChainNode	access:public	signature:(CompTaskNodeHandler) const
GenUnDiffBn	operator/operator.cpp	/^std::string GenUnDiffBn(const std::string& diff_bn) {$/;"	f	namespace:oneflow	signature:(const std::string& diff_bn)
GenUnDiffBn	operator/operator.h	/^std::string GenUnDiffBn(const std::string& diff_bn);$/;"	p	namespace:oneflow	signature:(const std::string& diff_bn)
GetBldBoxingOpConfMethodByBwParallelPolicy	graph/chain_node.cpp	/^BldBoxingOpConfMthd GetBldBoxingOpConfMethodByBwParallelPolicy($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const ChainNode* out_chain)
GetBldBoxingOpConfMethodByFwParallelPolicy	graph/chain_node.cpp	/^BldBoxingOpConfMthd GetBldBoxingOpConfMethodByFwParallelPolicy($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const ChainNode* out_chain)
GetBlobByLbn	register/register.cpp	/^Blob* Regst::GetBlobByLbn(const std::string& lbn) {$/;"	f	class:oneflow::Regst	signature:(const std::string& lbn)
GetBlobByLbn	register/register.h	/^  Blob* GetBlobByLbn(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
GetBlobDesc	register/register_desc.cpp	/^const BlobDesc* RegstDesc::GetBlobDesc(const std::string& lbn) const {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn) const
GetBlobDesc	register/register_desc.h	/^  const BlobDesc* GetBlobDesc(const std::string& lbn) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn) const
GetBlobDesc4BnInOp	graph/exec_graph.cpp	/^BlobDesc* ExecNode::GetBlobDesc4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::ExecNode	signature:(const std::string& bn_in_op) const
GetBlobDesc4BnInOp	graph/exec_graph.h	/^  BlobDesc* GetBlobDesc4BnInOp(const std::string&) const;$/;"	p	class:oneflow::final	access:private	signature:(const std::string&) const
GetBlobDesc4BnInOpFunc	graph/exec_graph.cpp	/^std::function<BlobDesc*(const std::string&)> ExecNode::GetBlobDesc4BnInOpFunc()$/;"	f	class:oneflow::ExecNode	signature:() const
GetBlobDesc4BnInOpFunc	graph/exec_graph.h	/^  std::function<BlobDesc*(const std::string&)> GetBlobDesc4BnInOpFunc() const;$/;"	p	class:oneflow::final	access:public	signature:() const
GetBlobDescFromLbn	register/runtime_register_desc.cpp	/^const BlobDesc* RtRegstDesc::GetBlobDescFromLbn(const std::string& lbn) const {$/;"	f	class:oneflow::RtRegstDesc	signature:(const std::string& lbn) const
GetBlobDescFromLbn	register/runtime_register_desc.h	/^  const BlobDesc* GetBlobDescFromLbn(const std::string& lbn) const;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(const std::string& lbn) const
GetBnInOpFromLbn	operator/operator.cpp	/^std::string GetBnInOpFromLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
GetBnInOpFromLbn	operator/operator.h	/^std::string GetBnInOpFromLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
GetConsumedRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::GetConsumedRegst(const std::string& name) {$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name)
GetConsumedRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetConsumedRegst(const std::string& name);$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name)
GetCreatorsMap	kernel/kernel.cpp	/^HashMap<int, KernelCreator1>& GetCreatorsMap() {$/;"	f	namespace:oneflow::__anon16	signature:()
GetCtrlAddr	job/machine_context.cpp	/^std::string MachineCtx::GetCtrlAddr(int64_t machine_id) const {$/;"	f	class:oneflow::MachineCtx	signature:(int64_t machine_id) const
GetCtrlAddr	job/machine_context.h	/^  std::string GetCtrlAddr(int64_t machine_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id) const
GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind;$/;"	x
GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind<DeviceType::kCPU> {$/;"	s	namespace:oneflow
GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind<DeviceType::kGPU> {$/;"	s	namespace:oneflow
GetCurSoleWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurSoleWriteableRegst() {$/;"	f	class:oneflow::Actor	signature:()
GetCurSoleWriteableRegst	actor/actor.h	/^  Regst* GetCurSoleWriteableRegst();$/;"	p	class:oneflow::Actor	access:protected	signature:()
GetCurTime	common/util.h	/^inline double GetCurTime() {$/;"	f	namespace:oneflow	signature:()
GetCurWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurWriteableRegst(const std::string& name) {$/;"	f	class:oneflow::Actor	signature:(const std::string& name)
GetCurWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurWriteableRegst(int64_t regst_desc_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t regst_desc_id)
GetCurWriteableRegst	actor/actor.h	/^  Regst* GetCurWriteableRegst(const std::string& name);$/;"	p	class:oneflow::Actor	access:protected	signature:(const std::string& name)
GetCurWriteableRegst	actor/actor.h	/^  Regst* GetCurWriteableRegst(int64_t regst_desc_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t regst_desc_id)
GetCwd	common/process_state.h	/^inline std::string GetCwd() {$/;"	f	namespace:oneflow	signature:()
GetDataType	common/data_type.h	/^struct GetDataType;$/;"	x
GetDataType	common/data_type.h	/^struct GetDataType<void> {$/;"	s	namespace:oneflow
GetDataTypeFromBnInOpVec	operator/operator.cpp	/^DataType GetDataTypeFromBnInOpVec($/;"	f	namespace:oneflow::__anon6	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const std::vector<std::string>& bn_in_ops)
GetDeviceType	actor/actor.cpp	/^DeviceType Actor::GetDeviceType() const {$/;"	f	class:oneflow::Actor	signature:() const
GetDeviceType	actor/actor.h	/^  DeviceType GetDeviceType() const;$/;"	p	class:oneflow::Actor	access:protected	signature:() const
GetDeviceType	job/job_desc.h	/^  DeviceType GetDeviceType() const { return resource_.device_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
GetDeviceTypeFromActorId	job/id_manager.cpp	/^DeviceType IDMgr::GetDeviceTypeFromActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
GetDeviceTypeFromActorId	job/id_manager.h	/^  DeviceType GetDeviceTypeFromActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
GetDeviceTypeFromThrdId	job/id_manager.cpp	/^DeviceType IDMgr::GetDeviceTypeFromThrdId(int64_t thrd_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t thrd_id) const
GetDeviceTypeFromThrdId	job/id_manager.h	/^  DeviceType GetDeviceTypeFromThrdId(int64_t thrd_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id) const
GetDirFromOpName	persistence/snapshot.cpp	/^std::string Snapshot::GetDirFromOpName(const std::string& op_name) const {$/;"	f	class:oneflow::Snapshot	signature:(const std::string& op_name) const
GetDirFromOpName	persistence/snapshot.h	/^  std::string GetDirFromOpName(const std::string& op_name) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& op_name) const
GetFileSize	persistence/file_system.h	/^  virtual uint64_t GetFileSize(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
GetFileSize	persistence/hadoop/hadoop_file_system.cpp	/^uint64_t HadoopFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
GetFileSize	persistence/posix/posix_file_system.cpp	/^uint64_t PosixFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
GetFileSize	persistence/windows/windows_file_system.cpp	/^uint64_t WindowsFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
GetHashKey	common/str_util.h	/^std::string GetHashKey(const T&... args) {$/;"	f	namespace:oneflow	signature:(const T&.... args)
GetHashKeyImpl	common/str_util.cpp	/^std::string GetHashKeyImpl(std::initializer_list<int> integers) {$/;"	f	namespace:oneflow::internal	signature:(std::initializer_list<int> integers)
GetHashKeyImpl	common/str_util.h	/^std::string GetHashKeyImpl(std::initializer_list<int> integers);$/;"	p	namespace:oneflow::internal	signature:(std::initializer_list<int> integers)
GetIntoNextStatus	register/blob.cpp	/^int PieceStatus::GetIntoNextStatus() {$/;"	f	class:oneflow::PieceStatus	signature:()
GetIntoNextStatus	register/blob.h	/^  int GetIntoNextStatus();$/;"	p	class:oneflow::final	access:public	signature:()
GetLastPieceIdForModelVersionId	actor/compute_actor.h	/^inline int64_t GetLastPieceIdForModelVersionId(int64_t model_version_id) {$/;"	f	namespace:oneflow	signature:(int64_t model_version_id)
GetMachineId	comm_network/epoll/epoll_comm_network.cpp	/^int64_t GetMachineId(const sockaddr_in& sa) {$/;"	f	namespace:oneflow::__anon2	signature:(const sockaddr_in& sa)
GetMachineThrdId	job/id_manager.cpp	/^int64_t IDMgr::GetMachineThrdId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
GetMachineThrdId	job/id_manager.h	/^  int64_t GetMachineThrdId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t machine_id, int64_t thrd_id)
GetMasterCtrlAddr	job/machine_context.h	/^  std::string GetMasterCtrlAddr() const { return GetCtrlAddr(0); }$/;"	f	class:oneflow::final	access:public	signature:() const
GetMasterStub	control/ctrl_client.h	/^  CtrlService::Stub* GetMasterStub() { return stubs_[0].get(); }$/;"	f	class:oneflow::final	access:private	signature:()
GetMethodName	control/ctrl_service.cpp	/^const char* GetMethodName(CtrlMethod method) {$/;"	f	namespace:oneflow::__anon37	signature:(CtrlMethod method)
GetMsgChannelPtr	thread/thread.h	/^  Channel<ActorMsg>* GetMsgChannelPtr() { return &msg_channel_; }$/;"	f	class:oneflow::Thread	access:public	signature:()
GetMsgFromSpecialConf	operator/operator.h	/^  const T& GetMsgFromSpecialConf(const std::string& field_name) const {$/;"	f	class:oneflow::Operator	access:public	signature:(const std::string& field_name) const
GetMthdForBldBoxingOpConfFromBackward	graph/chain_node.cpp	/^BldBoxingOpConfMthd BackwardChainNode::GetMthdForBldBoxingOpConfFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd ForwardChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromLoss	graph/chain_node.cpp	/^BldBoxingOpConfMthd BackwardChainNode::GetMthdForBldBoxingOpConfFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromLoss	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromLossAcc	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossPrintChainNode::GetMthdForBldBoxingOpConfFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
GetMthdForBldBoxingOpConfFromMdDiffAcc	graph/chain_node.cpp	/^BldBoxingOpConfMthd MdUpdtChainNode::GetMthdForBldBoxingOpConfFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd ForwardChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldBoxingOpConfTo	graph/chain_node.h	/^  virtual BldBoxingOpConfMthd GetMthdForBldBoxingOpConfTo($/;"	p	class:oneflow::ChainNode	access:public	signature:( const ChainNode*) const
GetMthdForBldSubTskGph	graph/chain_node.cpp	/^BldSubTskGphMthd ChainEdge::GetMthdForBldSubTskGph() const {$/;"	f	class:oneflow::ChainEdge	signature:() const
GetMthdForBldSubTskGph	graph/chain_node.h	/^  BldSubTskGphMthd GetMthdForBldSubTskGph() const;$/;"	p	class:oneflow::final	access:public	signature:() const
GetMthdForBldSubTskGphFromBackward	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromBackward	graph/chain_node.cpp	/^BldSubTskGphMthd MdDiffAccChainNode::GetMthdForBldSubTskGphFromBackward($/;"	f	class:oneflow::MdDiffAccChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd LossChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd LossAccChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::LossAccChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromLossAcc	graph/chain_node.cpp	/^BldSubTskGphMthd LossPrintChainNode::GetMthdForBldSubTskGphFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromMdDiffAcc	graph/chain_node.cpp	/^BldSubTskGphMthd MdUpdtChainNode::GetMthdForBldSubTskGphFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd MdSaveChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::MdSaveChainNode	signature:( const ChainNode*) const
GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd LossChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
GetMthdForBldSubTskGphTo	graph/chain_node.h	/^  virtual BldSubTskGphMthd GetMthdForBldSubTskGphTo(const ChainNode*) const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:(const ChainNode*) const
GetNext	kernel/boxing_kernel.cpp	/^  std::tuple<char*, size_t> GetNext() {$/;"	f	class:oneflow::__anon27::final	access:public	signature:()
GetOpNameFromLbn	operator/operator.cpp	/^std::string GetOpNameFromLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
GetOpNameFromLbn	operator/operator.h	/^std::string GetOpNameFromLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
GetOutStream	persistence/snapshot.cpp	/^std::unique_ptr<PersistentOutStream> Snapshot::GetOutStream($/;"	f	class:oneflow::Snapshot	signature:( const std::string& lbn, int32_t part_id)
GetOutStream	persistence/snapshot.h	/^  std::unique_ptr<PersistentOutStream> GetOutStream(const std::string& lbn,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, int32_t part_id)
GetPartIdAndPartNumFromParallelCtx	job/parallel_desc.cpp	/^std::tuple<int32_t, int32_t> GetPartIdAndPartNumFromParallelCtx($/;"	f	namespace:oneflow	signature:( const ParallelContext* parallel_ctx)
GetPartIdAndPartNumFromParallelCtx	job/parallel_desc.h	/^std::tuple<int32_t, int32_t> GetPartIdAndPartNumFromParallelCtx($/;"	p	namespace:oneflow	signature:( const ParallelContext* parallel_ctx)
GetProducedRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::GetProducedRegst(const std::string& name) {$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name)
GetProducedRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetProducedRegst(const std::string& name);$/;"	p	class:oneflow::TaskNode	access:public	signature:(const std::string& name)
GetProducerOp	graph/logical_graph.cpp	/^std::shared_ptr<const Operator> LogicalGraph::GetProducerOp($/;"	f	class:oneflow::LogicalGraph	signature:( const std::string& lbn)
GetProducerOp	graph/logical_graph.h	/^  std::shared_ptr<const Operator> GetProducerOp(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
GetReadableSnapshot	persistence/snapshot_manager.h	/^  const Snapshot* GetReadableSnapshot() { return readable_snapshot_.get(); }$/;"	f	class:oneflow::SnapshotMgr	access:public	signature:()
GetRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskEdge::GetRegst($/;"	f	class:oneflow::TaskEdge	signature:( const std::string& name_in_producer) const
GetRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetRegst($/;"	p	class:oneflow::final	access:public	signature:( const std::string& name_in_producer) const
GetRelatedInRegst	graph/backward_compute_task_node.cpp	/^std::shared_ptr<RegstDesc> BackwardCompTaskNode::GetRelatedInRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
GetRelatedInRegst	graph/backward_compute_task_node.h	/^  std::shared_ptr<RegstDesc> GetRelatedInRegst();$/;"	p	class:oneflow::final	access:private	signature:()
GetReservedWorkStreamId	actor/actor.cpp	/^int64_t Actor::GetReservedWorkStreamId(int64_t reserved_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t reserved_id)
GetReservedWorkStreamId	actor/actor.h	/^  int64_t GetReservedWorkStreamId(int64_t reserved_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t reserved_id)
GetReservedWorkStreamId	job/id_manager.cpp	/^int64_t IDMgr::GetReservedWorkStreamId(int64_t machine_id, int64_t thrd_id,$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id, int64_t reserved_id)
GetReservedWorkStreamId	job/id_manager.h	/^  int64_t GetReservedWorkStreamId(int64_t machine_id, int64_t thrd_id,$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id, int64_t reserved_id)
GetResource	job/id_manager_test.cpp	/^Resource GetResource() {$/;"	f	namespace:oneflow::__anon36	signature:()
GetResponsibleStub	control/ctrl_client.cpp	/^CtrlService::Stub* CtrlClient::GetResponsibleStub(const std::string& key) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& key)
GetResponsibleStub	control/ctrl_client.h	/^  CtrlService::Stub* GetResponsibleStub(const std::string& key);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& key)
GetSizeOf	common/data_type.h	/^struct GetSizeOf;$/;"	x
GetSizeOfDataType	common/data_type.h	/^inline size_t GetSizeOfDataType(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
GetSockAddr	comm_network/epoll/epoll_comm_network.cpp	/^sockaddr_in GetSockAddr(int64_t machine_id, uint16_t port) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id, uint16_t port)
GetSocketHelper	comm_network/epoll/epoll_comm_network.cpp	/^SocketHelper* EpollCommNet::GetSocketHelper(int64_t machine_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t machine_id)
GetSocketHelper	comm_network/epoll/epoll_comm_network.h	/^  SocketHelper* GetSocketHelper(int64_t machine_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t machine_id)
GetSoleRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskEdge::GetSoleRegst() const {$/;"	f	class:oneflow::TaskEdge	signature:() const
GetSoleRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetSoleRegst() const;$/;"	p	class:oneflow::final	access:public	signature:() const
GetSpecialConf	operator/accumulate_op.cpp	/^const PbMessage& AccumulateOp::GetSpecialConf() const {$/;"	f	class:oneflow::AccumulateOp	signature:() const
GetSpecialConf	operator/boxing_op.cpp	/^const PbMessage& BoxingOp::GetSpecialConf() const {$/;"	f	class:oneflow::BoxingOp	signature:() const
GetSpecialConf	operator/clone_op.cpp	/^const PbMessage& CloneOp::GetSpecialConf() const {$/;"	f	class:oneflow::CloneOp	signature:() const
GetSpecialConf	operator/concat_op.cpp	/^const PbMessage& ConcatOp::GetSpecialConf() const {$/;"	f	class:oneflow::ConcatOp	signature:() const
GetSpecialConf	operator/convolution_op.cpp	/^const PbMessage& ConvolutionOp::GetSpecialConf() const {$/;"	f	class:oneflow::ConvolutionOp	signature:() const
GetSpecialConf	operator/copy_comm_net_op.cpp	/^const PbMessage& CopyCommNetOp::GetSpecialConf() const {$/;"	f	class:oneflow::CopyCommNetOp	signature:() const
GetSpecialConf	operator/copy_hd_op.cpp	/^const PbMessage& CopyHdOp::GetSpecialConf() const {$/;"	f	class:oneflow::CopyHdOp	signature:() const
GetSpecialConf	operator/data_loader_op.cpp	/^const PbMessage& DataLoaderOp::GetSpecialConf() const {$/;"	f	class:oneflow::DataLoaderOp	signature:() const
GetSpecialConf	operator/innerproduct_op.cpp	/^const PbMessage& InnerProductOp::GetSpecialConf() const {$/;"	f	class:oneflow::InnerProductOp	signature:() const
GetSpecialConf	operator/loss_print_op.cpp	/^const PbMessage& LossPrintOp::GetSpecialConf() const {$/;"	f	class:oneflow::LossPrintOp	signature:() const
GetSpecialConf	operator/model_save_op.cpp	/^const PbMessage& ModelSaveOp::GetSpecialConf() const {$/;"	f	class:oneflow::ModelSaveOp	signature:() const
GetSpecialConf	operator/momentum_model_update_op.cpp	/^const PbMessage& MomentumModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::MomentumModelUpdateOp	signature:() const
GetSpecialConf	operator/multinomial_logistic_loss_op.cpp	/^const PbMessage& MultinomialLogisticLossOp::GetSpecialConf() const {$/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:() const
GetSpecialConf	operator/normal_model_update_op.cpp	/^const PbMessage& NormalModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::NormalModelUpdateOp	signature:() const
GetSpecialConf	operator/operator.h	/^  virtual const PbMessage& GetSpecialConf() const = 0;$/;"	p	class:oneflow::Operator	access:public	signature:() const
GetSpecialConf	operator/pooling_op.cpp	/^const PbMessage& PoolingOp::GetSpecialConf() const {$/;"	f	class:oneflow::PoolingOp	signature:() const
GetSpecialConf	operator/print_op.cpp	/^const PbMessage& PrintOp::GetSpecialConf() const {$/;"	f	class:oneflow::PrintOp	signature:() const
GetSpecialConf	operator/relu_op.cpp	/^const PbMessage& ReluOp::GetSpecialConf() const {$/;"	f	class:oneflow::ReluOp	signature:() const
GetSpecialConf	operator/rmsprop_model_update_op.cpp	/^const PbMessage& RMSPropModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:() const
GetSpecialConf	operator/softmax_loss_op.cpp	/^const PbMessage& SoftmaxLossOp::GetSpecialConf() const {$/;"	f	class:oneflow::SoftmaxLossOp	signature:() const
GetSpecialConf	operator/softmax_op.cpp	/^const PbMessage& SoftmaxOp::GetSpecialConf() const {$/;"	f	class:oneflow::SoftmaxOp	signature:() const
GetSymbolFromLibrary	persistence/hadoop/hadoop_file_system.cpp	/^bool GetSymbolFromLibrary(void* handle, const char* symbol_name,$/;"	f	namespace:oneflow::fs::internal	signature:(void* handle, const char* symbol_name, void** symbol)
GetTaskType	graph/task_node.h	/^  virtual TaskType GetTaskType() const = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:() const
GetTestConvolutionOp	operator/convolution_op_test.cpp	/^std::shared_ptr<Operator> GetTestConvolutionOp() {$/;"	f	namespace:oneflow::__anon5	signature:()
GetTestPoolingOp	operator/pooling_op_test.cpp	/^std::shared_ptr<Operator> GetTestPoolingOp() {$/;"	f	namespace:oneflow	signature:()
GetThisCtrlAddr	job/machine_context.h	/^  std::string GetThisCtrlAddr() const { return GetCtrlAddr(this_machine_id_); }$/;"	f	class:oneflow::final	access:public	signature:() const
GetThisStub	control/ctrl_client.cpp	/^CtrlService::Stub* CtrlClient::GetThisStub() {$/;"	f	class:oneflow::CtrlClient	signature:()
GetThisStub	control/ctrl_client.h	/^  CtrlService::Stub* GetThisStub();$/;"	p	class:oneflow::final	access:private	signature:()
GetThrd	thread/thread_manager.cpp	/^Thread* ThreadMgr::GetThrd(int64_t thrd_id) { return threads_.at(thrd_id); }$/;"	f	class:oneflow::ThreadMgr	signature:(int64_t thrd_id)
GetThrd	thread/thread_manager.h	/^  Thread* GetThrd(int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id)
GetWorkStreamId	actor/actor.h	/^  int64_t GetWorkStreamId() const { return device_ctx_->work_stream_id(); }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
GetWriteableSnapshot	persistence/snapshot_manager.cpp	/^Snapshot* SnapshotMgr::GetWriteableSnapshot(int64_t snapshot_id) {$/;"	f	class:oneflow::SnapshotMgr	signature:(int64_t snapshot_id)
GetWriteableSnapshot	persistence/snapshot_manager.h	/^  Snapshot* GetWriteableSnapshot(int64_t snapshot_id);$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:(int64_t snapshot_id)
GlobalFS	persistence/file_system.cpp	/^fs::FileSystem* GlobalFS() {$/;"	f	namespace:oneflow	signature:()
GlobalFS	persistence/file_system.h	/^fs::FileSystem* GlobalFS();$/;"	p	namespace:oneflow	signature:()
GlobalFSConstructor	persistence/file_system.cpp	/^  GlobalFSConstructor() {$/;"	f	struct:oneflow::fs::GlobalFSConstructor	access:public	signature:()
GlobalFSConstructor	persistence/file_system.cpp	/^struct GlobalFSConstructor {$/;"	s	namespace:oneflow::fs	file:
GpuThread	thread/gpu_thread.cpp	/^GpuThread::GpuThread(int64_t thrd_id, int64_t dev_id) {$/;"	f	class:oneflow::GpuThread	signature:(int64_t thrd_id, int64_t dev_id)
GpuThread	thread/gpu_thread.h	/^  GpuThread() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
GpuThread	thread/gpu_thread.h	/^  GpuThread(int64_t thrd_id, int64_t dev_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id, int64_t dev_id)
Graph	graph/graph.h	/^  Graph() = default;$/;"	p	class:oneflow::Graph	access:public	signature:()
Graph	graph/graph.h	/^class Graph {$/;"	c	namespace:oneflow
HDFSRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^  HDFSRandomAccessFile(const std::string& filename,$/;"	f	class:oneflow::fs::HDFSRandomAccessFile	access:public	signature:(const std::string& filename, const std::string& hdfs_filename, LibHDFS* hdfs, hdfsFS fs, hdfsFile file)
HDFSRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^class HDFSRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs	file:	inherits:RandomAccessFile
HDFSWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^  HDFSWritableFile(const std::string& fname, LibHDFS* hdfs, hdfsFS fs,$/;"	f	class:oneflow::fs::HDFSWritableFile	access:public	signature:(const std::string& fname, LibHDFS* hdfs, hdfsFS fs, hdfsFile file)
HDFSWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^class HDFSWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs	file:	inherits:WritableFile
HadoopFileSystem	persistence/hadoop/hadoop_file_system.cpp	/^HadoopFileSystem::HadoopFileSystem(const HdfsConf& hdfs_conf)$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const HdfsConf& hdfs_conf)
HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  HadoopFileSystem() = delete;$/;"	p	class:oneflow::fs::final	access:public	signature:()
HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  HadoopFileSystem(const HdfsConf&);$/;"	p	class:oneflow::fs::final	access:public	signature:(const HdfsConf&)
HandleRpcs	control/ctrl_server.cpp	/^void CtrlServer::HandleRpcs() {$/;"	f	class:oneflow::CtrlServer	signature:()
HandleRpcs	control/ctrl_server.h	/^  void HandleRpcs();$/;"	p	class:oneflow::final	access:private	signature:()
HandlerInitModel	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerInitModel(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
HandlerInitModel	actor/forward_compute_actor.h	/^  int HandlerInitModel(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
HandlerInitModelAndModelTmp	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerInitModelAndModelTmp(const ActorMsg& msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& msg)
HandlerInitModelAndModelTmp	actor/model_update_compute_actor.h	/^  int HandlerInitModelAndModelTmp(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
HandlerInitModelTmp	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerInitModelTmp(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
HandlerInitModelTmp	actor/forward_compute_actor.h	/^  int HandlerInitModelTmp(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
HandlerNormal	actor/accumulate_compute_actor.cpp	/^int AccumulateCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::AccumulateCompActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/actor.h	/^  virtual int HandlerNormal(const ActorMsg& msg) = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:(const ActorMsg& msg)
HandlerNormal	actor/backward_compute_actor.cpp	/^int BackwardCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BackwardCompActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/boxing_actor.cpp	/^int BoxingActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BoxingActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/copy_comm_net_actor.cpp	/^int CopyCommNetActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/copy_hd_actor.cpp	/^int CopyHdActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::CopyHdActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerNormal(const ActorMsg& actor_msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& actor_msg)
HandlerNormal	actor/rnn_boxing_actor.cpp	/^int BoxingActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BoxingActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/sink_compute_actor.cpp	/^int SinkCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::SinkCompActor	signature:(const ActorMsg& msg)
HandlerNormal	actor/source_compute_actor.cpp	/^int SourceCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::SourceCompActor	signature:(const ActorMsg& msg)
HandlerSendInitialModel	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerSendInitialModel(const ActorMsg& actor_msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& actor_msg)
HandlerSendInitialModel	actor/model_update_compute_actor.h	/^  int HandlerSendInitialModel(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
HandlerWaitToStart	actor/source_compute_actor.cpp	/^int SourceCompActor::HandlerWaitToStart(const ActorMsg& msg) {$/;"	f	class:oneflow::SourceCompActor	signature:(const ActorMsg& msg)
HandlerWaitToStart	actor/source_compute_actor.h	/^  int HandlerWaitToStart(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
HandlerZombie	actor/actor.cpp	/^int Actor::HandlerZombie(const ActorMsg& msg) {$/;"	f	class:oneflow::Actor	signature:(const ActorMsg& msg)
HandlerZombie	actor/actor.h	/^  int HandlerZombie(const ActorMsg& msg);$/;"	p	class:oneflow::Actor	access:protected	signature:(const ActorMsg& msg)
HandoutTasks	job/runtime.cpp	/^void HandoutTasks(const std::vector<const TaskProto*>& tasks) {$/;"	f	namespace:oneflow::__anon33	signature:(const std::vector<const TaskProto*>& tasks)
HasBlobDescWithDataId	operator/operator.cpp	/^static bool HasBlobDescWithDataId($/;"	f	namespace:oneflow	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const std::vector<std::string>& bn_in_ops)
HasOpWithModelOrModelTmpBlob	graph/chain_node.cpp	/^bool ChainNode::HasOpWithModelOrModelTmpBlob() const {$/;"	f	class:oneflow::ChainNode	signature:() const
HasOpWithModelOrModelTmpBlob	graph/chain_node.h	/^  bool HasOpWithModelOrModelTmpBlob() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
HashMap	graph/boxing_task_node.h	/^      HashMap<const ChainNode*, std::vector<EdgeInfo>>*);$/;"	m	class:oneflow::BoxingTaskNode	access:private
HashMap2PbMap	common/protobuf.h	/^google::protobuf::Map<K, V> HashMap2PbMap(const HashMap<K, V>& hash_map) {$/;"	f	namespace:oneflow	signature:(const HashMap<K, V>& hash_map)
IDMgr	job/id_manager.cpp	/^IDMgr::IDMgr() {$/;"	f	class:oneflow::IDMgr	signature:()
IDMgr	job/id_manager.h	/^  IDMgr();$/;"	p	class:oneflow::final	access:private	signature:()
INIT_RPC_METHOD_OBJ	control/ctrl_service.cpp	21;"	d	file:
INSTANTIATE_BLOB_FUNC	register/blob.cpp	68;"	d	file:
INSTANTIATE_KERNEL_UTIL	kernel/kernel_util.cpp	168;"	d	file:
INSTANTIATE_KTCOMMON	kernel/opkernel_test_common.cpp	88;"	d	file:
INSTANTIATE_SOFTMAX_KERNEL_UTIL	kernel/softmax_kernel.cpp	84;"	d	file:
INT_DATA_TYPE_SEQ	common/data_type.h	28;"	d
IOEventPoller	comm_network/epoll/io_event_poller.cpp	/^IOEventPoller::IOEventPoller() {$/;"	f	class:oneflow::IOEventPoller	signature:()
IOEventPoller	comm_network/epoll/io_event_poller.h	/^  IOEventPoller();$/;"	p	class:oneflow::final	access:public	signature:()
IOHandler	comm_network/epoll/io_event_poller.h	/^    IOHandler() {$/;"	f	struct:oneflow::final::IOHandler	access:public	signature:()
IOHandler	comm_network/epoll/io_event_poller.h	/^  struct IOHandler {$/;"	s	class:oneflow::final	access:private
IS_FLOATING_POINT_CASE	common/data_type.cpp	15;"	d	file:
IS_INTERGRAL_CASE	common/data_type.cpp	7;"	d	file:
IS_MOBILE_PLATFORM	common/platform.h	14;"	d
IS_MOBILE_PLATFORM	common/platform.h	20;"	d
IS_MOBILE_PLATFORM	common/platform.h	22;"	d
IS_MOBILE_PLATFORM	common/platform.h	33;"	d
Im2Col	kernel/convolution_kernel.cpp	/^  static void Im2Col(const KernelCtx& ctx, const T* dptr, const int channels,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* dptr, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_col)
Im2Col	kernel/convolution_kernel.h	/^  static void Im2Col(const KernelCtx& ctx, const T* data_im, const int channels,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_im, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_col)
Improve	job/improver.cpp	/^Plan Improver::Improve(const Plan& naive_plan,$/;"	f	class:oneflow::Improver	signature:(const Plan& naive_plan, const std::string& act_event_filepath)
Improve	job/improver.h	/^  Plan Improve(const Plan& naive_plan, const std::string& act_event_filepath);$/;"	p	class:oneflow::final	access:public	signature:(const Plan& naive_plan, const std::string& act_event_filepath)
Improver	job/improver.h	/^  Improver() = default;$/;"	p	class:oneflow::final	access:private	signature:()
InBoxingTaskNode	graph/boxing_task_node.h	/^  InBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
IncreaseDoneCnt	comm_network/epoll/epoll_comm_network.cpp	/^int8_t EpollCommNet::IncreaseDoneCnt(ReadContext* read_ctx) {$/;"	f	class:oneflow::EpollCommNet	signature:(ReadContext* read_ctx)
IncreaseDoneCnt	comm_network/epoll/epoll_comm_network.h	/^  int8_t IncreaseDoneCnt(ReadContext*);$/;"	p	class:oneflow::final	access:private	signature:(ReadContext*)
InferBlobDescs	operator/boxing_op.cpp	/^void BoxingOp::InferBlobDescs($/;"	f	class:oneflow::BoxingOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/clone_op.cpp	/^void CloneOp::InferBlobDescs($/;"	f	class:oneflow::CloneOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/clone_op.h	/^  void InferBlobDescs($/;"	p	class:oneflow::final	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/concat_op.cpp	/^void ConcatOp::InferBlobDescs($/;"	f	class:oneflow::ConcatOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/convolution_op.cpp	/^void ConvolutionOp::InferBlobDescs($/;"	f	class:oneflow::ConvolutionOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/data_loader_op.cpp	/^void DataLoaderOp::InferBlobDescs($/;"	f	class:oneflow::DataLoaderOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/innerproduct_op.cpp	/^void InnerProductOp::InferBlobDescs($/;"	f	class:oneflow::InnerProductOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/model_update_op.h	/^  virtual void InferBlobDescs($/;"	f	class:oneflow::ModelUpdtOp	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx)
InferBlobDescs	operator/momentum_model_update_op.cpp	/^void MomentumModelUpdateOp::InferBlobDescs($/;"	f	class:oneflow::MomentumModelUpdateOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx)
InferBlobDescs	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::InferBlobDescs($/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/operator.h	/^  virtual void InferBlobDescs($/;"	f	class:oneflow::Operator	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/pooling_op.cpp	/^void PoolingOp::InferBlobDescs($/;"	f	class:oneflow::PoolingOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/relu_op.cpp	/^void ReluOp::InferBlobDescs($/;"	f	class:oneflow::ReluOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/rmsprop_model_update_op.cpp	/^void RMSPropModelUpdateOp::InferBlobDescs($/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::InferBlobDescs($/;"	f	class:oneflow::SoftmaxLossOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescs	operator/softmax_op.cpp	/^void SoftmaxOp::InferBlobDescs($/;"	f	class:oneflow::SoftmaxOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
InferBlobDescsInProducedRegsts	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::InferBlobDescsInProducedRegsts() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
InferBlobDescsInProducedRegsts	graph/backward_compute_task_node.h	/^  void InferBlobDescsInProducedRegsts();$/;"	p	class:oneflow::final	access:private	signature:()
InferMemCase	register/register_desc.cpp	/^void RegstDesc::InferMemCase() {$/;"	f	class:oneflow::RegstDesc	signature:()
InferMemCase	register/register_desc.h	/^  void InferMemCase();$/;"	p	class:oneflow::final	access:public	signature:()
InferMemCaseOfProducedRegst	graph/task_node.cpp	/^void TaskNode::InferMemCaseOfProducedRegst() {$/;"	f	class:oneflow::TaskNode	signature:()
InferMemCaseOfProducedRegst	graph/task_node.h	/^  void InferMemCaseOfProducedRegst();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
Init	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::Init(const TaskProto& task_proto,$/;"	f	class:oneflow::AccumulateCompActor	signature:(const TaskProto& task_proto, int32_t max_acc_cnt)
Init	actor/accumulate_compute_actor.h	/^  void Init(const TaskProto&, int32_t max_acc_cnt);$/;"	p	class:oneflow::AccumulateCompActor	access:protected	signature:(const TaskProto&, int32_t max_acc_cnt)
Init	actor/actor.cpp	/^void Actor::Init(const TaskProto& task_proto, const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Actor	signature:(const TaskProto& task_proto, const ThreadCtx& thread_ctx)
Init	actor/actor.h	/^  void Init(const TaskProto&, const ThreadCtx&);$/;"	p	class:oneflow::Actor	access:public	signature:(const TaskProto&, const ThreadCtx&)
Init	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::Init() {$/;"	f	class:oneflow::EpollCommNet	signature:()
Init	comm_network/epoll/epoll_comm_network.h	/^  static void Init();$/;"	p	class:oneflow::final	access:public	signature:()
Init	graph/boxing_task_node.cpp	/^void BoxingTaskNode::Init(int64_t machine_id) {$/;"	f	class:oneflow::BoxingTaskNode	signature:(int64_t machine_id)
Init	graph/boxing_task_node.h	/^  void Init(int64_t machine_id);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(int64_t machine_id)
Init	graph/copy_task_node.cpp	/^void CopyCommNetTaskNode::Init(int64_t machine_id) {$/;"	f	class:oneflow::CopyCommNetTaskNode	signature:(int64_t machine_id)
Init	graph/copy_task_node.cpp	/^void CopyHdTaskNode::Init(const CompTaskNode* comp_task,$/;"	f	class:oneflow::CopyHdTaskNode	signature:(const CompTaskNode* comp_task, CopyHdOpConf::Type copy_type)
Init	graph/copy_task_node.h	/^  void Init(const CompTaskNode*, CopyHdOpConf::Type);$/;"	p	class:oneflow::final	access:public	signature:(const CompTaskNode*, CopyHdOpConf::Type)
Init	graph/copy_task_node.h	/^  void Init(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
Init	job/id_manager_test.cpp	/^void Init() {$/;"	f	namespace:oneflow::__anon36	signature:()
Init	kernel/kernel.cpp	/^void Kernel::Init(const ParallelContext* parallel_ctx,$/;"	f	class:oneflow::Kernel	signature:(const ParallelContext* parallel_ctx, const KernelConf& kernel_conf)
Init	kernel/kernel.h	/^  void Init(const ParallelContext*, const KernelConf&);$/;"	p	class:oneflow::Kernel	access:public	signature:(const ParallelContext*, const KernelConf&)
InitChains	graph/chain_graph.cpp	/^void InitChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
InitDeviceCtx	actor/actor.cpp	/^void Actor::InitDeviceCtx(const ThreadCtx&) {$/;"	f	class:oneflow::Actor	signature:(const ThreadCtx&)
InitDeviceCtx	actor/actor.h	/^  virtual void InitDeviceCtx(const ThreadCtx&);$/;"	p	class:oneflow::Actor	access:protected	signature:(const ThreadCtx&)
InitDeviceCtx	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::InitDeviceCtx(const ThreadCtx&) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const ThreadCtx&)
InitDeviceCtx	actor/copy_hd_actor.cpp	/^void CopyHdActor::InitDeviceCtx(const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::CopyHdActor	signature:(const ThreadCtx& thread_ctx)
InitFromOpConf	operator/accumulate_op.cpp	/^void AccumulateOp::InitFromOpConf() {$/;"	f	class:oneflow::AccumulateOp	signature:()
InitFromOpConf	operator/boxing_op.cpp	/^void BoxingOp::InitFromOpConf() {$/;"	f	class:oneflow::BoxingOp	signature:()
InitFromOpConf	operator/clone_op.cpp	/^void CloneOp::InitFromOpConf() {$/;"	f	class:oneflow::CloneOp	signature:()
InitFromOpConf	operator/concat_op.cpp	/^void ConcatOp::InitFromOpConf() {$/;"	f	class:oneflow::ConcatOp	signature:()
InitFromOpConf	operator/convolution_op.cpp	/^void ConvolutionOp::InitFromOpConf() {$/;"	f	class:oneflow::ConvolutionOp	signature:()
InitFromOpConf	operator/copy_comm_net_op.cpp	/^void CopyCommNetOp::InitFromOpConf() {$/;"	f	class:oneflow::CopyCommNetOp	signature:()
InitFromOpConf	operator/copy_hd_op.cpp	/^void CopyHdOp::InitFromOpConf() {$/;"	f	class:oneflow::CopyHdOp	signature:()
InitFromOpConf	operator/data_loader_op.cpp	/^void DataLoaderOp::InitFromOpConf() {$/;"	f	class:oneflow::DataLoaderOp	signature:()
InitFromOpConf	operator/innerproduct_op.cpp	/^void InnerProductOp::InitFromOpConf() {$/;"	f	class:oneflow::InnerProductOp	signature:()
InitFromOpConf	operator/loss_print_op.cpp	/^void LossPrintOp::InitFromOpConf() {$/;"	f	class:oneflow::LossPrintOp	signature:()
InitFromOpConf	operator/model_save_op.cpp	/^void ModelSaveOp::InitFromOpConf() {$/;"	f	class:oneflow::ModelSaveOp	signature:()
InitFromOpConf	operator/momentum_model_update_op.cpp	/^void MomentumModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::MomentumModelUpdateOp	signature:()
InitFromOpConf	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::InitFromOpConf() {$/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:()
InitFromOpConf	operator/normal_model_update_op.cpp	/^void NormalModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::NormalModelUpdateOp	signature:()
InitFromOpConf	operator/operator.cpp	/^void Operator::InitFromOpConf(const OperatorConf& op_conf) {$/;"	f	class:oneflow::Operator	signature:(const OperatorConf& op_conf)
InitFromOpConf	operator/operator.h	/^  virtual void InitFromOpConf() = 0;$/;"	p	class:oneflow::Operator	access:public	signature:()
InitFromOpConf	operator/operator.h	/^  void InitFromOpConf(const OperatorConf& op_conf);$/;"	p	class:oneflow::Operator	access:public	signature:(const OperatorConf& op_conf)
InitFromOpConf	operator/pooling_op.cpp	/^void PoolingOp::InitFromOpConf() {$/;"	f	class:oneflow::PoolingOp	signature:()
InitFromOpConf	operator/print_op.cpp	/^void PrintOp::InitFromOpConf() {$/;"	f	class:oneflow::PrintOp	signature:()
InitFromOpConf	operator/relu_op.cpp	/^void ReluOp::InitFromOpConf() {$/;"	f	class:oneflow::ReluOp	signature:()
InitFromOpConf	operator/rmsprop_model_update_op.cpp	/^void RMSPropModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:()
InitFromOpConf	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::InitFromOpConf() {$/;"	f	class:oneflow::SoftmaxLossOp	signature:()
InitFromOpConf	operator/softmax_op.cpp	/^void SoftmaxOp::InitFromOpConf() {$/;"	f	class:oneflow::SoftmaxOp	signature:()
InitJobDesc	kernel/momentum_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon17	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
InitJobDesc	kernel/normal_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon15	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
InitJobDesc	kernel/rmsprop_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon10	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
InitJobDescSingleton	job/mock_job_desc.h	/^void InitJobDescSingleton(MockJobDesc* mock_job_desc) {$/;"	f	namespace:oneflow::test	signature:(MockJobDesc* mock_job_desc)
InitModelBlobs	kernel/kernel.cpp	/^void Kernel::InitModelBlobs($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, const Snapshot* snapshot, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobs	kernel/kernel.h	/^  void InitModelBlobs($/;"	p	class:oneflow::Kernel	access:public	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, const Snapshot*, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithDir	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelBlobsWithDir($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithDir	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelBlobsWithDir($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithDir	kernel/kernel.cpp	/^void Kernel::InitModelBlobsWithDir($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithDir	kernel/kernel.h	/^  virtual void InitModelBlobsWithDir($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithRandomSeed	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithRandomSeed	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithRandomSeed	kernel/kernel.cpp	/^void Kernel::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelBlobsWithRandomSeed	kernel/kernel.h	/^  virtual void InitModelBlobsWithRandomSeed($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelTmpBlobs	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelTmpBlobs($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelTmpBlobs	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelTmpBlobs($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelTmpBlobs	kernel/kernel.cpp	/^void Kernel::InitModelTmpBlobs($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitModelTmpBlobs	kernel/kernel.h	/^  virtual void InitModelTmpBlobs($/;"	p	class:oneflow::Kernel	access:public	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
InitMsgWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::InitMsgWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
InitMsgWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool InitMsgWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
InitRegstBySendToFw	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::InitRegstBySendToFw(int64_t regst_desc_id) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(int64_t regst_desc_id)
InitRegstBySendToFw	actor/model_update_compute_actor.h	/^  void InitRegstBySendToFw(int64_t regst_desc_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t regst_desc_id)
InitSockets	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::InitSockets() {$/;"	f	class:oneflow::EpollCommNet	signature:()
InitSockets	comm_network/epoll/epoll_comm_network.h	/^  void InitSockets();$/;"	p	class:oneflow::final	access:private	signature:()
InnerProductKernel	kernel/innerproduct_kernel.h	/^  InnerProductKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
InnerProductOp	operator/innerproduct_op.h	/^  InnerProductOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
IpKernelFillMdlAndMdlTmp	kernel/innerproduct_kernel_test.cpp	/^void IpKernelFillMdlAndMdlTmp(const FillConf* fill_conf) {$/;"	f	namespace:oneflow::test::__anon13	signature:(const FillConf* fill_conf)
IpKernelFwAndBp	kernel/innerproduct_kernel_test.cpp	/^void IpKernelFwAndBp(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term)
IsAGreaterThanZeroAndLessThanB	kernel/convolution_kernel.cpp	/^inline bool IsAGreaterThanZeroAndLessThanB(int a, int b) {$/;"	f	namespace:oneflow::__anon25	signature:(int a, int b)
IsAbsolutePath	common/str_util.h	/^inline bool IsAbsolutePath(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
IsAllConsumedRegstLocked	graph/task_node.cpp	/^bool TaskNode::IsAllConsumedRegstLocked() {$/;"	f	class:oneflow::TaskNode	signature:()
IsAllConsumedRegstLocked	graph/task_node.h	/^  bool IsAllConsumedRegstLocked();$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
IsDataLoaderOp	operator/operator.h	/^  virtual bool IsDataLoaderOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
IsDataParallelOneToOneBoxing	graph/task_graph.cpp	/^static bool IsDataParallelOneToOneBoxing(const ChainNode* src_chain,$/;"	f	namespace:oneflow	signature:(const ChainNode* src_chain, const ChainNode* dst_chain)
IsDirEmpty	persistence/file_system.cpp	/^bool FileSystem::IsDirEmpty(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
IsDirEmpty	persistence/file_system.h	/^  bool IsDirEmpty(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
IsDirectory	persistence/file_system.h	/^  virtual bool IsDirectory(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
IsDirectory	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
IsDirectory	persistence/posix/posix_file_system.cpp	/^bool PosixFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
IsDirectory	persistence/windows/windows_file_system.cpp	/^bool WindowsFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
IsElemWiseOp	operator/operator.h	/^  virtual bool IsElemWiseOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
IsEof	persistence/persistent_in_stream.cpp	/^bool PersistentInStream::IsEof() const {$/;"	f	class:oneflow::PersistentInStream	signature:() const
IsEof	persistence/persistent_in_stream.h	/^  bool IsEof() const;$/;"	p	class:oneflow::PersistentInStream	access:private	signature:() const
IsFloatingPoint	common/data_type.cpp	/^bool IsFloatingPoint(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
IsFloatingPoint	common/data_type.h	/^bool IsFloatingPoint(DataType data_type);$/;"	p	namespace:oneflow	signature:(DataType data_type)
IsIntegral	common/data_type.cpp	/^bool IsIntegral(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
IsIntegral	common/data_type.h	/^bool IsIntegral(DataType data_type);$/;"	p	namespace:oneflow	signature:(DataType data_type)
IsLast	register/blob.cpp	/^bool PieceStatus::IsLast() const {$/;"	f	class:oneflow::PieceStatus	signature:() const
IsLast	register/blob.h	/^  bool IsLast() const;$/;"	p	class:oneflow::final	access:public	signature:() const
IsLastCol	register/blob.h	/^  bool IsLastCol() const { return col_id_ == max_col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
IsLocked	register/register_desc.h	/^  bool IsLocked() const { return is_locked_; }$/;"	f	class:oneflow::final	access:public	signature:() const
IsLossOp	operator/operator.h	/^  virtual bool IsLossOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
IsMeaningLess	graph/task_node.cpp	/^bool TaskNode::IsMeaningLess() {$/;"	f	class:oneflow::TaskNode	signature:()
IsMeaningLess	graph/task_node.h	/^  virtual bool IsMeaningLess();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
IsNextColOf	register/blob.cpp	/^bool PieceStatus::IsNextColOf(const PieceStatus& pre) const {$/;"	f	class:oneflow::PieceStatus	signature:(const PieceStatus& pre) const
IsNextColOf	register/blob.h	/^  bool IsNextColOf(const PieceStatus& pre) const;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus& pre) const
IsPredict	job/job_desc.h	/^  bool IsPredict() const { return job_conf_.has_predict_conf(); }$/;"	f	class:oneflow::final	access:public	signature:() const
IsPrintOp	operator/operator.h	/^  virtual bool IsPrintOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
IsReadAlwaysUnReadyFromNow	actor/accumulate_compute_actor.cpp	/^bool AccumulateCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/actor.h	/^  virtual bool IsReadAlwaysUnReadyFromNow() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
IsReadAlwaysUnReadyFromNow	actor/backward_compute_actor.cpp	/^bool BackwardCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/boxing_actor.cpp	/^bool BoxingActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BoxingActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/copy_comm_net_actor.cpp	/^bool CopyCommNetActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/copy_hd_actor.cpp	/^bool CopyHdActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::CopyHdActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/forward_compute_actor.cpp	/^bool ForwardCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/model_update_compute_actor.cpp	/^bool MdUpdtCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/rnn_boxing_actor.cpp	/^bool BoxingActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BoxingActor	signature:()
IsReadAlwaysUnReadyFromNow	actor/sink_compute_actor.cpp	/^bool SinkCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::SinkCompActor	signature:()
IsReadReady	actor/actor.h	/^  virtual bool IsReadReady() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
IsReadReady	actor/backward_compute_actor.cpp	/^bool BackwardCompActor::IsReadReady() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
IsReadReady	actor/boxing_actor.cpp	/^bool BoxingActor::IsReadReady() {$/;"	f	class:oneflow::BoxingActor	signature:()
IsReadReady	actor/copy_comm_net_actor.cpp	/^bool CopyCommNetActor::IsReadReady() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
IsReadReady	actor/forward_compute_actor.cpp	/^bool ForwardCompActor::IsReadReady() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
IsReadReady	actor/rnn_boxing_actor.cpp	/^bool BoxingActor::IsReadReady() {$/;"	f	class:oneflow::BoxingActor	signature:()
IsReadReady	actor/source_compute_actor.cpp	/^bool SourceCompActor::IsReadReady() {$/;"	f	class:oneflow::SourceCompActor	signature:()
IsReadyForBuild	graph/forward_compute_task_node.cpp	/^bool ForwardCompTaskNode::IsReadyForBuild() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
IsReadyForBuild	graph/model_update_compute_task_node.cpp	/^bool MdUpdtCompTaskNode::IsReadyForBuild() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
IsReadyForBuild	graph/task_node.h	/^  virtual bool IsReadyForBuild() { return IsAllConsumedRegstLocked(); }$/;"	f	class:oneflow::TaskNode	access:public	signature:()
IsThisMachineMaster	job/machine_context.h	/^  bool IsThisMachineMaster() const { return this_machine_id_ == 0; }$/;"	f	class:oneflow::final	access:public	signature:() const
IsTrain	job/job_desc.h	/^  bool IsTrain() const { return job_conf_.has_train_conf(); }$/;"	f	class:oneflow::final	access:public	signature:() const
IsWriteReady	actor/actor.cpp	/^bool Actor::IsWriteReady() {$/;"	f	class:oneflow::Actor	signature:()
IsWriteReady	actor/actor.h	/^  virtual bool IsWriteReady();$/;"	p	class:oneflow::Actor	access:protected	signature:()
IsWriteReady	actor/model_update_compute_actor.cpp	/^bool MdUpdtCompActor::IsWriteReady() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
JobDesc	job/job_desc.cpp	/^JobDesc::JobDesc(const JobConf& conf) {$/;"	f	class:oneflow::JobDesc	signature:(const JobConf& conf)
JobDesc	job/job_desc.h	/^  JobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
JobDesc	job/job_desc.h	/^  JobDesc(const JobConf&);$/;"	p	class:oneflow::final	access:private	signature:(const JobConf&)
JoinAllActor	thread/thread.h	/^  void JoinAllActor() { actor_thread_.join(); }$/;"	f	class:oneflow::Thread	access:public	signature:()
JoinPath	common/str_util.h	/^std::string JoinPath(const T&... args) {$/;"	f	namespace:oneflow	signature:(const T&.... args)
JoinPathImpl	common/str_util.cpp	/^std::string JoinPathImpl(std::initializer_list<std::string> paths) {$/;"	f	namespace:oneflow::internal	signature:(std::initializer_list<std::string> paths)
JoinPathImpl	common/str_util.h	/^std::string JoinPathImpl(std::initializer_list<std::string> paths);$/;"	p	namespace:oneflow::internal	signature:(std::initializer_list<std::string> paths)
KTCommon	kernel/opkernel_test_common.h	/^  KTCommon() = delete;$/;"	p	class:oneflow::test::final	access:public	signature:()
Kernel	kernel/kernel.h	/^  Kernel() = default;$/;"	p	class:oneflow::Kernel	access:protected	signature:()
Kernel	kernel/kernel.h	/^class Kernel {$/;"	c	namespace:oneflow
KernelCtx	kernel/kernel_context.h	/^  KernelCtx() : device_ctx(nullptr), other(nullptr) {}$/;"	f	struct:oneflow::KernelCtx	access:public	signature:()
KernelCtx	kernel/kernel_context.h	/^struct KernelCtx {$/;"	s	namespace:oneflow
KernelIf	kernel/kernel.cpp	/^template class KernelIf<DeviceType::kCPU>;$/;"	x	file:
KernelIf	kernel/kernel.cpp	/^template class KernelIf<DeviceType::kGPU>;$/;"	x	file:
KernelIf	kernel/kernel.h	/^  KernelIf() = default;$/;"	p	class:oneflow::KernelIf	access:protected	signature:()
KernelIf	kernel/kernel.h	/^class KernelIf : public Kernel {$/;"	c	namespace:oneflow	inherits:Kernel
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	17;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	19;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	21;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	25;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	27;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	29;"	d
LIBHDFS_EXTERNAL	persistence/hadoop/hdfs.h	888;"	d
LOG_THRESHOLD	common/util.h	137;"	d
Launch	kernel/kernel.cpp	/^void Kernel::Launch($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Launch	kernel/kernel.h	/^  void Launch(const KernelCtx& ctx,$/;"	p	class:oneflow::Kernel	access:public	signature:(const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
Lbn4BnInOp	kernel/kernel.cpp	/^const std::string& Kernel::Lbn4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::Kernel	signature:(const std::string& bn_in_op) const
Lbn4BnInOp	kernel/kernel.h	/^  const std::string& Lbn4BnInOp(const std::string& bn_in_op) const;$/;"	p	class:oneflow::Kernel	access:public	signature:(const std::string& bn_in_op) const
Lbn4BnInOp	operator/operator.cpp	/^const std::string& Operator::Lbn4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op) const
Lbn4BnInOp	operator/operator.h	/^  const std::string& Lbn4BnInOp(const std::string& bn_in_op) const;$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op) const
LibHDFS	persistence/hadoop/hadoop_file_system.h	/^class LibHDFS {$/;"	c	namespace:oneflow::fs
ListDir	persistence/file_system.h	/^  virtual std::vector<std::string> ListDir(const std::string& dir) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dir)
ListDir	persistence/hadoop/hadoop_file_system.cpp	/^std::vector<std::string> HadoopFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
ListDir	persistence/posix/posix_file_system.cpp	/^std::vector<std::string> PosixFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dir)
ListDir	persistence/windows/windows_file_system.cpp	/^std::vector<std::string> WindowsFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& dir)
Load	persistence/hadoop/hadoop_file_system.h	/^  static LibHDFS* Load() {$/;"	f	class:oneflow::fs::LibHDFS	access:public	signature:()
LoadAndBind	persistence/hadoop/hadoop_file_system.cpp	/^void LibHDFS::LoadAndBind() {$/;"	f	class:oneflow::fs::LibHDFS	signature:()
LoadAndBind	persistence/hadoop/hadoop_file_system.h	/^  void LoadAndBind();$/;"	p	class:oneflow::fs::LibHDFS	access:private	signature:()
LoadLibrary	persistence/hadoop/hadoop_file_system.cpp	/^bool LoadLibrary(const char* library_filename, void** handle) {$/;"	f	namespace:oneflow::fs::internal	signature:(const char* library_filename, void** handle)
LoadLibrary	persistence/hadoop/hadoop_file_system.cpp	8;"	d	file:
LoadServer	control/ctrl_client.cpp	/^void CtrlClient::LoadServer(const std::string& server_addr,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& server_addr, CtrlService::Stub* stub)
LoadServer	control/ctrl_client.h	/^  void LoadServer(const std::string& server_addr, CtrlService::Stub* stub);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& server_addr, CtrlService::Stub* stub)
LoadServerHandler	control/ctrl_server.cpp	/^void CtrlServer::LoadServerHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<LoadServerRequest, LoadServerResponse>* call)
LocalFS	persistence/file_system.cpp	/^fs::FileSystem* LocalFS() {$/;"	f	namespace:oneflow	signature:()
Lock	register/register_desc.cpp	/^void RegstDesc::Lock() {$/;"	f	class:oneflow::RegstDesc	signature:()
Lock	register/register_desc.h	/^  void Lock();$/;"	p	class:oneflow::final	access:public	signature:()
LockRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::LockRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
LockRegsts	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::LockRegsts() { GetProducedRegst("data_tmp")->Lock(); }$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
LockRegsts	graph/task_node.cpp	/^void TaskNode::LockRegsts() {$/;"	f	class:oneflow::TaskNode	signature:()
LockRegsts	graph/task_node.h	/^  virtual void LockRegsts();$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
LogDir	common/util.h	/^inline const std::string& LogDir() {$/;"	f	namespace:oneflow	signature:()
LogicalEdge	graph/logical_graph.h	/^  LogicalEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LogicalEdge	graph/logical_graph.h	/^class LogicalEdge;$/;"	x
LogicalGraph	graph/logical_graph.cpp	/^LogicalGraph::LogicalGraph() {$/;"	f	class:oneflow::LogicalGraph	signature:()
LogicalGraph	graph/logical_graph.h	/^  LogicalGraph();$/;"	p	class:oneflow::final	access:private	signature:()
LogicalNode	graph/logical_graph.h	/^  LogicalNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossAccCompActor	actor/loss_accumulate_compute_actor.h	/^  LossAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossAccCompTaskNode	graph/loss_accumulate_compute_task_node.h	/^  LossAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossCompTaskNode	graph/loss_compute_task_node.h	/^  LossCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossPrintCompActor	actor/loss_print_compute_actor.h	/^  LossPrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossPrintCompTaskNode	graph/loss_print_compute_task_node.h	/^  LossPrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossPrintKernel	kernel/loss_print_kernel.h	/^  LossPrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
LossPrintOp	operator/loss_print_op.h	/^  LossPrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MAKE_CPU_KERNEL_CREATOR_ENTRY	kernel/kernel.h	126;"	d
MAKE_ENTRY	comm_network/epoll/socket_message.h	27;"	d
MAKE_ENTRY	comm_network/epoll/socket_message.h	29;"	d
MAKE_ENTRY	comm_network/epoll/socket_message.h	48;"	d
MAKE_ENTRY	comm_network/epoll/socket_message.h	50;"	d
MAKE_ENTRY	comm_network/epoll/socket_read_helper.cpp	59;"	d	file:
MAKE_ENTRY	comm_network/epoll/socket_read_helper.cpp	62;"	d	file:
MAKE_ENTRY	comm_network/epoll/socket_read_helper.h	31;"	d
MAKE_ENTRY	comm_network/epoll/socket_read_helper.h	33;"	d
MAKE_ENTRY	comm_network/epoll/socket_write_helper.cpp	104;"	d	file:
MAKE_ENTRY	comm_network/epoll/socket_write_helper.cpp	107;"	d	file:
MAKE_ENTRY	comm_network/epoll/socket_write_helper.h	36;"	d
MAKE_ENTRY	comm_network/epoll/socket_write_helper.h	38;"	d
MAKE_ENTRY	common/preprocessor_test.cpp	105;"	d	file:
MAKE_ENTRY	common/preprocessor_test.cpp	108;"	d	file:
MAKE_ENTRY	common/preprocessor_test.cpp	68;"	d	file:
MAKE_ENTRY	common/preprocessor_test.cpp	71;"	d	file:
MAKE_ENTRY	common/preprocessor_test.cpp	95;"	d	file:
MAKE_ENTRY	common/preprocessor_test.cpp	98;"	d	file:
MAKE_ENTRY	control/ctrl_service.h	32;"	d
MAKE_ENTRY	control/ctrl_service.h	34;"	d
MAKE_ENTRY	kernel/accumulate_kernel_test.cpp	65;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	359;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	362;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	366;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	369;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	373;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	377;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	381;"	d	file:
MAKE_ENTRY	kernel/boxing_kernel_test.cpp	384;"	d	file:
MAKE_ENTRY	kernel/clone_kernel_test.cpp	76;"	d	file:
MAKE_ENTRY	kernel/concat_kernel_test.cpp	92;"	d	file:
MAKE_ENTRY	kernel/convolution_kernel_test.cpp	103;"	d	file:
MAKE_ENTRY	kernel/copy_hd_kernel_test.cpp	78;"	d	file:
MAKE_ENTRY	kernel/innerproduct_kernel_test.cpp	169;"	d	file:
MAKE_ENTRY	kernel/innerproduct_kernel_test.cpp	174;"	d	file:
MAKE_ENTRY	kernel/innerproduct_kernel_test.cpp	180;"	d	file:
MAKE_ENTRY	kernel/momentum_model_update_kernel_test.cpp	77;"	d	file:
MAKE_ENTRY	kernel/multinomial_logistic_loss_kernel_test.cpp	103;"	d	file:
MAKE_ENTRY	kernel/normal_model_update_kernel_test.cpp	71;"	d	file:
MAKE_ENTRY	kernel/pooling_kernel_test.cpp	121;"	d	file:
MAKE_ENTRY	kernel/relu_kernel_test.cpp	64;"	d	file:
MAKE_ENTRY	kernel/rmsprop_model_update_kernel_test.cpp	85;"	d	file:
MAKE_ENTRY	kernel/softmax_kernel_test.cpp	74;"	d	file:
MAKE_ENTRY	kernel/softmax_loss_kernel_test.cpp	82;"	d	file:
MAKE_ENTRY	kernel/softmax_loss_kernel_test.cpp	87;"	d	file:
MAKE_ENTRY	operator/boxing_op_test.cpp	109;"	d	file:
MAKE_ENTRY	operator/clone_op_test.cpp	31;"	d	file:
MAKE_ENTRY	operator/innerproduct_op_test.cpp	63;"	d	file:
MAKE_ENTRY	operator/pooling_op_test.cpp	43;"	d	file:
MAKE_ENTRY	operator/relu_op_test.cpp	29;"	d	file:
MAKE_ENTRY	operator/softmax_op_test.cpp	36;"	d	file:
MAKE_KERNEL_CREATOR_ENTRY	kernel/kernel.h	107;"	d
MAKE_PAIR	common/preprocessor_test.cpp	25;"	d	file:
MAKE_PAIR	common/preprocessor_test.cpp	28;"	d	file:
MAX_WITH_LOG_THRESHOLD	common/util.h	138;"	d
MOCK_METHOD0	job/mock_job_desc.h	/^  MOCK_METHOD0(DefaultDataType, DataType());$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:(DefaultDataType, DataType())
MOCK_METHOD0	job/mock_job_desc.h	/^  MOCK_METHOD0(SizeOfOneDataId, size_t());$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:(SizeOfOneDataId, size_t())
MULTINOMIAL_LOGISTIC_LOSS_KERNEL_ENTRY	kernel/multinomial_logistic_loss_kernel.cpp	78;"	d	file:
MachineCtx	job/machine_context.cpp	/^MachineCtx::MachineCtx(const std::string& this_mchn_name) {$/;"	f	class:oneflow::MachineCtx	signature:(const std::string& this_mchn_name)
MachineCtx	job/machine_context.h	/^  MachineCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
MachineCtx	job/machine_context.h	/^  MachineCtx(const std::string& this_mchn_name);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& this_mchn_name)
MachineID4MachineName	job/id_manager.cpp	/^int64_t IDMgr::MachineID4MachineName(const std::string& machine_name) const {$/;"	f	class:oneflow::IDMgr	signature:(const std::string& machine_name) const
MachineID4MachineName	job/id_manager.h	/^  int64_t MachineID4MachineName(const std::string& machine_name) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& machine_name) const
MachineId4ActorId	job/id_manager.cpp	/^int64_t IDMgr::MachineId4ActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
MachineId4ActorId	job/id_manager.h	/^  int64_t MachineId4ActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
MachineName4MachineId	job/id_manager.cpp	/^const std::string& IDMgr::MachineName4MachineId(int64_t machine_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id) const
MachineName4MachineId	job/id_manager.h	/^  const std::string& MachineName4MachineId(int64_t machine_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id) const
MakeEmptyDir	persistence/file_system.cpp	/^void FileSystem::MakeEmptyDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
MakeEmptyDir	persistence/file_system.h	/^  void MakeEmptyDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
Max	kernel/kernel_util.cpp	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr)
Max	kernel/kernel_util.cpp	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr, T* temp_storage, size_t temp_storage_bytes)
Max	kernel/kernel_util.h	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr)
Max	kernel/kernel_util.h	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr, T* temp_storage, size_t temp_storage_bytes)
MaxModelSplitNum	operator/operator.h	/^  virtual int32_t MaxModelSplitNum() const { return -1; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
MdDiffAccCompActor	actor/model_diff_accumulate_compute_actor.h	/^  MdDiffAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MdDiffAccCompTaskNode	graph/model_diff_accumulate_compute_task_node.h	/^  MdDiffAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MdLoadSnapshotPath	job/job_desc.cpp	/^const std::string& JobDesc::MdLoadSnapshotPath() {$/;"	f	class:oneflow::JobDesc	signature:()
MdLoadSnapshotPath	job/job_desc.h	/^  const std::string& MdLoadSnapshotPath();$/;"	p	class:oneflow::final	access:public	signature:()
MdSaveCompActor	actor/model_save_compute_actor.h	/^  MdSaveCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MdSaveCompTaskNode	graph/model_save_compute_task_node.h	/^  MdSaveCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MdSaveSnapshotsPath	job/job_desc.cpp	/^const std::string& JobDesc::MdSaveSnapshotsPath() const {$/;"	f	class:oneflow::JobDesc	signature:() const
MdSaveSnapshotsPath	job/job_desc.h	/^  const std::string& MdSaveSnapshotsPath() const;$/;"	p	class:oneflow::final	access:public	signature:() const
MdUpdateKernel	kernel/model_update_kernel.h	/^  MdUpdateKernel() = default;$/;"	p	class:oneflow::MdUpdateKernel	access:protected	signature:()
MdUpdateKernel	kernel/model_update_kernel.h	/^class MdUpdateKernel : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
MdUpdtChainNode	graph/chain_node.h	/^  MdUpdtChainNode() : random_seed_(NewRandomSeed()) {}$/;"	f	class:oneflow::final	access:public	signature:()
MdUpdtCompActor	actor/model_update_compute_actor.h	/^  MdUpdtCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MdUpdtCompTaskNode	graph/model_update_compute_task_node.h	/^  MdUpdtCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
Memcpy	kernel/kernel_util.cpp	/^void Memcpy<DeviceType::kCPU>(DeviceCtx* ctx, void* dst, const void* src,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, void* dst, const void* src, size_t sz, cudaMemcpyKind kind)
Memcpy	kernel/kernel_util.h	/^void Memcpy(DeviceCtx*, void* dst, const void* src, size_t sz,$/;"	p	namespace:oneflow	signature:(DeviceCtx*, void* dst, const void* src, size_t sz, cudaMemcpyKind kind = GetCudaMemcpyKind<device_type>::val)
MemoryAllocator	memory/memory_allocator.h	/^  MemoryAllocator() = default;$/;"	p	class:oneflow::final	access:private	signature:()
Memset	kernel/kernel_util.cpp	/^void Memset<DeviceType::kCPU>(DeviceCtx* ctx, void* dst, const char value,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, void* dst, const char value, size_t sz)
Memset	kernel/kernel_util.h	/^void Memset(DeviceCtx*, void* dst, const char value, size_t sz);$/;"	p	namespace:oneflow	signature:(DeviceCtx*, void* dst, const char value, size_t sz)
MockJobDesc	job/mock_job_desc.h	/^  MockJobDesc() = default;$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:()
MockJobDesc	job/mock_job_desc.h	/^class MockJobDesc : public JobDesc {$/;"	c	namespace:oneflow::test	inherits:JobDesc
ModelMergeChains	graph/chain_graph.cpp	/^void ModelMergeChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
ModelSaveKernel	kernel/model_save_kernel.h	/^  ModelSaveKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ModelSaveOp	operator/model_save_op.h	/^  ModelSaveOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ModelSplitAxis	operator/operator.h	/^  virtual int32_t ModelSplitAxis() const { return -1; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
ModelUpdtOp	operator/model_update_op.h	/^  ModelUpdtOp() = default;$/;"	p	class:oneflow::ModelUpdtOp	access:protected	signature:()
ModelUpdtOp	operator/model_update_op.h	/^class ModelUpdtOp : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
ModifyLbn4BnInOp	operator/operator.cpp	/^void Operator::ModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op, const std::string& lbn)
ModifyLbn4BnInOp	operator/operator.h	/^  void ModifyLbn4BnInOp(const std::string& bn_in_op, const std::string& lbn);$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op, const std::string& lbn)
MomentumMdUpdateKernel	kernel/momentum_model_update_kernel.h	/^  MomentumMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MomentumModelUpdateOp	operator/momentum_model_update_op.h	/^  MomentumModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MsgBodyReadHandle	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::MsgBodyReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
MsgBodyReadHandle	comm_network/epoll/socket_read_helper.h	/^  bool MsgBodyReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
MsgBodyWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::MsgBodyWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
MsgBodyWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool MsgBodyWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
MsgHeadReadHandle	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::MsgHeadReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
MsgHeadReadHandle	comm_network/epoll/socket_read_helper.h	/^  bool MsgHeadReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
MsgHeadWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::MsgHeadWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
MsgHeadWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool MsgHeadWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
Mul	kernel/kernel_util.cpp	/^  static void Mul(DeviceCtx* ctx, const int64_t n, const T* x, const T* y,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, const T* y, T* z)
Mul	kernel/kernel_util.h	/^  static void Mul(DeviceCtx* ctx, const int64_t n, const T* x, const T* y,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, const T* y, T* z)
MultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.h	/^  MultinomialLogisticLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MultinomialLogisticLossKernelUtil	kernel/multinomial_logistic_loss_kernel.cpp	/^  MultinomialLogisticLossKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
MultinomialLogisticLossKernelUtil	kernel/multinomial_logistic_loss_kernel.h	/^  MultinomialLogisticLossKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
MultinomialLogisticLossOp	operator/multinomial_logistic_loss_op.h	/^  MultinomialLogisticLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
MutBlobDesc	register/register_desc.cpp	/^BlobDesc* RegstDesc::MutBlobDesc(const std::string& lbn) {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn)
MutBlobDesc	register/register_desc.h	/^  BlobDesc* MutBlobDesc(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
NaiveBuildGraphStruct	graph/logical_graph.cpp	/^void LogicalGraph::NaiveBuildGraphStruct($/;"	f	class:oneflow::LogicalGraph	signature:( HashMap<LogicalEdge*, std::string>* edge2lbn, HashMap<LogicalEdge*, std::string>* edge2ibn)
NaiveBuildGraphStruct	graph/logical_graph.h	/^  void NaiveBuildGraphStruct(HashMap<LogicalEdge*, std::string>* edge2lbn,$/;"	p	class:oneflow::final	access:private	signature:(HashMap<LogicalEdge*, std::string>* edge2lbn, HashMap<LogicalEdge*, std::string>* edge2ibn)
NewActor	actor/actor.cpp	/^std::unique_ptr<Actor> NewActor(const TaskProto& task_proto,$/;"	f	namespace:oneflow	signature:(const TaskProto& task_proto, const ThreadCtx& thread_ctx)
NewActor	actor/actor.h	/^std::unique_ptr<Actor> NewActor(const TaskProto&, const ThreadCtx&);$/;"	p	namespace:oneflow	signature:(const TaskProto&, const ThreadCtx&)
NewActorReadId	comm_network/comm_network.h	/^  virtual void* NewActorReadId() = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:()
NewActorReadId	comm_network/epoll/epoll_comm_network.cpp	/^void* EpollCommNet::NewActorReadId() { return new ActorReadContext; }$/;"	f	class:oneflow::EpollCommNet	signature:()
NewActorReadId	comm_network/epoll/epoll_comm_network.h	/^  void* NewActorReadId();$/;"	p	class:oneflow::final	access:public	signature:()
NewAllSingleton	job/runtime.cpp	/^void Runtime::NewAllSingleton(const Plan& plan, bool is_experiment_phase) {$/;"	f	class:oneflow::Runtime	signature:(const Plan& plan, bool is_experiment_phase)
NewAllSingleton	job/runtime.h	/^  void NewAllSingleton(const Plan& plan, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(const Plan& plan, bool is_experiment_phase)
NewAppendableFile	persistence/file_system.h	/^  virtual void NewAppendableFile(const std::string& fname,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NewAppendableFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewAppendableFile($/;"	f	class:oneflow::fs::HadoopFileSystem	signature:( const std::string& fname, std::unique_ptr<WritableFile>* result)
NewAppendableFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewAppendableFile(const std::string& fname,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NewAppendableFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewAppendableFile($/;"	f	class:oneflow::fs::WindowsFileSystem	signature:( const std::string& fname, std::unique_ptr<WritableFile>* result)
NewBoxingOp	graph/boxing_task_node.cpp	/^std::shared_ptr<Operator> BoxingTaskNode::NewBoxingOp($/;"	f	class:oneflow::BoxingTaskNode	signature:( const std::string& lbn, const ChainNode* in_chain, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_in_edges, const std::vector<EdgeInfo>& sorted_out_edges)
NewBoxingOp	graph/boxing_task_node.h	/^  std::shared_ptr<Operator> NewBoxingOp($/;"	p	class:oneflow::BoxingTaskNode	access:private	signature:( const std::string& lbn, const ChainNode* in_chain, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_in_edges, const std::vector<EdgeInfo>& sorted_out_edges)
NewCompTaskNode	graph/chain_node.h	/^  virtual CompTaskNode* NewCompTaskNode() const = 0;$/;"	p	class:oneflow::ChainNode	access:protected	signature:() const
NewCopyOpConf	graph/copy_task_node.cpp	/^OperatorConf CopyCommNetTaskNode::NewCopyOpConf() {$/;"	f	class:oneflow::CopyCommNetTaskNode	signature:()
NewCopyOpConf	graph/copy_task_node.cpp	/^OperatorConf CopyHdTaskNode::NewCopyOpConf() {$/;"	f	class:oneflow::CopyHdTaskNode	signature:()
NewCopyOpConf	graph/copy_task_node.h	/^  virtual OperatorConf NewCopyOpConf() = 0;$/;"	p	class:oneflow::CopyTaskNode	access:protected	signature:()
NewCounter	job/runtime_context.cpp	/^void RuntimeCtx::NewCounter(const std::string& name, int64_t val) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name, int64_t val)
NewCounter	job/runtime_context.h	/^  void NewCounter(const std::string& name, int64_t val);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name, int64_t val)
NewEdge	graph/graph.h	/^  EdgeType* NewEdge();$/;"	p	class:oneflow::Graph	access:public	signature:()
NewEdge	graph/graph.h	/^EdgeType* Graph<NodeType, EdgeType>::NewEdge() {$/;"	f	class:oneflow::Graph	signature:()
NewEdgeId	graph/node.cpp	/^int64_t NewEdgeId() {$/;"	f	namespace:oneflow	signature:()
NewEdgeId	graph/node.h	/^int64_t NewEdgeId();$/;"	p	namespace:oneflow	signature:()
NewNode	graph/graph.h	/^  DerivedNodeType* NewNode();$/;"	p	class:oneflow::Graph	access:public	signature:()
NewNode	graph/graph.h	/^DerivedNodeType* Graph<NodeType, EdgeType>::NewNode() {$/;"	f	class:oneflow::Graph	signature:()
NewNodeId	graph/node.cpp	/^int64_t NewNodeId() {$/;"	f	namespace:oneflow	signature:()
NewNodeId	graph/node.h	/^int64_t NewNodeId();$/;"	p	namespace:oneflow	signature:()
NewRandomAccessFile	persistence/file_system.h	/^  virtual void NewRandomAccessFile($/;"	p	class:oneflow::fs::FileSystem	access:public	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
NewRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::HadoopFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
NewRandomAccessFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::PosixFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
NewRandomAccessFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::WindowsFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
NewRandomSeed	common/util.h	/^inline uint32_t NewRandomSeed() {$/;"	f	namespace:oneflow	signature:()
NewRegstDescId	job/id_manager.h	/^  int64_t NewRegstDescId() { return regst_desc_id_count_++; }$/;"	f	class:oneflow::final	access:public	signature:()
NewRegsts	register/register_manager.cpp	/^void RegstMgr::NewRegsts(const RegstDescProto& regst_desc_proto,$/;"	f	class:oneflow::RegstMgr	signature:(const RegstDescProto& regst_desc_proto, std::function<void(Regst*)> OneRegstDone)
NewRegsts	register/register_manager.h	/^  void NewRegsts(const RegstDescProto& regst_desc_proto,$/;"	p	class:oneflow::final	access:public	signature:(const RegstDescProto& regst_desc_proto, std::function<void(Regst*)> OneRegstDone)
NewStub	control/ctrl_service.cpp	/^std::unique_ptr<CtrlService::Stub> CtrlService::NewStub($/;"	f	class:oneflow::CtrlService	signature:( const std::string& addr)
NewStub	control/ctrl_service.h	/^  static std::unique_ptr<Stub> NewStub(const std::string& addr);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& addr)
NewTaskId	job/id_manager.cpp	/^int64_t IDMgr::NewTaskId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
NewTaskId	job/id_manager.h	/^  int64_t NewTaskId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id)
NewUniqueId	common/util.h	/^inline std::string NewUniqueId() {$/;"	f	namespace:oneflow	signature:()
NewWorkStreamId	actor/actor.cpp	/^int64_t Actor::NewWorkStreamId() {$/;"	f	class:oneflow::Actor	signature:()
NewWorkStreamId	actor/actor.h	/^  int64_t NewWorkStreamId();$/;"	p	class:oneflow::Actor	access:protected	signature:()
NewWorkStreamId	job/id_manager.cpp	/^int64_t IDMgr::NewWorkStreamId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
NewWorkStreamId	job/id_manager.h	/^  int64_t NewWorkStreamId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id)
NewWritableFile	persistence/file_system.h	/^  virtual void NewWritableFile(const std::string& fname,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NewWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NewWritableFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NewWritableFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
NextConcatAddr	kernel/concat_kernel.cpp	/^char* NextConcatAddr(char* start_addr, int64_t concat_idx,$/;"	f	namespace:oneflow::__anon7	signature:(char* start_addr, int64_t concat_idx, int64_t concat_axis_dim, int64_t concat_axis_offset, int64_t concat_elem_bytesize)
Node	graph/node.h	/^  Node() { node_id_ = NewNodeId(); }$/;"	f	class:oneflow::Node	access:public	signature:()
Node	graph/node.h	/^class Node {$/;"	c	namespace:oneflow
NormalMdUpdateKernel	kernel/normal_model_update_kernel.h	/^  NormalMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
NormalModelUpdateOp	operator/normal_model_update_op.h	/^  NormalModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream(fs::FileSystem* fs, const std::string& file_path)$/;"	f	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path)
NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream(fs::FileSystem* fs, const std::string& file_path,$/;"	f	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path, uint64_t offset)
NotifyDone	control/ctrl_client.cpp	/^void CtrlClient::NotifyDone(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
NotifyDone	control/ctrl_client.h	/^  void NotifyDone(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
NotifyDoneHandler	control/ctrl_server.cpp	/^void CtrlServer::NotifyDoneHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<NotifyDoneRequest, NotifyDoneResponse>* call)
NotifyMeSocketReadable	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::NotifyMeSocketReadable() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
NotifyMeSocketReadable	comm_network/epoll/socket_read_helper.h	/^  void NotifyMeSocketReadable();$/;"	p	class:oneflow::final	access:public	signature:()
NotifyMeSocketWriteable	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::NotifyMeSocketWriteable() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
NotifyMeSocketWriteable	comm_network/epoll/socket_write_helper.h	/^  void NotifyMeSocketWriteable();$/;"	p	class:oneflow::final	access:public	signature:()
NumAxes	common/shape.h	/^  int64_t NumAxes() const { return dim_vec_.size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
NumOfBatchesInSnapshot	job/job_desc.cpp	/^int32_t JobDesc::NumOfBatchesInSnapshot() const {$/;"	f	class:oneflow::JobDesc	signature:() const
NumOfBatchesInSnapshot	job/job_desc.h	/^  int32_t NumOfBatchesInSnapshot() const;$/;"	p	class:oneflow::final	access:public	signature:() const
NumOfLbn	register/register_desc.h	/^  size_t NumOfLbn() const { return lbn2blob_desc_.size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
NumOfPiecesInBatch	job/job_desc.cpp	/^int32_t JobDesc::NumOfPiecesInBatch() const {$/;"	f	class:oneflow::JobDesc	signature:() const
NumOfPiecesInBatch	job/job_desc.h	/^  int32_t NumOfPiecesInBatch() const;$/;"	p	class:oneflow::final	access:public	signature:() const
OF_BARRIER	control/ctrl_client.h	49;"	d
OF_CALL_ONCE	control/ctrl_client.h	51;"	d
OF_DECLARE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.h	/^OF_DECLARE_ENUM_TO_OSTREAM_FUNC(ActorCmd);$/;"	p	namespace:oneflow	signature:(ActorCmd)
OF_DECLARE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.h	/^OF_DECLARE_ENUM_TO_OSTREAM_FUNC(ActorMsgType);$/;"	p	namespace:oneflow	signature:(ActorMsgType)
OF_DECLARE_ENUM_TO_OSTREAM_FUNC	common/util.h	117;"	d
OF_DEFINE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.cpp	/^OF_DEFINE_ENUM_TO_OSTREAM_FUNC(ActorCmd);$/;"	p	namespace:oneflow	file:	signature:(ActorCmd)
OF_DEFINE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.cpp	/^OF_DEFINE_ENUM_TO_OSTREAM_FUNC(ActorMsgType);$/;"	p	namespace:oneflow	file:	signature:(ActorMsgType)
OF_DEFINE_ENUM_TO_OSTREAM_FUNC	common/util.h	120;"	d
OF_DISALLOW_COPY	common/util.h	28;"	d
OF_DISALLOW_COPY_AND_MOVE	actor/accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateCompActor);$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:(AccumulateCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/act_event_logger.h	/^  OF_DISALLOW_COPY_AND_MOVE(ActEventLogger);$/;"	p	class:oneflow::final	access:public	signature:(ActEventLogger)
OF_DISALLOW_COPY_AND_MOVE	actor/actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(Actor);$/;"	p	class:oneflow::Actor	access:public	signature:(Actor)
OF_DISALLOW_COPY_AND_MOVE	actor/actor_message_bus.h	/^  OF_DISALLOW_COPY_AND_MOVE(ActorMsgBus);$/;"	p	class:oneflow::final	access:public	signature:(ActorMsgBus)
OF_DISALLOW_COPY_AND_MOVE	actor/backward_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BackwardCompActor);$/;"	p	class:oneflow::final	access:public	signature:(BackwardCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/boxing_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingActor);$/;"	p	class:oneflow::final	access:public	signature:(BoxingActor)
OF_DISALLOW_COPY_AND_MOVE	actor/compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CompActor);$/;"	p	class:oneflow::CompActor	access:public	signature:(CompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/copy_comm_net_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetActor);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetActor)
OF_DISALLOW_COPY_AND_MOVE	actor/copy_hd_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdActor);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdActor)
OF_DISALLOW_COPY_AND_MOVE	actor/forward_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(ForwardCompActor);$/;"	p	class:oneflow::final	access:public	signature:(ForwardCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/loss_accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossAccCompActor);$/;"	p	class:oneflow::final	access:public	signature:(LossAccCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/loss_print_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintCompActor);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/model_diff_accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdDiffAccCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/model_save_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdSaveCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/model_update_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/print_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintCompActor);$/;"	p	class:oneflow::final	access:public	signature:(PrintCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/rnn_boxing_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingActor);$/;"	p	class:oneflow::final	access:public	signature:(BoxingActor)
OF_DISALLOW_COPY_AND_MOVE	actor/sink_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(SinkCompActor);$/;"	p	class:oneflow::SinkCompActor	access:public	signature:(SinkCompActor)
OF_DISALLOW_COPY_AND_MOVE	actor/source_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(SourceCompActor);$/;"	p	class:oneflow::final	access:public	signature:(SourceCompActor)
OF_DISALLOW_COPY_AND_MOVE	comm_network/comm_network.h	/^  OF_DISALLOW_COPY_AND_MOVE(CommNet);$/;"	p	class:oneflow::CommNet	access:public	signature:(CommNet)
OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/epoll_comm_network.h	/^  OF_DISALLOW_COPY_AND_MOVE(EpollCommNet);$/;"	p	class:oneflow::final	access:public	signature:(EpollCommNet)
OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/io_event_poller.h	/^  OF_DISALLOW_COPY_AND_MOVE(IOEventPoller);$/;"	p	class:oneflow::final	access:public	signature:(IOEventPoller)
OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketHelper)
OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_read_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketReadHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketReadHelper)
OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_write_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketWriteHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketWriteHelper)
OF_DISALLOW_COPY_AND_MOVE	common/blocking_counter.h	/^  OF_DISALLOW_COPY_AND_MOVE(BlockingCounter);$/;"	p	class:oneflow::final	access:public	signature:(BlockingCounter)
OF_DISALLOW_COPY_AND_MOVE	common/channel.h	/^  OF_DISALLOW_COPY_AND_MOVE(Channel);$/;"	p	class:oneflow::final	access:public	signature:(Channel)
OF_DISALLOW_COPY_AND_MOVE	common/util.h	36;"	d
OF_DISALLOW_COPY_AND_MOVE	control/ctrl_call.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlCall);$/;"	p	class:oneflow::final	access:public	signature:(CtrlCall)
OF_DISALLOW_COPY_AND_MOVE	control/ctrl_call.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlCallIf);$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:(CtrlCallIf)
OF_DISALLOW_COPY_AND_MOVE	control/ctrl_client.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlClient);$/;"	p	class:oneflow::final	access:public	signature:(CtrlClient)
OF_DISALLOW_COPY_AND_MOVE	control/ctrl_server.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlServer);$/;"	p	class:oneflow::final	access:public	signature:(CtrlServer)
OF_DISALLOW_COPY_AND_MOVE	device/cuda_stream_handle.h	/^  OF_DISALLOW_COPY_AND_MOVE(CudaStreamHandle);$/;"	p	class:oneflow::final	access:public	signature:(CudaStreamHandle)
OF_DISALLOW_COPY_AND_MOVE	graph/accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccCompTaskNode);$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:(AccCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/backward_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(BackwardCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(BackwardCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingTaskNode);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(BoxingTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(InBoxingTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(InBoxingTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(OutBoxingTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(OutBoxingTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/chain_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainGraph);$/;"	p	class:oneflow::final	access:public	signature:(ChainGraph)
OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainEdge);$/;"	p	class:oneflow::final	access:public	signature:(ChainEdge)
OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainNode);$/;"	p	class:oneflow::ChainNode	access:public	signature:(ChainNode)
OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtChainNode)
OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintChainNode);$/;"	p	class:oneflow::final	access:public	signature:(PrintChainNode)
OF_DISALLOW_COPY_AND_MOVE	graph/compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CompTaskNode);$/;"	p	class:oneflow::CompTaskNode	access:public	signature:(CompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyTaskNode);$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:(CopyTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecEdge);$/;"	p	class:oneflow::final	access:public	signature:(ExecEdge)
OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecGraph);$/;"	p	class:oneflow::final	access:public	signature:(ExecGraph)
OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecNode);$/;"	p	class:oneflow::final	access:public	signature:(ExecNode)
OF_DISALLOW_COPY_AND_MOVE	graph/forward_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ForwardCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(ForwardCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(Graph);$/;"	p	class:oneflow::Graph	access:public	signature:(Graph)
OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalEdge);$/;"	p	class:oneflow::final	access:public	signature:(LogicalEdge)
OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalGraph);$/;"	p	class:oneflow::final	access:public	signature:(LogicalGraph)
OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalNode);$/;"	p	class:oneflow::final	access:public	signature:(LogicalNode)
OF_DISALLOW_COPY_AND_MOVE	graph/loss_accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossAccCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossAccCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/loss_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/loss_print_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/model_diff_accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdDiffAccCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/model_save_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdSaveCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/model_update_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/node.h	/^  OF_DISALLOW_COPY_AND_MOVE(Edge);$/;"	p	class:oneflow::Edge	access:public	signature:(Edge)
OF_DISALLOW_COPY_AND_MOVE	graph/node.h	/^  OF_DISALLOW_COPY_AND_MOVE(Node);$/;"	p	class:oneflow::Node	access:public	signature:(Node)
OF_DISALLOW_COPY_AND_MOVE	graph/print_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(PrintCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/sink_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(SinkCompTaskNode);$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:(SinkCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/source_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(SourceCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(SourceCompTaskNode)
OF_DISALLOW_COPY_AND_MOVE	graph/task_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskGraph);$/;"	p	class:oneflow::final	access:public	signature:(TaskGraph)
OF_DISALLOW_COPY_AND_MOVE	graph/task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskEdge);$/;"	p	class:oneflow::final	access:public	signature:(TaskEdge)
OF_DISALLOW_COPY_AND_MOVE	graph/task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskNode);$/;"	p	class:oneflow::TaskNode	access:public	signature:(TaskNode)
OF_DISALLOW_COPY_AND_MOVE	job/compiler.h	/^  OF_DISALLOW_COPY_AND_MOVE(Compiler);$/;"	p	class:oneflow::final	access:public	signature:(Compiler)
OF_DISALLOW_COPY_AND_MOVE	job/id_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(IDMgr);$/;"	p	class:oneflow::final	access:public	signature:(IDMgr)
OF_DISALLOW_COPY_AND_MOVE	job/improver.h	/^  OF_DISALLOW_COPY_AND_MOVE(Improver);$/;"	p	class:oneflow::final	access:public	signature:(Improver)
OF_DISALLOW_COPY_AND_MOVE	job/job_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(JobDesc);$/;"	p	class:oneflow::final	access:public	signature:(JobDesc)
OF_DISALLOW_COPY_AND_MOVE	job/machine_context.h	/^  OF_DISALLOW_COPY_AND_MOVE(MachineCtx);$/;"	p	class:oneflow::final	access:public	signature:(MachineCtx)
OF_DISALLOW_COPY_AND_MOVE	job/oneflow.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(Oneflow);$/;"	p	class:oneflow::final	file:	access:public	signature:(Oneflow)
OF_DISALLOW_COPY_AND_MOVE	job/runtime.h	/^  OF_DISALLOW_COPY_AND_MOVE(Runtime);$/;"	p	class:oneflow::final	access:public	signature:(Runtime)
OF_DISALLOW_COPY_AND_MOVE	job/runtime_context.h	/^  OF_DISALLOW_COPY_AND_MOVE(RuntimeCtx);$/;"	p	class:oneflow::final	access:public	signature:(RuntimeCtx)
OF_DISALLOW_COPY_AND_MOVE	kernel/accumulate_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateKernel);$/;"	p	class:oneflow::final	access:public	signature:(AccumulateKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(DataContentIterator);$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:(DataContentIterator)
OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(DataIdIterator);$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:(DataIdIterator)
OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingKernel);$/;"	p	class:oneflow::final	access:public	signature:(BoxingKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/clone_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CloneKernel);$/;"	p	class:oneflow::final	access:public	signature:(CloneKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/concat_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConcatKernel);$/;"	p	class:oneflow::final	access:public	signature:(ConcatKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/convolution_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(ConvolutionKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/convolution_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionKernel);$/;"	p	class:oneflow::final	access:public	signature:(ConvolutionKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/copy_comm_net_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetKernel);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/copy_hd_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdKernel);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/data_loader_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(DataLoaderKernel);$/;"	p	class:oneflow::final	access:public	signature:(DataLoaderKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/innerproduct_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(InnerProductKernel);$/;"	p	class:oneflow::final	access:public	signature:(InnerProductKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(Kernel);$/;"	p	class:oneflow::Kernel	access:public	signature:(Kernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(KernelIf);$/;"	p	class:oneflow::KernelIf	access:public	signature:(KernelIf)
OF_DISALLOW_COPY_AND_MOVE	kernel/loss_print_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintKernel);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/model_save_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelSaveKernel);$/;"	p	class:oneflow::final	access:public	signature:(ModelSaveKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdateKernel);$/;"	p	class:oneflow::MdUpdateKernel	access:public	signature:(MdUpdateKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/momentum_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MomentumMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(MomentumMdUpdateKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(MultinomialLogisticLossKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernel);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/normal_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(NormalMdUpdateKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/opkernel_test_common.h	/^  OF_DISALLOW_COPY_AND_MOVE(KTCommon);$/;"	p	class:oneflow::test::final	access:public	signature:(KTCommon)
OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(PoolingKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernel);$/;"	p	class:oneflow::final	access:public	signature:(PoolingKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernelUtil);$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(PoolingKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/print_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintKernel);$/;"	p	class:oneflow::final	access:public	signature:(PrintKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(ReluKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernel);$/;"	p	class:oneflow::final	access:public	signature:(ReluKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(ReluKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/rmsprop_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(RMSPropMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(RMSPropMdUpdateKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(SoftmaxKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernel);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(SoftmaxLossKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernel);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossKernel)
OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossKernelUtil)
OF_DISALLOW_COPY_AND_MOVE	memory/memory_allocator.h	/^  OF_DISALLOW_COPY_AND_MOVE(MemoryAllocator);$/;"	p	class:oneflow::final	access:public	signature:(MemoryAllocator)
OF_DISALLOW_COPY_AND_MOVE	operator/accumulate_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateOp);$/;"	p	class:oneflow::final	access:public	signature:(AccumulateOp)
OF_DISALLOW_COPY_AND_MOVE	operator/boxing_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingOp);$/;"	p	class:oneflow::final	access:public	signature:(BoxingOp)
OF_DISALLOW_COPY_AND_MOVE	operator/clone_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CloneOp);$/;"	p	class:oneflow::final	access:public	signature:(CloneOp)
OF_DISALLOW_COPY_AND_MOVE	operator/concat_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConcatOp);$/;"	p	class:oneflow::final	access:public	signature:(ConcatOp)
OF_DISALLOW_COPY_AND_MOVE	operator/convolution_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionOp);$/;"	p	class:oneflow::final	access:public	signature:(ConvolutionOp)
OF_DISALLOW_COPY_AND_MOVE	operator/copy_comm_net_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetOp);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetOp)
OF_DISALLOW_COPY_AND_MOVE	operator/copy_hd_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdOp);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdOp)
OF_DISALLOW_COPY_AND_MOVE	operator/data_loader_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(DataLoaderOp);$/;"	p	class:oneflow::final	access:public	signature:(DataLoaderOp)
OF_DISALLOW_COPY_AND_MOVE	operator/innerproduct_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(InnerProductOp);$/;"	p	class:oneflow::final	access:public	signature:(InnerProductOp)
OF_DISALLOW_COPY_AND_MOVE	operator/loss_print_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintOp);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintOp)
OF_DISALLOW_COPY_AND_MOVE	operator/model_save_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelSaveOp);$/;"	p	class:oneflow::final	access:public	signature:(ModelSaveOp)
OF_DISALLOW_COPY_AND_MOVE	operator/model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelUpdtOp);$/;"	p	class:oneflow::ModelUpdtOp	access:public	signature:(ModelUpdtOp)
OF_DISALLOW_COPY_AND_MOVE	operator/momentum_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(MomentumModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(MomentumModelUpdateOp)
OF_DISALLOW_COPY_AND_MOVE	operator/multinomial_logistic_loss_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossOp);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossOp)
OF_DISALLOW_COPY_AND_MOVE	operator/normal_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(NormalModelUpdateOp)
OF_DISALLOW_COPY_AND_MOVE	operator/operator.h	/^  OF_DISALLOW_COPY_AND_MOVE(Operator);$/;"	p	class:oneflow::Operator	access:public	signature:(Operator)
OF_DISALLOW_COPY_AND_MOVE	operator/pooling_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingOp);$/;"	p	class:oneflow::final	access:public	signature:(PoolingOp)
OF_DISALLOW_COPY_AND_MOVE	operator/print_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintOp);$/;"	p	class:oneflow::final	access:public	signature:(PrintOp)
OF_DISALLOW_COPY_AND_MOVE	operator/relu_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluOp);$/;"	p	class:oneflow::final	access:public	signature:(ReluOp)
OF_DISALLOW_COPY_AND_MOVE	operator/rmsprop_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(RMSPropModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(RMSPropModelUpdateOp)
OF_DISALLOW_COPY_AND_MOVE	operator/softmax_loss_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossOp);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossOp)
OF_DISALLOW_COPY_AND_MOVE	operator/softmax_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxOp);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxOp)
OF_DISALLOW_COPY_AND_MOVE	persistence/cyclic_persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(CyclicPersistentInStream);$/;"	p	class:oneflow::final	access:public	signature:(CyclicPersistentInStream)
OF_DISALLOW_COPY_AND_MOVE	persistence/file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(RandomAccessFile);$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:(RandomAccessFile)
OF_DISALLOW_COPY_AND_MOVE	persistence/file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(WritableFile);$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:(WritableFile)
OF_DISALLOW_COPY_AND_MOVE	persistence/hadoop/hadoop_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(HadoopFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(HadoopFileSystem)
OF_DISALLOW_COPY_AND_MOVE	persistence/normal_persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalPersistentInStream);$/;"	p	class:oneflow::final	access:public	signature:(NormalPersistentInStream)
OF_DISALLOW_COPY_AND_MOVE	persistence/persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(PersistentInStream);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(PersistentInStream)
OF_DISALLOW_COPY_AND_MOVE	persistence/persistent_out_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(PersistentOutStream);$/;"	p	class:oneflow::final	access:public	signature:(PersistentOutStream)
OF_DISALLOW_COPY_AND_MOVE	persistence/posix/posix_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(PosixFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(PosixFileSystem)
OF_DISALLOW_COPY_AND_MOVE	persistence/snapshot.h	/^  OF_DISALLOW_COPY_AND_MOVE(Snapshot);$/;"	p	class:oneflow::final	access:public	signature:(Snapshot)
OF_DISALLOW_COPY_AND_MOVE	persistence/windows/windows_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(WindowsFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(WindowsFileSystem)
OF_DISALLOW_COPY_AND_MOVE	register/blob.h	/^  OF_DISALLOW_COPY_AND_MOVE(Blob);$/;"	p	class:oneflow::final	access:public	signature:(Blob)
OF_DISALLOW_COPY_AND_MOVE	register/register.h	/^  OF_DISALLOW_COPY_AND_MOVE(Regst);$/;"	p	class:oneflow::final	access:public	signature:(Regst)
OF_DISALLOW_COPY_AND_MOVE	register/register_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(RegstDesc);$/;"	p	class:oneflow::final	access:public	signature:(RegstDesc)
OF_DISALLOW_COPY_AND_MOVE	register/register_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(RegstMgr);$/;"	p	class:oneflow::final	access:public	signature:(RegstMgr)
OF_DISALLOW_COPY_AND_MOVE	register/runtime_register_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(RtRegstDesc);$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(RtRegstDesc)
OF_DISALLOW_COPY_AND_MOVE	thread/cpu_thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(CpuThread);$/;"	p	class:oneflow::final	access:public	signature:(CpuThread)
OF_DISALLOW_COPY_AND_MOVE	thread/gpu_thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(GpuThread);$/;"	p	class:oneflow::final	access:public	signature:(GpuThread)
OF_DISALLOW_COPY_AND_MOVE	thread/thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(Thread);$/;"	p	class:oneflow::Thread	access:public	signature:(Thread)
OF_DISALLOW_COPY_AND_MOVE	thread/thread_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(ThreadMgr);$/;"	p	class:oneflow::final	access:public	signature:(ThreadMgr)
OF_DISALLOW_MOVE	common/util.h	32;"	d
OF_PB_POINTER_GET	common/protobuf.h	102;"	d
OF_PP_CAT	common/preprocessor.h	6;"	d
OF_PP_FOR_EACH_TUPLE	comm_network/epoll/socket_read_helper.h	/^  OF_PP_FOR_EACH_TUPLE(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	comm_network/epoll/socket_write_helper.h	/^  OF_PP_FOR_EACH_TUPLE(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	common/data_type.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_GET_DATA_TYPE_VAL, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_GET_DATA_TYPE_VAL, ALL_DATA_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	common/data_type.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_GET_SIZE_OF_VAL, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_GET_SIZE_OF_VAL, ALL_DATA_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	common/data_type.h	/^OF_PP_FOR_EACH_TUPLE(DECLARE_GET_DATA_TYPE, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	signature:(DECLARE_GET_DATA_TYPE, ALL_DATA_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	common/data_type.h	/^OF_PP_FOR_EACH_TUPLE(DECLARE_GET_SIZE_OF, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	signature:(DECLARE_GET_SIZE_OF, ALL_DATA_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	common/preprocessor.h	12;"	d
OF_PP_FOR_EACH_TUPLE	control/ctrl_server.h	/^  OF_PP_FOR_EACH_TUPLE(DECLARE_CTRL_METHOD_HANDLE, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(DECLARE_CTRL_METHOD_HANDLE, CTRL_METHOD_SEQ)
OF_PP_FOR_EACH_TUPLE	control/ctrl_service.h	/^    OF_PP_FOR_EACH_TUPLE(DECLARE_RPC_METHOD, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final::final	access:private	signature:(DECLARE_RPC_METHOD, CTRL_METHOD_SEQ)
OF_PP_FOR_EACH_TUPLE	control/ctrl_service.h	/^    OF_PP_FOR_EACH_TUPLE(DECLARE_STUB_METHOD, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final::final	access:public	signature:(DECLARE_STUB_METHOD, CTRL_METHOD_SEQ)
OF_PP_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_FOR_EACH_TUPLE(DECLARE_VIRTUAL_FROM_METHOD, CHAIN_TYPE_SEQ);$/;"	p	class:oneflow::ChainNode	access:public	signature:(DECLARE_VIRTUAL_FROM_METHOD, CHAIN_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	kernel/kernel_util.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_INT_KERNEL_UTIL, INT_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_INT_KERNEL_UTIL, INT_DATA_TYPE_SEQ)
OF_PP_FOR_EACH_TUPLE	register/blob.cpp	/^OF_PP_FOR_EACH_TUPLE(INSTANTIATE_BLOB_FUNC, DEVICE_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(INSTANTIATE_BLOB_FUNC, DEVICE_TYPE_SEQ)
OF_PP_INTERNAL_APPLY_ATOMIC	common/preprocessor_internal.h	369;"	d
OF_PP_INTERNAL_APPLY_ATOMIC_WITH_DATA	common/preprocessor_internal.h	370;"	d
OF_PP_INTERNAL_APPLY_TUPLE	common/preprocessor_internal.h	366;"	d
OF_PP_INTERNAL_APPLY_TUPLE_I	common/preprocessor_internal.h	368;"	d
OF_PP_INTERNAL_ARG_0	common/preprocessor_internal.h	77;"	d
OF_PP_INTERNAL_ARG_1	common/preprocessor_internal.h	78;"	d
OF_PP_INTERNAL_ARG_2	common/preprocessor_internal.h	79;"	d
OF_PP_INTERNAL_ARG_3	common/preprocessor_internal.h	80;"	d
OF_PP_INTERNAL_ARG_4	common/preprocessor_internal.h	81;"	d
OF_PP_INTERNAL_ARG_5	common/preprocessor_internal.h	82;"	d
OF_PP_INTERNAL_ARG_6	common/preprocessor_internal.h	83;"	d
OF_PP_INTERNAL_ARG_7	common/preprocessor_internal.h	84;"	d
OF_PP_INTERNAL_CAT	common/preprocessor_internal.h	9;"	d
OF_PP_INTERNAL_CAT5	common/preprocessor_internal.h	164;"	d
OF_PP_INTERNAL_CAT_I	common/preprocessor_internal.h	10;"	d
OF_PP_INTERNAL_D1_APPLY_ATOMIC_WITH_DATA	common/preprocessor_internal.h	209;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH	common/preprocessor_internal.h	372;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_0	common/preprocessor_internal.h	382;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_1	common/preprocessor_internal.h	385;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_10	common/preprocessor_internal.h	439;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_11	common/preprocessor_internal.h	445;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_12	common/preprocessor_internal.h	451;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_13	common/preprocessor_internal.h	457;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_14	common/preprocessor_internal.h	463;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_15	common/preprocessor_internal.h	469;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_16	common/preprocessor_internal.h	475;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_17	common/preprocessor_internal.h	481;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_18	common/preprocessor_internal.h	487;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_19	common/preprocessor_internal.h	493;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_2	common/preprocessor_internal.h	391;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_20	common/preprocessor_internal.h	499;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_21	common/preprocessor_internal.h	505;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_22	common/preprocessor_internal.h	511;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_23	common/preprocessor_internal.h	517;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_24	common/preprocessor_internal.h	523;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_25	common/preprocessor_internal.h	529;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_26	common/preprocessor_internal.h	535;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_27	common/preprocessor_internal.h	541;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_28	common/preprocessor_internal.h	547;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_29	common/preprocessor_internal.h	553;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_3	common/preprocessor_internal.h	397;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_30	common/preprocessor_internal.h	559;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_31	common/preprocessor_internal.h	565;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_32	common/preprocessor_internal.h	571;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_33	common/preprocessor_internal.h	577;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_34	common/preprocessor_internal.h	583;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_35	common/preprocessor_internal.h	589;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_36	common/preprocessor_internal.h	595;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_37	common/preprocessor_internal.h	601;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_38	common/preprocessor_internal.h	607;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_39	common/preprocessor_internal.h	613;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_4	common/preprocessor_internal.h	403;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_40	common/preprocessor_internal.h	619;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_41	common/preprocessor_internal.h	625;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_42	common/preprocessor_internal.h	631;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_43	common/preprocessor_internal.h	637;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_44	common/preprocessor_internal.h	643;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_45	common/preprocessor_internal.h	649;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_46	common/preprocessor_internal.h	655;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_47	common/preprocessor_internal.h	661;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_48	common/preprocessor_internal.h	667;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_49	common/preprocessor_internal.h	673;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_5	common/preprocessor_internal.h	409;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_50	common/preprocessor_internal.h	679;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_51	common/preprocessor_internal.h	685;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_52	common/preprocessor_internal.h	691;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_53	common/preprocessor_internal.h	697;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_54	common/preprocessor_internal.h	703;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_55	common/preprocessor_internal.h	709;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_56	common/preprocessor_internal.h	715;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_57	common/preprocessor_internal.h	721;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_58	common/preprocessor_internal.h	727;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_59	common/preprocessor_internal.h	733;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_6	common/preprocessor_internal.h	415;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_60	common/preprocessor_internal.h	739;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_61	common/preprocessor_internal.h	745;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_62	common/preprocessor_internal.h	751;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_63	common/preprocessor_internal.h	757;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_64	common/preprocessor_internal.h	763;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_65	common/preprocessor_internal.h	769;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_7	common/preprocessor_internal.h	421;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_8	common/preprocessor_internal.h	427;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_9	common/preprocessor_internal.h	433;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_ATOMIC	common/preprocessor_internal.h	361;"	d
OF_PP_INTERNAL_D1_SEQ_FOR_EACH_TUPLE	common/preprocessor_internal.h	354;"	d
OF_PP_INTERNAL_D2_APPLY_ATOMIC_WITH_DATA	common/preprocessor_internal.h	210;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH	common/preprocessor_internal.h	377;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_0	common/preprocessor_internal.h	383;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_1	common/preprocessor_internal.h	388;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_10	common/preprocessor_internal.h	442;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_11	common/preprocessor_internal.h	448;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_12	common/preprocessor_internal.h	454;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_13	common/preprocessor_internal.h	460;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_14	common/preprocessor_internal.h	466;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_15	common/preprocessor_internal.h	472;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_16	common/preprocessor_internal.h	478;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_17	common/preprocessor_internal.h	484;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_18	common/preprocessor_internal.h	490;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_19	common/preprocessor_internal.h	496;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_2	common/preprocessor_internal.h	394;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_20	common/preprocessor_internal.h	502;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_21	common/preprocessor_internal.h	508;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_22	common/preprocessor_internal.h	514;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_23	common/preprocessor_internal.h	520;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_24	common/preprocessor_internal.h	526;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_25	common/preprocessor_internal.h	532;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_26	common/preprocessor_internal.h	538;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_27	common/preprocessor_internal.h	544;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_28	common/preprocessor_internal.h	550;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_29	common/preprocessor_internal.h	556;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_3	common/preprocessor_internal.h	400;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_30	common/preprocessor_internal.h	562;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_31	common/preprocessor_internal.h	568;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_32	common/preprocessor_internal.h	574;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_33	common/preprocessor_internal.h	580;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_34	common/preprocessor_internal.h	586;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_35	common/preprocessor_internal.h	592;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_36	common/preprocessor_internal.h	598;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_37	common/preprocessor_internal.h	604;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_38	common/preprocessor_internal.h	610;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_39	common/preprocessor_internal.h	616;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_4	common/preprocessor_internal.h	406;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_40	common/preprocessor_internal.h	622;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_41	common/preprocessor_internal.h	628;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_42	common/preprocessor_internal.h	634;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_43	common/preprocessor_internal.h	640;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_44	common/preprocessor_internal.h	646;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_45	common/preprocessor_internal.h	652;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_46	common/preprocessor_internal.h	658;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_47	common/preprocessor_internal.h	664;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_48	common/preprocessor_internal.h	670;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_49	common/preprocessor_internal.h	676;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_5	common/preprocessor_internal.h	412;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_50	common/preprocessor_internal.h	682;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_51	common/preprocessor_internal.h	688;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_52	common/preprocessor_internal.h	694;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_53	common/preprocessor_internal.h	700;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_54	common/preprocessor_internal.h	706;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_55	common/preprocessor_internal.h	712;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_56	common/preprocessor_internal.h	718;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_57	common/preprocessor_internal.h	724;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_58	common/preprocessor_internal.h	730;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_59	common/preprocessor_internal.h	736;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_6	common/preprocessor_internal.h	418;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_60	common/preprocessor_internal.h	742;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_61	common/preprocessor_internal.h	748;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_62	common/preprocessor_internal.h	754;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_63	common/preprocessor_internal.h	760;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_64	common/preprocessor_internal.h	766;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_65	common/preprocessor_internal.h	772;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_7	common/preprocessor_internal.h	424;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_8	common/preprocessor_internal.h	430;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_9	common/preprocessor_internal.h	436;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_ATOMIC	common/preprocessor_internal.h	363;"	d
OF_PP_INTERNAL_D2_SEQ_FOR_EACH_TUPLE	common/preprocessor_internal.h	356;"	d
OF_PP_INTERNAL_FIRST_ARG	common/preprocessor_internal.h	26;"	d
OF_PP_INTERNAL_FOR_EACH_TUPLE	common/preprocessor_internal.h	197;"	d
OF_PP_INTERNAL_IS_EMPTY_CASE_0001	common/preprocessor_internal.h	165;"	d
OF_PP_INTERNAL_IS_TUPLE_EMPTY	common/preprocessor_internal.h	111;"	d
OF_PP_INTERNAL_IS_TUPLE_EMPTY_I	common/preprocessor_internal.h	112;"	d
OF_PP_INTERNAL_IS_VARIADIC_EMPTY	common/preprocessor_internal.h	115;"	d
OF_PP_INTERNAL_IS_VARIADIC_EMPTY_	common/preprocessor_internal.h	144;"	d
OF_PP_INTERNAL_MAKE_SEQ_TUPLE_PUSH_FRONT	common/preprocessor_internal.h	212;"	d
OF_PP_INTERNAL_MAKE_TUPLE	common/preprocessor_internal.h	29;"	d
OF_PP_INTERNAL_MAKE_TUPLE_SEQ	common/preprocessor_internal.h	30;"	d
OF_PP_INTERNAL_NIL	common/preprocessor_internal.h	19;"	d
OF_PP_INTERNAL_PAIR_FIRST	common/preprocessor_internal.h	21;"	d
OF_PP_INTERNAL_PAIR_FIRST_I	common/preprocessor_internal.h	22;"	d
OF_PP_INTERNAL_PAIR_SECOND	common/preprocessor_internal.h	23;"	d
OF_PP_INTERNAL_PAIR_SECOND_I	common/preprocessor_internal.h	24;"	d
OF_PP_INTERNAL_SECOND_ARG	common/preprocessor_internal.h	27;"	d
OF_PP_INTERNAL_SEQ_FOR_EACH_ATOMIC	common/preprocessor_internal.h	359;"	d
OF_PP_INTERNAL_SEQ_FOR_EACH_TUPLE	common/preprocessor_internal.h	352;"	d
OF_PP_INTERNAL_SEQ_HEAD	common/preprocessor_internal.h	12;"	d
OF_PP_INTERNAL_SEQ_PRODUCT	common/preprocessor_internal.h	173;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_0	common/preprocessor_internal.h	179;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_1	common/preprocessor_internal.h	180;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_2	common/preprocessor_internal.h	182;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_3	common/preprocessor_internal.h	185;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_4	common/preprocessor_internal.h	188;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_5	common/preprocessor_internal.h	191;"	d
OF_PP_INTERNAL_SEQ_PRODUCT_FOR_EACH_TUPLE	common/preprocessor_internal.h	169;"	d
OF_PP_INTERNAL_SEQ_SIZE	common/preprocessor_internal.h	217;"	d
OF_PP_INTERNAL_SEQ_SIZE_0	common/preprocessor_internal.h	220;"	d
OF_PP_INTERNAL_SEQ_SIZE_1	common/preprocessor_internal.h	221;"	d
OF_PP_INTERNAL_SEQ_SIZE_10	common/preprocessor_internal.h	230;"	d
OF_PP_INTERNAL_SEQ_SIZE_11	common/preprocessor_internal.h	231;"	d
OF_PP_INTERNAL_SEQ_SIZE_12	common/preprocessor_internal.h	232;"	d
OF_PP_INTERNAL_SEQ_SIZE_13	common/preprocessor_internal.h	233;"	d
OF_PP_INTERNAL_SEQ_SIZE_14	common/preprocessor_internal.h	234;"	d
OF_PP_INTERNAL_SEQ_SIZE_15	common/preprocessor_internal.h	235;"	d
OF_PP_INTERNAL_SEQ_SIZE_16	common/preprocessor_internal.h	236;"	d
OF_PP_INTERNAL_SEQ_SIZE_17	common/preprocessor_internal.h	237;"	d
OF_PP_INTERNAL_SEQ_SIZE_18	common/preprocessor_internal.h	238;"	d
OF_PP_INTERNAL_SEQ_SIZE_19	common/preprocessor_internal.h	239;"	d
OF_PP_INTERNAL_SEQ_SIZE_2	common/preprocessor_internal.h	222;"	d
OF_PP_INTERNAL_SEQ_SIZE_20	common/preprocessor_internal.h	240;"	d
OF_PP_INTERNAL_SEQ_SIZE_21	common/preprocessor_internal.h	241;"	d
OF_PP_INTERNAL_SEQ_SIZE_22	common/preprocessor_internal.h	242;"	d
OF_PP_INTERNAL_SEQ_SIZE_23	common/preprocessor_internal.h	243;"	d
OF_PP_INTERNAL_SEQ_SIZE_24	common/preprocessor_internal.h	244;"	d
OF_PP_INTERNAL_SEQ_SIZE_25	common/preprocessor_internal.h	245;"	d
OF_PP_INTERNAL_SEQ_SIZE_26	common/preprocessor_internal.h	246;"	d
OF_PP_INTERNAL_SEQ_SIZE_27	common/preprocessor_internal.h	247;"	d
OF_PP_INTERNAL_SEQ_SIZE_28	common/preprocessor_internal.h	248;"	d
OF_PP_INTERNAL_SEQ_SIZE_29	common/preprocessor_internal.h	249;"	d
OF_PP_INTERNAL_SEQ_SIZE_3	common/preprocessor_internal.h	223;"	d
OF_PP_INTERNAL_SEQ_SIZE_30	common/preprocessor_internal.h	250;"	d
OF_PP_INTERNAL_SEQ_SIZE_31	common/preprocessor_internal.h	251;"	d
OF_PP_INTERNAL_SEQ_SIZE_32	common/preprocessor_internal.h	252;"	d
OF_PP_INTERNAL_SEQ_SIZE_33	common/preprocessor_internal.h	253;"	d
OF_PP_INTERNAL_SEQ_SIZE_34	common/preprocessor_internal.h	254;"	d
OF_PP_INTERNAL_SEQ_SIZE_35	common/preprocessor_internal.h	255;"	d
OF_PP_INTERNAL_SEQ_SIZE_36	common/preprocessor_internal.h	256;"	d
OF_PP_INTERNAL_SEQ_SIZE_37	common/preprocessor_internal.h	257;"	d
OF_PP_INTERNAL_SEQ_SIZE_38	common/preprocessor_internal.h	258;"	d
OF_PP_INTERNAL_SEQ_SIZE_39	common/preprocessor_internal.h	259;"	d
OF_PP_INTERNAL_SEQ_SIZE_4	common/preprocessor_internal.h	224;"	d
OF_PP_INTERNAL_SEQ_SIZE_40	common/preprocessor_internal.h	260;"	d
OF_PP_INTERNAL_SEQ_SIZE_41	common/preprocessor_internal.h	261;"	d
OF_PP_INTERNAL_SEQ_SIZE_42	common/preprocessor_internal.h	262;"	d
OF_PP_INTERNAL_SEQ_SIZE_43	common/preprocessor_internal.h	263;"	d
OF_PP_INTERNAL_SEQ_SIZE_44	common/preprocessor_internal.h	264;"	d
OF_PP_INTERNAL_SEQ_SIZE_45	common/preprocessor_internal.h	265;"	d
OF_PP_INTERNAL_SEQ_SIZE_46	common/preprocessor_internal.h	266;"	d
OF_PP_INTERNAL_SEQ_SIZE_47	common/preprocessor_internal.h	267;"	d
OF_PP_INTERNAL_SEQ_SIZE_48	common/preprocessor_internal.h	268;"	d
OF_PP_INTERNAL_SEQ_SIZE_49	common/preprocessor_internal.h	269;"	d
OF_PP_INTERNAL_SEQ_SIZE_5	common/preprocessor_internal.h	225;"	d
OF_PP_INTERNAL_SEQ_SIZE_50	common/preprocessor_internal.h	270;"	d
OF_PP_INTERNAL_SEQ_SIZE_51	common/preprocessor_internal.h	271;"	d
OF_PP_INTERNAL_SEQ_SIZE_52	common/preprocessor_internal.h	272;"	d
OF_PP_INTERNAL_SEQ_SIZE_53	common/preprocessor_internal.h	273;"	d
OF_PP_INTERNAL_SEQ_SIZE_54	common/preprocessor_internal.h	274;"	d
OF_PP_INTERNAL_SEQ_SIZE_55	common/preprocessor_internal.h	275;"	d
OF_PP_INTERNAL_SEQ_SIZE_56	common/preprocessor_internal.h	276;"	d
OF_PP_INTERNAL_SEQ_SIZE_57	common/preprocessor_internal.h	277;"	d
OF_PP_INTERNAL_SEQ_SIZE_58	common/preprocessor_internal.h	278;"	d
OF_PP_INTERNAL_SEQ_SIZE_59	common/preprocessor_internal.h	279;"	d
OF_PP_INTERNAL_SEQ_SIZE_6	common/preprocessor_internal.h	226;"	d
OF_PP_INTERNAL_SEQ_SIZE_60	common/preprocessor_internal.h	280;"	d
OF_PP_INTERNAL_SEQ_SIZE_61	common/preprocessor_internal.h	281;"	d
OF_PP_INTERNAL_SEQ_SIZE_62	common/preprocessor_internal.h	282;"	d
OF_PP_INTERNAL_SEQ_SIZE_63	common/preprocessor_internal.h	283;"	d
OF_PP_INTERNAL_SEQ_SIZE_64	common/preprocessor_internal.h	284;"	d
OF_PP_INTERNAL_SEQ_SIZE_7	common/preprocessor_internal.h	227;"	d
OF_PP_INTERNAL_SEQ_SIZE_8	common/preprocessor_internal.h	228;"	d
OF_PP_INTERNAL_SEQ_SIZE_9	common/preprocessor_internal.h	229;"	d
OF_PP_INTERNAL_SEQ_SIZE_I	common/preprocessor_internal.h	218;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_0	common/preprocessor_internal.h	286;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_1	common/preprocessor_internal.h	287;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_10	common/preprocessor_internal.h	296;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_11	common/preprocessor_internal.h	297;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_12	common/preprocessor_internal.h	298;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_13	common/preprocessor_internal.h	299;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_14	common/preprocessor_internal.h	300;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_15	common/preprocessor_internal.h	301;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_16	common/preprocessor_internal.h	302;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_17	common/preprocessor_internal.h	303;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_18	common/preprocessor_internal.h	304;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_19	common/preprocessor_internal.h	305;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_2	common/preprocessor_internal.h	288;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_20	common/preprocessor_internal.h	306;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_21	common/preprocessor_internal.h	307;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_22	common/preprocessor_internal.h	308;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_23	common/preprocessor_internal.h	309;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_24	common/preprocessor_internal.h	310;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_25	common/preprocessor_internal.h	311;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_26	common/preprocessor_internal.h	312;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_27	common/preprocessor_internal.h	313;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_28	common/preprocessor_internal.h	314;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_29	common/preprocessor_internal.h	315;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_3	common/preprocessor_internal.h	289;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_30	common/preprocessor_internal.h	316;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_31	common/preprocessor_internal.h	317;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_32	common/preprocessor_internal.h	318;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_33	common/preprocessor_internal.h	319;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_34	common/preprocessor_internal.h	320;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_35	common/preprocessor_internal.h	321;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_36	common/preprocessor_internal.h	322;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_37	common/preprocessor_internal.h	323;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_38	common/preprocessor_internal.h	324;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_39	common/preprocessor_internal.h	325;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_4	common/preprocessor_internal.h	290;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_40	common/preprocessor_internal.h	326;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_41	common/preprocessor_internal.h	327;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_42	common/preprocessor_internal.h	328;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_43	common/preprocessor_internal.h	329;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_44	common/preprocessor_internal.h	330;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_45	common/preprocessor_internal.h	331;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_46	common/preprocessor_internal.h	332;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_47	common/preprocessor_internal.h	333;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_48	common/preprocessor_internal.h	334;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_49	common/preprocessor_internal.h	335;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_5	common/preprocessor_internal.h	291;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_50	common/preprocessor_internal.h	336;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_51	common/preprocessor_internal.h	337;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_52	common/preprocessor_internal.h	338;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_53	common/preprocessor_internal.h	339;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_54	common/preprocessor_internal.h	340;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_55	common/preprocessor_internal.h	341;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_56	common/preprocessor_internal.h	342;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_57	common/preprocessor_internal.h	343;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_58	common/preprocessor_internal.h	344;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_59	common/preprocessor_internal.h	345;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_6	common/preprocessor_internal.h	292;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_60	common/preprocessor_internal.h	346;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_61	common/preprocessor_internal.h	347;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_62	common/preprocessor_internal.h	348;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_63	common/preprocessor_internal.h	349;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_64	common/preprocessor_internal.h	350;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_7	common/preprocessor_internal.h	293;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_8	common/preprocessor_internal.h	294;"	d
OF_PP_INTERNAL_SEQ_SIZE_OF_PP_INTERNAL_SEQ_SIZE_9	common/preprocessor_internal.h	295;"	d
OF_PP_INTERNAL_SEQ_TAIL	common/preprocessor_internal.h	14;"	d
OF_PP_INTERNAL_SEQ_TO_PAIR	common/preprocessor_internal.h	17;"	d
OF_PP_INTERNAL_SEQ_TO_PAIR_	common/preprocessor_internal.h	18;"	d
OF_PP_INTERNAL_STRINGIZE	common/preprocessor_internal.h	6;"	d
OF_PP_INTERNAL_STRINGIZE_I	common/preprocessor_internal.h	7;"	d
OF_PP_INTERNAL_TUPLE_ELEM	common/preprocessor_internal.h	73;"	d
OF_PP_INTERNAL_TUPLE_ELEM_I	common/preprocessor_internal.h	74;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT	common/preprocessor_internal.h	35;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_0	common/preprocessor_internal.h	40;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_1	common/preprocessor_internal.h	41;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_2	common/preprocessor_internal.h	43;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_3	common/preprocessor_internal.h	45;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_4	common/preprocessor_internal.h	48;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_5	common/preprocessor_internal.h	52;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_6	common/preprocessor_internal.h	56;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_7	common/preprocessor_internal.h	61;"	d
OF_PP_INTERNAL_TUPLE_PUSH_FRONT_8	common/preprocessor_internal.h	66;"	d
OF_PP_INTERNAL_TUPLE_SEQ_X_ATOMIC_SEQ	common/preprocessor_internal.h	199;"	d
OF_PP_INTERNAL_TUPLE_SIZE	common/preprocessor_internal.h	86;"	d
OF_PP_INTERNAL_TUPLE_SIZE_0	common/preprocessor_internal.h	92;"	d
OF_PP_INTERNAL_TUPLE_SIZE_0_I	common/preprocessor_internal.h	93;"	d
OF_PP_INTERNAL_TUPLE_SIZE_1	common/preprocessor_internal.h	91;"	d
OF_PP_INTERNAL_TUPLE_X_ATOMIC_SEQ	common/preprocessor_internal.h	204;"	d
OF_PP_INTERNAL_VARIADIC_HAS_COMMA	common/preprocessor_internal.h	148;"	d
OF_PP_INTERNAL_VARIADIC_HAS_COMMA_I	common/preprocessor_internal.h	154;"	d
OF_PP_INTERNAL_VARIADIC_SIZE	common/preprocessor_internal.h	96;"	d
OF_PP_INTERNAL_VARIADIC_SIZE_I	common/preprocessor_internal.h	103;"	d
OF_PP_MAKE_TUPLE_SEQ	common/preprocessor.h	10;"	d
OF_PP_PAIR_FIRST	common/preprocessor.h	17;"	d
OF_PP_PAIR_SECOND	common/preprocessor.h	18;"	d
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	common/preprocessor.h	14;"	d
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Backward)(Loss))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Forward)(Source))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (LossAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (MdDiffAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Source)(Forward)(Loss))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Backward))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Backward)(Loss)(MdUpdt))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Source)(MdUpdt))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Source))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Loss))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (LossAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (MdDiffAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (MdUpdt))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Source)(Forward)(Loss))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Backward)(Loss))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Forward)(Source))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (LossAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (MdDiffAcc))
OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Source)(Forward)(Loss))
OF_PP_STRINGIZE	common/preprocessor.h	8;"	d
OF_SET_MSG_HANDLER	actor/actor.h	56;"	d
OF_SINGLETON	actor/act_event_logger.h	/^  OF_SINGLETON(ActEventLogger);$/;"	p	class:oneflow::final	access:public	signature:(ActEventLogger)
OF_SINGLETON	actor/actor_message_bus.h	/^  OF_SINGLETON(ActorMsgBus);$/;"	p	class:oneflow::final	access:public	signature:(ActorMsgBus)
OF_SINGLETON	common/util.h	44;"	d
OF_SINGLETON	control/ctrl_client.h	/^  OF_SINGLETON(CtrlClient);$/;"	p	class:oneflow::final	access:public	signature:(CtrlClient)
OF_SINGLETON	graph/logical_graph.h	/^  OF_SINGLETON(LogicalGraph);$/;"	p	class:oneflow::final	access:public	signature:(LogicalGraph)
OF_SINGLETON	job/compiler.h	/^  OF_SINGLETON(Compiler);$/;"	p	class:oneflow::final	access:public	signature:(Compiler)
OF_SINGLETON	job/id_manager.h	/^  OF_SINGLETON(IDMgr);$/;"	p	class:oneflow::final	access:public	signature:(IDMgr)
OF_SINGLETON	job/improver.h	/^  OF_SINGLETON(Improver);$/;"	p	class:oneflow::final	access:public	signature:(Improver)
OF_SINGLETON	job/job_desc.h	/^  OF_SINGLETON(JobDesc);$/;"	p	class:oneflow::final	access:public	signature:(JobDesc)
OF_SINGLETON	job/machine_context.h	/^  OF_SINGLETON(MachineCtx);$/;"	p	class:oneflow::final	access:public	signature:(MachineCtx)
OF_SINGLETON	job/oneflow.cpp	/^  OF_SINGLETON(Oneflow);$/;"	p	class:oneflow::final	file:	access:public	signature:(Oneflow)
OF_SINGLETON	job/runtime.h	/^  OF_SINGLETON(Runtime);$/;"	p	class:oneflow::final	access:public	signature:(Runtime)
OF_SINGLETON	job/runtime_context.h	/^  OF_SINGLETON(RuntimeCtx);$/;"	p	class:oneflow::final	access:public	signature:(RuntimeCtx)
OF_SINGLETON	memory/memory_allocator.h	/^  OF_SINGLETON(MemoryAllocator);$/;"	p	class:oneflow::final	access:public	signature:(MemoryAllocator)
OF_SINGLETON	persistence/snapshot_manager.h	/^  OF_SINGLETON(SnapshotMgr);$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:(SnapshotMgr)
OF_SINGLETON	register/register_manager.h	/^  OF_SINGLETON(RegstMgr);$/;"	p	class:oneflow::final	access:public	signature:(RegstMgr)
OF_SINGLETON	thread/thread_manager.h	/^  OF_SINGLETON(ThreadMgr);$/;"	p	class:oneflow::final	access:public	signature:(ThreadMgr)
ONEFLOW_CORE_ACTOR_ACCUMULATE_COMPUTE_ACTOR_H_	actor/accumulate_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_ACTOR_H_	actor/actor.h	2;"	d
ONEFLOW_CORE_ACTOR_ACTOR_MESSAGE_BUS_H_	actor/actor_message_bus.h	2;"	d
ONEFLOW_CORE_ACTOR_ACTOR_MESSAGE_H_	actor/actor_message.h	2;"	d
ONEFLOW_CORE_ACTOR_ACT_EVENT_LOGGER_H_	actor/act_event_logger.h	2;"	d
ONEFLOW_CORE_ACTOR_BACKWARD_COMPUTE_ACTOR_H_	actor/backward_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_BOXING_ACTOR_H_	actor/boxing_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_BOXING_ACTOR_H_	actor/rnn_boxing_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_COMPUTE_ACTOR_H_	actor/compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_COPY_COMM_NET_ACTOR_H_	actor/copy_comm_net_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_COPY_HD_ACTOR_H_	actor/copy_hd_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_FORWARD_COMPUTE_ACTOR_H_	actor/forward_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_LOSS_ACCUMULATE_COMPUTE_ACTOR_H_	actor/loss_accumulate_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_LOSS_PRINT_COMPUTE_ACTOR_H_	actor/loss_print_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_MODEL_DIFF_ACCUMULATE_COMPUTE_ACTOR_H_	actor/model_diff_accumulate_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_MODEL_SAVE_COMPUTE_ACTOR_H_	actor/model_save_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_MODEL_UPDATE_COMPUTE_ACTOR_H_	actor/model_update_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_PRINT_COMPUTE_ACTOR_H_	actor/print_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_SINK_COMPUTE_ACTOR_H_	actor/sink_compute_actor.h	2;"	d
ONEFLOW_CORE_ACTOR_SOURCE_COMPUTE_ACTOR_H_	actor/source_compute_actor.h	2;"	d
ONEFLOW_CORE_BLAS_CBLAS_H_	blas/cblas.h	2;"	d
ONEFLOW_CORE_BLAS_CBLAS_TEMPLATE_H_	blas/cblas_template.h	2;"	d
ONEFLOW_CORE_BLAS_CUBLAS_TEMPLATE_H_	blas/cublas_template.h	2;"	d
ONEFLOW_CORE_COMMON_BALANCED_SPLITTER_H_	common/balanced_splitter.h	2;"	d
ONEFLOW_CORE_COMMON_BLOCKING_COUNTER_H_	common/blocking_counter.h	2;"	d
ONEFLOW_CORE_COMMON_CHANNEL_H_	common/channel.h	2;"	d
ONEFLOW_CORE_COMMON_DATA_TYPE_H_	common/data_type.h	2;"	d
ONEFLOW_CORE_COMMON_PLATFORM_H_	common/platform.h	2;"	d
ONEFLOW_CORE_COMMON_PREPROCESSOR_H_	common/preprocessor.h	2;"	d
ONEFLOW_CORE_COMMON_PREPROCESSOR_INTERNAL_H_	common/preprocessor_internal.h	2;"	d
ONEFLOW_CORE_COMMON_PROCESS_STATE_H_	common/process_state.h	2;"	d
ONEFLOW_CORE_COMMON_PROTOBUF_H_	common/protobuf.h	2;"	d
ONEFLOW_CORE_COMMON_RANGE_H_	common/range.h	2;"	d
ONEFLOW_CORE_COMMON_SHAPE_H_	common/shape.h	2;"	d
ONEFLOW_CORE_COMMON_STR_UTIL_H_	common/str_util.h	2;"	d
ONEFLOW_CORE_COMMON_TEST_UTIL_H_	common/test_util.h	2;"	d
ONEFLOW_CORE_COMMON_UTIL_H_	common/util.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_COMM_NETWORK_H_	comm_network/comm_network.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_EPOLL_COMM_NETWORK_H_	comm_network/epoll/epoll_comm_network.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_IO_EVENT_POLLER_H_	comm_network/epoll/io_event_poller.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_SOCKET_HELPER_H_	comm_network/epoll/socket_helper.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_SOCKET_MEMORY_DESC_H_	comm_network/epoll/socket_memory_desc.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_SOCKET_MESSAGE_H_	comm_network/epoll/socket_message.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_SOCKET_READ_HELPER_H_	comm_network/epoll/socket_read_helper.h	2;"	d
ONEFLOW_CORE_COMM_NETWORK_EPOLL_SOCKET_WRITE_HELPER_H_	comm_network/epoll/socket_write_helper.h	2;"	d
ONEFLOW_CORE_CONTROL_CTRL_CALL_H_	control/ctrl_call.h	2;"	d
ONEFLOW_CORE_CONTROL_CTRL_CLIENT_H_	control/ctrl_client.h	2;"	d
ONEFLOW_CORE_CONTROL_CTRL_SERVER_H_	control/ctrl_server.h	2;"	d
ONEFLOW_CORE_CONTROL_CTRL_SERVICE_H_	control/ctrl_service.h	2;"	d
ONEFLOW_CORE_DEVICE_CPU_DEVICE_CONTEXT_H_	device/cpu_device_context.h	2;"	d
ONEFLOW_CORE_DEVICE_CUDA_DEVICE_CONTEXT_H_	device/cuda_device_context.h	2;"	d
ONEFLOW_CORE_DEVICE_CUDA_STREAM_HANDLE_H_	device/cuda_stream_handle.h	2;"	d
ONEFLOW_CORE_DEVICE_CUDA_UTIL_H_	device/cuda_util.h	2;"	d
ONEFLOW_CORE_DEVICE_DEVICE_CONTEXT_H_	device/device_context.h	2;"	d
ONEFLOW_CORE_GRAPH_ACCUMULATE_COMPUTE_TASK_NODE_H_	graph/accumulate_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_BACKWARD_COMPUTE_TASK_NODE_H_	graph/backward_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_BOXING_TASK_NODE_H_	graph/boxing_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_CHAIN_GRAPH_H_	graph/chain_graph.h	2;"	d
ONEFLOW_CORE_GRAPH_CHAIN_NODE_H_	graph/chain_node.h	2;"	d
ONEFLOW_CORE_GRAPH_COMPUTE_TASK_NODE_H_	graph/compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_COPY_TASK_NODE_H_	graph/copy_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_EXEC_GRAPH_H_	graph/exec_graph.h	2;"	d
ONEFLOW_CORE_GRAPH_FORWARD_COMPUTE_TASK_NODE_H_	graph/forward_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_GRAPH_H_	graph/graph.h	2;"	d
ONEFLOW_CORE_GRAPH_LOGICAL_GRAPH_H_	graph/logical_graph.h	2;"	d
ONEFLOW_CORE_GRAPH_LOSS_ACCUMULATE_COMPUTE_TASK_NODE_H_	graph/loss_accumulate_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_LOSS_COMPUTE_TASK_NODE_H_	graph/loss_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_LOSS_PRINT_COMPUTE_TASK_NODE_H_	graph/loss_print_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_MODEL_DIFF_ACCUMULATE_COMPUTE_TASK_NODE_H_	graph/model_diff_accumulate_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_MODEL_SAVE_COMPUTE_TASK_NODE_H_	graph/model_save_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_MODEL_UPDATE_COMPUTE_TASK_NODE_H_	graph/model_update_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_NODE_H_	graph/node.h	2;"	d
ONEFLOW_CORE_GRAPH_PRINT_COMPUTE_TASK_NODE_H_	graph/print_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_SINK_COMPUTE_TASK_NODE_H_	graph/sink_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_SOURCE_COMPUTE_TASK_NODE_H_	graph/source_compute_task_node.h	2;"	d
ONEFLOW_CORE_GRAPH_TASK_GRAPH_H_	graph/task_graph.h	2;"	d
ONEFLOW_CORE_GRAPH_TASK_NODE_H_	graph/task_node.h	2;"	d
ONEFLOW_CORE_JOB_COMPILER_H_	job/compiler.h	2;"	d
ONEFLOW_CORE_JOB_ID_MANAGER_H_	job/id_manager.h	2;"	d
ONEFLOW_CORE_JOB_IMPROVER_H_	job/improver.h	2;"	d
ONEFLOW_CORE_JOB_JOB_DESC_H_	job/job_desc.h	2;"	d
ONEFLOW_CORE_JOB_KEYWORD_H_	job/keyword.h	2;"	d
ONEFLOW_CORE_JOB_MACHINE_CONTEXT_H_	job/machine_context.h	2;"	d
ONEFLOW_CORE_JOB_MOCK_JOB_DESC_H_	job/mock_job_desc.h	2;"	d
ONEFLOW_CORE_JOB_PARALLEL_DESC_H_	job/parallel_desc.h	2;"	d
ONEFLOW_CORE_JOB_RUNTIME_CONTEXT_H_	job/runtime_context.h	2;"	d
ONEFLOW_CORE_JOB_RUNTIME_H_	job/runtime.h	2;"	d
ONEFLOW_CORE_KERNEL_ACCUMULATE_KERNEL_H_	kernel/accumulate_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_BOXING_KERNEL_H_	kernel/boxing_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_CLONE_KERNEL_H_	kernel/clone_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_CONCAT_KERNEL_H_	kernel/concat_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_CONVOLUTION_KERNEL_H_	kernel/convolution_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_COPY_COMM_NET_KERNEL_H_	kernel/copy_comm_net_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_COPY_HD_KERNEL_H_	kernel/copy_hd_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_DATA_LOADER_KERNEL_H_	kernel/data_loader_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_INNERPRODUCT_KERNEL_H_	kernel/innerproduct_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_KERNEL_CONTEXT_H_	kernel/kernel_context.h	2;"	d
ONEFLOW_CORE_KERNEL_KERNEL_H_	kernel/kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_KERNEL_UTIL_H_	kernel/kernel_util.h	2;"	d
ONEFLOW_CORE_KERNEL_LOSS_PRINT_KERNEL_H_	kernel/loss_print_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_MODEL_SAVE_KERNEL_H_	kernel/model_save_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_MODEL_UPDATE_KERNEL_H_	kernel/model_update_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_MOMENTUM_MODEL_UPDATE_KERNEL_H_	kernel/momentum_model_update_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_MULTINOMIAL_LOGISTIC_LOSS_KERNEL_H_	kernel/multinomial_logistic_loss_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_NORMAL_MODEL_UPDATE_KERNEL_H_	kernel/normal_model_update_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_OPKERNEL_TEST_COMMON_H_	kernel/opkernel_test_common.h	2;"	d
ONEFLOW_CORE_KERNEL_POOLING_KERNEL_H_	kernel/pooling_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_PRINT_KERNEL_H_	kernel/print_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_RELU_KERNEL_H_	kernel/relu_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_RMSPROP_MODEL_UPDATE_KERNEL_H_	kernel/rmsprop_model_update_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_SOFTMAX_KERNEL_H_	kernel/softmax_kernel.h	2;"	d
ONEFLOW_CORE_KERNEL_SOFTMAX_LOSS_KERNEL_H_	kernel/softmax_loss_kernel.h	2;"	d
ONEFLOW_CORE_MEMORY_MEMORY_ALLOCATOR_H_	memory/memory_allocator.h	2;"	d
ONEFLOW_CORE_OPERATOR_ACCUMULATE_OP_H_	operator/accumulate_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_BOXING_OP_H_	operator/boxing_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_CLONE_OP_H_	operator/clone_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_CONCAT_OP_H_	operator/concat_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_CONVOLUTION_OP_H_	operator/convolution_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_COPY_COMM_NET_OP_H_	operator/copy_comm_net_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_COPY_HD_OP_H_	operator/copy_hd_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_DATA_LOADER_OP_H_	operator/data_loader_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_INNERPRODUCT_OP_H_	operator/innerproduct_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_LOSS_PRINT_OP_H_	operator/loss_print_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_MODEL_SAVE_OP_H_	operator/model_save_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_MODEL_UPDATE_OP_H_	operator/model_update_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_MOMENTUM_MODEL_UPDATE_OP_H_	operator/momentum_model_update_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_MULTINOMIAL_LOGISTIC_LOSS_OP_H_	operator/multinomial_logistic_loss_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_NORMAL_MODEL_UPDATE_OP_H_	operator/normal_model_update_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_OPERATOR_H_	operator/operator.h	2;"	d
ONEFLOW_CORE_OPERATOR_POOLING_OP_H_	operator/pooling_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_PRINT_OP_H_	operator/print_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_RELU_OP_H_	operator/relu_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_RMSPROP_MODEL_UPDATE_OP_H_	operator/rmsprop_model_update_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_SOFTMAX_LOSS_OP_H_	operator/softmax_loss_op.h	2;"	d
ONEFLOW_CORE_OPERATOR_SOFTMAX_OP_H_	operator/softmax_op.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_CYCLIC_PERSISTENT_IN_STREAM_H_	persistence/cyclic_persistent_in_stream.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_FILE_SYSTEM_H_	persistence/file_system.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_HADOOP_HADOOP_FILE_SYSTEM_H_	persistence/hadoop/hadoop_file_system.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_HADOOP_HDFS_H_	persistence/hadoop/hdfs.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_NORMAL_PERSISTENT_IN_STREAM_H_	persistence/normal_persistent_in_stream.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_PERSISTENT_IN_STREAM_H_	persistence/persistent_in_stream.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_PERSISTENT_OUT_STREAM_H_	persistence/persistent_out_stream.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_POSIX_POSIX_FILE_SYSTEM_H_	persistence/posix/posix_file_system.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_SNAPSHOT_H_	persistence/snapshot.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_SNAPSHOT_MANAGER_H_	persistence/snapshot_manager.h	2;"	d
ONEFLOW_CORE_PERSISTENCE_WINDOWS_WINDOWS_FILE_SYSTEM_H_	persistence/windows/windows_file_system.h	2;"	d
ONEFLOW_CORE_REGISTER_BLOB_DESC_H_	register/blob_desc.h	2;"	d
ONEFLOW_CORE_REGISTER_BLOB_H_	register/blob.h	2;"	d
ONEFLOW_CORE_REGISTER_REGISTER_DESC_H_	register/register_desc.h	2;"	d
ONEFLOW_CORE_REGISTER_REGISTER_H_	register/register.h	2;"	d
ONEFLOW_CORE_REGISTER_REGISTER_MANAGER_H_	register/register_manager.h	2;"	d
ONEFLOW_CORE_REGISTER_RUNTIME_REGISTER_DESC_H_	register/runtime_register_desc.h	2;"	d
ONEFLOW_CORE_THREAD_CPU_THREAD_H_	thread/cpu_thread.h	2;"	d
ONEFLOW_CORE_THREAD_GPU_THREAD_H_	thread/gpu_thread.h	2;"	d
ONEFLOW_CORE_THREAD_THREAD_CONTEXT_H_	thread/thread_context.h	2;"	d
ONEFLOW_CORE_THREAD_THREAD_H_	thread/thread.h	2;"	d
ONEFLOW_CORE_THREAD_THREAD_MANAGER_H_	thread/thread_manager.h	2;"	d
ONEFLOW_INTERNAL_PREFIX	job/keyword.cpp	5;"	d	file:
OVERRIDE_BLD_BOXING_OP_METHOD	graph/boxing_task_node.h	/^  OVERRIDE_BLD_BOXING_OP_METHOD(DataConcatAndDataSplit);$/;"	p	class:oneflow::final	access:public	signature:(DataConcatAndDataSplit)
OVERRIDE_BLD_BOXING_OP_METHOD	graph/boxing_task_node.h	63;"	d
OVERRIDE_FROM_METHOD	graph/chain_node.h	107;"	d
OVERRIDE_PURE_VIRTUAL_METHOD	graph/chain_node.h	/^  OVERRIDE_PURE_VIRTUAL_METHOD();$/;"	p	class:oneflow::final	access:public	signature:()
OVERRIDE_PURE_VIRTUAL_METHOD	graph/chain_node.h	99;"	d
O_RDONLY	persistence/hadoop/hdfs.h	34;"	d
O_WRONLY	persistence/hadoop/hdfs.h	38;"	d
OnePartDone	persistence/snapshot.cpp	/^void Snapshot::OnePartDone(const std::string& lbn, int32_t part_id,$/;"	f	class:oneflow::Snapshot	signature:(const std::string& lbn, int32_t part_id, int32_t part_num)
OnePartDone	persistence/snapshot.h	/^  void OnePartDone(const std::string& lbn, int32_t part_id, int32_t part_num);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, int32_t part_id, int32_t part_num)
Oneflow	job/oneflow.cpp	/^  Oneflow(const JobConf& job_conf, const std::string& this_mchn_name);$/;"	p	class:oneflow::final	file:	access:private	signature:(const JobConf& job_conf, const std::string& this_mchn_name)
Oneflow	job/oneflow.cpp	/^Oneflow::Oneflow(const JobConf& job_conf, const std::string& this_mchn_name) {$/;"	f	class:oneflow::Oneflow	signature:(const JobConf& job_conf, const std::string& this_mchn_name)
OpRegister	operator/operator.h	/^  OpRegister() {$/;"	f	struct:oneflow::OpRegister	access:public	signature:()
OpRegister	operator/operator.h	/^struct OpRegister {$/;"	s	namespace:oneflow
OpTypeCase2Creator	operator/operator.cpp	/^static HashMap<int, std::function<Operator*()>>& OpTypeCase2Creator() {$/;"	f	namespace:oneflow	signature:()
Operator	operator/operator.h	/^  Operator() = default;$/;"	p	class:oneflow::Operator	access:public	signature:()
Operator	operator/operator.h	/^class Operator {$/;"	c	namespace:oneflow
OutBoxingTaskNode	graph/boxing_task_node.h	/^  OutBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PARALLEL_POLICY_SEQ	common/util.h	145;"	d
PLATFORM_IS_X86	common/platform.h	47;"	d
PLATFORM_POSIX	common/platform.h	17;"	d
PLATFORM_POSIX	common/platform.h	29;"	d
PLATFORM_POSIX	common/platform.h	38;"	d
PLATFORM_POSIX_ANDROID	common/platform.h	13;"	d
PLATFORM_WINDOWS	common/platform.h	26;"	d
POOLINGOPCONF	kernel/pooling_kernel_test.cpp	120;"	d	file:
PRINT_KERNEL_ENTRY	kernel/print_kernel.cpp	30;"	d	file:
ParallelDesc	job/parallel_desc.cpp	/^ParallelDesc::ParallelDesc(const ParallelConf& user_conf) {$/;"	f	class:oneflow::ParallelDesc	signature:(const ParallelConf& user_conf)
ParallelDesc	job/parallel_desc.h	/^  ParallelDesc() = delete;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:()
ParallelDesc	job/parallel_desc.h	/^  ParallelDesc(const ParallelConf& user_conf);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const ParallelConf& user_conf)
ParallelDesc	job/parallel_desc.h	/^class ParallelDesc {$/;"	c	namespace:oneflow
ParallelPieceSize	job/job_desc.cpp	/^int32_t JobDesc::ParallelPieceSize() const {$/;"	f	class:oneflow::JobDesc	signature:() const
ParallelPieceSize	job/job_desc.h	/^  int32_t ParallelPieceSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
ParseDeviceNameConf	job/parallel_desc.cpp	/^void ParseDeviceNameConf(const std::string& device_name, std::string* mchn_name,$/;"	f	namespace:oneflow::__anon35	signature:(const std::string& device_name, std::string* mchn_name, std::string* device_id_str)
ParseLbn	operator/operator.cpp	/^std::pair<std::string, std::string> ParseLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
ParseLbn	operator/operator.h	/^std::pair<std::string, std::string> ParseLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
ParseProtoFromTextFile	common/protobuf.cpp	/^void ParseProtoFromTextFile(const std::string& file_path, PbMessage* proto) {$/;"	f	namespace:oneflow	signature:(const std::string& file_path, PbMessage* proto)
ParseProtoFromTextFile	common/protobuf.h	/^void ParseProtoFromTextFile(const std::string& file_path, PbMessage* proto);$/;"	p	namespace:oneflow	signature:(const std::string& file_path, PbMessage* proto)
PbMap2HashMap	common/protobuf.h	/^HashMap<K, V> PbMap2HashMap(const google::protobuf::Map<K, V>& pb_map) {$/;"	f	namespace:oneflow	signature:(const google::protobuf::Map<K, V>& pb_map)
PbRf2StdVec	common/protobuf.h	/^inline std::vector<T> PbRf2StdVec(const PbRf<T>& rf) {$/;"	f	namespace:oneflow	signature:(const PbRf<T>& rf)
PbRpf2StdVec	common/protobuf.h	/^inline std::vector<T> PbRpf2StdVec(const PbRpf<T>& rpf) {$/;"	f	namespace:oneflow	signature:(const PbRpf<T>& rpf)
PersistenceWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::PersistenceWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
PersistenceWorkerNum	job/job_desc.h	/^  int32_t PersistenceWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
PersistentInStream	persistence/persistent_in_stream.cpp	/^PersistentInStream::PersistentInStream(fs::FileSystem* fs,$/;"	f	class:oneflow::PersistentInStream	signature:(fs::FileSystem* fs, const std::string& file_path, uint64_t offset)
PersistentInStream	persistence/persistent_in_stream.h	/^  PersistentInStream() = delete;$/;"	p	class:oneflow::PersistentInStream	access:public	signature:()
PersistentInStream	persistence/persistent_in_stream.h	/^  PersistentInStream(fs::FileSystem*, const std::string& file_path,$/;"	p	class:oneflow::PersistentInStream	access:protected	signature:(fs::FileSystem*, const std::string& file_path, uint64_t offset)
PersistentInStream	persistence/persistent_in_stream.h	/^class PersistentInStream {$/;"	c	namespace:oneflow
PersistentOutStream	persistence/persistent_out_stream.cpp	/^PersistentOutStream::PersistentOutStream(fs::FileSystem* fs,$/;"	f	class:oneflow::PersistentOutStream	signature:(fs::FileSystem* fs, const std::string& file_path)
PersistentOutStream	persistence/persistent_out_stream.h	/^  PersistentOutStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
PersistentOutStream	persistence/persistent_out_stream.h	/^  PersistentOutStream(fs::FileSystem*, const std::string& file_path);$/;"	p	class:oneflow::final	access:public	signature:(fs::FileSystem*, const std::string& file_path)
PieceNumOfPrintLoss	job/job_desc.cpp	/^int32_t JobDesc::PieceNumOfPrintLoss() const {$/;"	f	class:oneflow::JobDesc	signature:() const
PieceNumOfPrintLoss	job/job_desc.h	/^  int32_t PieceNumOfPrintLoss() const;$/;"	p	class:oneflow::final	access:public	signature:() const
PieceStatus	register/blob.h	/^  PieceStatus() : piece_id_(0), col_id_(0), max_col_id_(-1) {}$/;"	f	class:oneflow::final	access:public	signature:()
PieceStatus	register/blob.h	/^  PieceStatus(const PieceStatus&) = default;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus&)
PollMsgChannel	thread/thread.cpp	/^void Thread::PollMsgChannel(const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Thread	signature:(const ThreadCtx& thread_ctx)
PollMsgChannel	thread/thread.h	/^  void PollMsgChannel(const ThreadCtx& thread_ctx);$/;"	p	class:oneflow::Thread	access:protected	signature:(const ThreadCtx& thread_ctx)
PoolingBackward	kernel/pooling_kernel.cpp	/^  static void PoolingBackward(const KernelCtx& ctx, const Blob* out_diff_blob,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const Blob* out_diff_blob, const Blob* idx_blob, Blob* in_diff_blob, const PoolingOpConf& pooling_conf)
PoolingBackward	kernel/pooling_kernel.h	/^  static void PoolingBackward(const KernelCtx&, const Blob*, const Blob*, Blob*,$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(const KernelCtx&, const Blob*, const Blob*, Blob*, const PoolingOpConf&)
PoolingForward	kernel/pooling_kernel.cpp	/^  static void PoolingForward(const KernelCtx& ctx, const Blob* in_blob,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const Blob* in_blob, Blob* out_blob, Blob* idx_blob, const PoolingOpConf& pooling_conf)
PoolingForward	kernel/pooling_kernel.h	/^  static void PoolingForward(const KernelCtx&, const Blob*, Blob*, Blob*,$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(const KernelCtx&, const Blob*, Blob*, Blob*, const PoolingOpConf&)
PoolingKernel	kernel/pooling_kernel.h	/^  PoolingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PoolingKernelUtil	kernel/pooling_kernel.cpp	/^  PoolingKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
PoolingKernelUtil	kernel/pooling_kernel.h	/^  PoolingKernelUtil() = delete;$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:()
PoolingKernelUtil	kernel/pooling_kernel.h	/^class PoolingKernelUtil {$/;"	c	namespace:oneflow
PoolingOp	operator/pooling_op.h	/^  PoolingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PosixFileSystem	persistence/posix/posix_file_system.h	/^  PosixFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
PosixRandomAccessFile	persistence/posix/posix_file_system.cpp	/^  PosixRandomAccessFile(const std::string& fname, int fd)$/;"	f	class:oneflow::fs::PosixRandomAccessFile	access:public	signature:(const std::string& fname, int fd)
PosixRandomAccessFile	persistence/posix/posix_file_system.cpp	/^class PosixRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs	file:	inherits:RandomAccessFile
PosixWritableFile	persistence/posix/posix_file_system.cpp	/^  PosixWritableFile(const std::string& fname, FILE* file)$/;"	f	class:oneflow::fs::PosixWritableFile	access:public	signature:(const std::string& fname, FILE* file)
PosixWritableFile	persistence/posix/posix_file_system.cpp	/^class PosixWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs	file:	inherits:WritableFile
PrintActEventToLogDir	actor/act_event_logger.cpp	/^void ActEventLogger::PrintActEventToLogDir(const ActEvent& act_event) {$/;"	f	class:oneflow::ActEventLogger	signature:(const ActEvent& act_event)
PrintActEventToLogDir	actor/act_event_logger.h	/^  void PrintActEventToLogDir(const ActEvent&);$/;"	p	class:oneflow::final	access:public	signature:(const ActEvent&)
PrintBlob	kernel/print_kernel.cpp	/^void PrintBlob(PersistentOutStream& out_stream, const Blob* blob) {$/;"	f	namespace:oneflow::__anon30	signature:(PersistentOutStream& out_stream, const Blob* blob)
PrintBlobImpl	kernel/print_kernel.cpp	/^void PrintBlobImpl(PersistentOutStream& out_stream, const Blob* blob) {$/;"	f	namespace:oneflow::__anon30	signature:(PersistentOutStream& out_stream, const Blob* blob)
PrintChainNode	graph/chain_node.h	/^  PrintChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PrintCompActor	actor/print_compute_actor.h	/^  PrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PrintCompTaskNode	graph/print_compute_task_node.h	/^  PrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PrintKernel	kernel/print_kernel.h	/^  PrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PrintOp	operator/print_op.h	/^  PrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
PrintProtoToTextFile	common/protobuf.cpp	/^void PrintProtoToTextFile(const PbMessage& proto,$/;"	f	namespace:oneflow	signature:(const PbMessage& proto, const std::string& file_path)
PrintProtoToTextFile	common/protobuf.h	/^void PrintProtoToTextFile(const PbMessage& proto, const std::string& file_path);$/;"	p	namespace:oneflow	signature:(const PbMessage& proto, const std::string& file_path)
Process	control/ctrl_call.h	/^  virtual void Process() = 0;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
ProcessMsg	actor/actor.h	/^  int ProcessMsg(const ActorMsg& msg) { return (this->*msg_handler_)(msg); }$/;"	f	class:oneflow::Actor	access:public	signature:(const ActorMsg& msg)
ProcessQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::ProcessQueueNotEmptyEvent() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
ProcessQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.h	/^  void ProcessQueueNotEmptyEvent();$/;"	p	class:oneflow::final	access:private	signature:()
ProduceAllRegstsAndBindEdges	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/boxing_task_node.cpp	/^void BoxingTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/copy_task_node.cpp	/^void CopyTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::ProduceAllRegstsAndBindEdges() {}$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
ProduceAllRegstsAndBindEdges	graph/task_node.h	/^  virtual void ProduceAllRegstsAndBindEdges() = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
ProduceRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::ProduceRegst(const std::string& name,$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name, int32_t min_register_num, int32_t max_register_num)
ProduceRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> ProduceRegst(const std::string& name,$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name, int32_t min_register_num, int32_t max_register_num)
PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k, PbMessage* msg) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, PbMessage* msg)
PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k, std::string* v) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::string* v)
PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::function<void(const std::string&)> VGetter)
PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k, PbMessage* msg);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, PbMessage* msg)
PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k, std::string* v);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::string* v)
PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::function<void(const std::string&)> VGetter)
PullKVHandler	control/ctrl_server.cpp	/^void CtrlServer::PullKVHandler(CtrlCall<PullKVRequest, PullKVResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<PullKVRequest, PullKVResponse>* call)
PullPort	comm_network/epoll/epoll_comm_network.cpp	/^uint16_t PullPort(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
PushActEvent	control/ctrl_client.cpp	/^void CtrlClient::PushActEvent(const ActEvent& act_event) {$/;"	f	class:oneflow::CtrlClient	signature:(const ActEvent& act_event)
PushActEvent	control/ctrl_client.h	/^  void PushActEvent(const ActEvent&);$/;"	p	class:oneflow::final	access:public	signature:(const ActEvent&)
PushActEventHandler	control/ctrl_server.cpp	/^void CtrlServer::PushActEventHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<PushActEventRequest, PushActEventResponse>* call)
PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k, const PbMessage& msg) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, const PbMessage& msg)
PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k, const std::string& v) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, const std::string& v)
PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::function<void(std::string*)> VSetter)
PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, const PbMessage& msg);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, const PbMessage& msg)
PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, const std::string& v);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, const std::string& v)
PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, std::function<void(std::string*)> VSetter);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::function<void(std::string*)> VSetter)
PushKVHandler	control/ctrl_server.cpp	/^void CtrlServer::PushKVHandler(CtrlCall<PushKVRequest, PushKVResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<PushKVRequest, PushKVResponse>* call)
PushPort	comm_network/epoll/epoll_comm_network.cpp	/^void PushPort(int64_t machine_id, uint16_t port) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id, uint16_t port)
REGISTER_ACTOR	actor/actor.h	127;"	d
REGISTER_ACTOR	actor/backward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kBackward, BackwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBackward, BackwardCompActor)
REGISTER_ACTOR	actor/boxing_actor.cpp	/^REGISTER_ACTOR(TaskType::kBoxing, BoxingActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBoxing, BoxingActor)
REGISTER_ACTOR	actor/copy_comm_net_actor.cpp	/^REGISTER_ACTOR(TaskType::kCopyCommNet, CopyCommNetActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kCopyCommNet, CopyCommNetActor)
REGISTER_ACTOR	actor/copy_hd_actor.cpp	/^REGISTER_ACTOR(TaskType::kCopyHd, CopyHdActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kCopyHd, CopyHdActor)
REGISTER_ACTOR	actor/forward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kForward, ForwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kForward, ForwardCompActor)
REGISTER_ACTOR	actor/forward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLoss, ForwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLoss, ForwardCompActor)
REGISTER_ACTOR	actor/loss_accumulate_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLossAcc, LossAccCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLossAcc, LossAccCompActor)
REGISTER_ACTOR	actor/loss_print_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLossPrint, LossPrintCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLossPrint, LossPrintCompActor)
REGISTER_ACTOR	actor/model_diff_accumulate_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdDiffAcc, MdDiffAccCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdDiffAcc, MdDiffAccCompActor)
REGISTER_ACTOR	actor/model_save_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdSave, MdSaveCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdSave, MdSaveCompActor)
REGISTER_ACTOR	actor/model_update_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdUpdt, MdUpdtCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdUpdt, MdUpdtCompActor)
REGISTER_ACTOR	actor/print_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kPrint, PrintCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kPrint, PrintCompActor)
REGISTER_ACTOR	actor/rnn_boxing_actor.cpp	/^REGISTER_ACTOR(TaskType::kBoxing, BoxingActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBoxing, BoxingActor)
REGISTER_ACTOR	actor/source_compute_actor.cpp	/^REGISTER_ACTOR(kSource, SourceCompActor);$/;"	p	namespace:oneflow	file:	signature:(kSource, SourceCompActor)
REGISTER_OP	operator/accumulate_op.cpp	/^REGISTER_OP(OperatorConf::kAccumulateConf, AccumulateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kAccumulateConf, AccumulateOp)
REGISTER_OP	operator/boxing_op.cpp	/^REGISTER_OP(OperatorConf::kBoxingConf, BoxingOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kBoxingConf, BoxingOp)
REGISTER_OP	operator/clone_op.cpp	/^REGISTER_OP(OperatorConf::kCloneConf, CloneOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCloneConf, CloneOp)
REGISTER_OP	operator/concat_op.cpp	/^REGISTER_OP(OperatorConf::kConcatConf, ConcatOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConcatConf, ConcatOp)
REGISTER_OP	operator/convolution_op.cpp	/^REGISTER_OP(OperatorConf::kConvolutionConf, ConvolutionOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConvolutionConf, ConvolutionOp)
REGISTER_OP	operator/copy_comm_net_op.cpp	/^REGISTER_OP(OperatorConf::kCopyCommNetConf, CopyCommNetOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyCommNetConf, CopyCommNetOp)
REGISTER_OP	operator/copy_hd_op.cpp	/^REGISTER_OP(OperatorConf::kCopyHdConf, CopyHdOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyHdConf, CopyHdOp)
REGISTER_OP	operator/data_loader_op.cpp	/^REGISTER_OP(OperatorConf::kDataLoaderConf, DataLoaderOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kDataLoaderConf, DataLoaderOp)
REGISTER_OP	operator/innerproduct_op.cpp	/^REGISTER_OP(OperatorConf::kInnerproductConf, InnerProductOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kInnerproductConf, InnerProductOp)
REGISTER_OP	operator/loss_print_op.cpp	/^REGISTER_OP(OperatorConf::kLossPrintConf, LossPrintOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kLossPrintConf, LossPrintOp)
REGISTER_OP	operator/model_save_op.cpp	/^REGISTER_OP(OperatorConf::kModelSaveConf, ModelSaveOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kModelSaveConf, ModelSaveOp)
REGISTER_OP	operator/momentum_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kMomentumMdupdtConf, MomentumModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMomentumMdupdtConf, MomentumModelUpdateOp)
REGISTER_OP	operator/multinomial_logistic_loss_op.cpp	/^REGISTER_OP(OperatorConf::kMultinomialLogisticLossConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMultinomialLogisticLossConf, MultinomialLogisticLossOp)
REGISTER_OP	operator/normal_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kNormalMdupdtConf, NormalModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kNormalMdupdtConf, NormalModelUpdateOp)
REGISTER_OP	operator/operator.h	160;"	d
REGISTER_OP	operator/pooling_op.cpp	/^REGISTER_OP(OperatorConf::kPoolingConf, PoolingOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPoolingConf, PoolingOp)
REGISTER_OP	operator/print_op.cpp	/^REGISTER_OP(OperatorConf::kPrintConf, PrintOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPrintConf, PrintOp)
REGISTER_OP	operator/relu_op.cpp	/^REGISTER_OP(OperatorConf::kReluConf, ReluOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kReluConf, ReluOp)
REGISTER_OP	operator/rmsprop_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kRmspropMdupdtConf, RMSPropModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kRmspropMdupdtConf, RMSPropModelUpdateOp)
REGISTER_OP	operator/softmax_loss_op.cpp	/^REGISTER_OP(OperatorConf::kSoftmaxLossConf, SoftmaxLossOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxLossConf, SoftmaxLossOp)
REGISTER_OP	operator/softmax_op.cpp	/^REGISTER_OP(OperatorConf::kSoftmaxConf, SoftmaxOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxConf, SoftmaxOp)
RMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel.h	/^  RMSPropMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
RMSPropModelUpdateOp	operator/rmsprop_model_update_op.h	/^  RMSPropModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
RandomAccessFile	persistence/file_system.h	/^  RandomAccessFile() = default;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:()
RandomAccessFile	persistence/file_system.h	/^class RandomAccessFile {$/;"	c	namespace:oneflow::fs
Range	common/range.h	/^  Range() : Range(0, 0) {}$/;"	f	class:oneflow::final	access:public	signature:()
Range	common/range.h	/^  Range(int64_t begin, int64_t end) : begin_(begin), end_(end) {}$/;"	f	class:oneflow::final	access:public	signature:(int64_t begin, int64_t end)
Read	comm_network/comm_network.h	/^  virtual void* Read(void* actor_read_id, int64_t src_machine_id,$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, int64_t src_machine_id, const void* src_token, const void* dst_token)
Read	comm_network/epoll/epoll_comm_network.cpp	/^void* EpollCommNet::Read(void* actor_read_id, int64_t src_machine_id,$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, int64_t src_machine_id, const void* src_token, const void* dst_token)
Read	persistence/file_system.h	/^  virtual void Read(uint64_t offset, size_t n, char* result) const = 0;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:(uint64_t offset, size_t n, char* result) const
Read	persistence/persistent_in_stream.cpp	/^int32_t PersistentInStream::Read(char* s, size_t n) {$/;"	f	class:oneflow::PersistentInStream	signature:(char* s, size_t n)
Read	persistence/persistent_in_stream.h	/^  int32_t Read(char* s, size_t n);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(char* s, size_t n)
ReadContext	comm_network/epoll/epoll_comm_network.h	/^  struct ReadContext {$/;"	s	class:oneflow::final	access:private
ReadDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::ReadDone(void* read_done_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* read_done_id)
ReadDone	comm_network/epoll/epoll_comm_network.h	/^  void ReadDone(void* read_done_id);$/;"	p	class:oneflow::final	access:public	signature:(void* read_done_id)
ReadLine	persistence/persistent_in_stream.cpp	/^int32_t PersistentInStream::ReadLine(std::string* line) {$/;"	f	class:oneflow::PersistentInStream	signature:(std::string* line)
ReadLine	persistence/persistent_in_stream.h	/^  int32_t ReadLine(std::string* line);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(std::string* line)
ReadUntilSocketNotReadable	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::ReadUntilSocketNotReadable() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
ReadUntilSocketNotReadable	comm_network/epoll/socket_read_helper.h	/^  void ReadUntilSocketNotReadable();$/;"	p	class:oneflow::final	access:private	signature:()
Receive	common/channel.h	/^  int Receive(T* item);$/;"	p	class:oneflow::final	access:public	signature:(T* item)
Receive	common/channel.h	/^int Channel<T>::Receive(T* item) {$/;"	f	class:oneflow::Channel	signature:(T* item)
RecursivelyCreateDir	persistence/file_system.cpp	/^void FileSystem::RecursivelyCreateDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
RecursivelyCreateDir	persistence/file_system.h	/^  virtual void RecursivelyCreateDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
RecursivelyDeleteDir	persistence/file_system.cpp	/^void FileSystem::RecursivelyDeleteDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
RecursivelyDeleteDir	persistence/file_system.h	/^  virtual void RecursivelyDeleteDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
RedirectStdoutAndStderrToGlogDir	common/util.cpp	/^void RedirectStdoutAndStderrToGlogDir() {$/;"	f	namespace:oneflow	signature:()
RedirectStdoutAndStderrToGlogDir	common/util.h	/^void RedirectStdoutAndStderrToGlogDir();$/;"	p	namespace:oneflow	signature:()
RegisterMemory	comm_network/comm_network.h	/^  virtual const void* RegisterMemory(void* dptr, size_t byte_size) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* dptr, size_t byte_size)
RegisterMemory	comm_network/epoll/epoll_comm_network.cpp	/^const void* EpollCommNet::RegisterMemory(void* mem_ptr, size_t byte_size) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* mem_ptr, size_t byte_size)
RegisterMemoryDone	comm_network/comm_network.h	/^  virtual void RegisterMemoryDone() = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:()
RegisterMemoryDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::RegisterMemoryDone() {$/;"	f	class:oneflow::EpollCommNet	signature:()
Regst	register/register.cpp	/^Regst::Regst() {$/;"	f	class:oneflow::Regst	signature:()
Regst	register/register.h	/^  Regst();$/;"	p	class:oneflow::final	access:private	signature:()
RegstCtx	actor/copy_comm_net_actor.h	/^  struct RegstCtx {$/;"	s	class:oneflow::final	access:private
RegstDesc	register/register_desc.cpp	/^RegstDesc::RegstDesc() {$/;"	f	class:oneflow::RegstDesc	signature:()
RegstDesc	register/register_desc.h	/^  RegstDesc();$/;"	p	class:oneflow::final	access:public	signature:()
RegstDescId4Name	actor/actor.cpp	/^int64_t Actor::RegstDescId4Name(const std::string& name) const {$/;"	f	class:oneflow::Actor	signature:(const std::string& name) const
RegstDescId4Name	actor/actor.h	/^  int64_t RegstDescId4Name(const std::string& name) const;$/;"	p	class:oneflow::Actor	access:protected	signature:(const std::string& name) const
RegstMgr	register/register.h	/^  friend class RegstMgr;$/;"	x
RegstMgr	register/register_manager.h	/^  RegstMgr() = default;$/;"	p	class:oneflow::final	access:private	signature:()
RegstWrapper	actor/actor_message.h	/^  struct RegstWrapper {$/;"	s	class:oneflow::final	access:private
ReluKernel	kernel/relu_kernel.h	/^  ReluKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
ReluKernelUtil	kernel/relu_kernel.cpp	/^  ReluKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
ReluKernelUtil	kernel/relu_kernel.h	/^  ReluKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
ReluOp	operator/relu_op.h	/^  ReluOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
RemoveInvalidDevice	job/parallel_desc.cpp	/^void ParallelDesc::RemoveInvalidDevice(const std::string& op_name) {$/;"	f	class:oneflow::ParallelDesc	signature:(const std::string& op_name)
RemoveInvalidDevice	job/parallel_desc.h	/^  void RemoveInvalidDevice() { RemoveInvalidDevice(""); }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:()
RemoveInvalidDevice	job/parallel_desc.h	/^  void RemoveInvalidDevice(const std::string& op_name);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const std::string& op_name)
RemoveNeedlessDevice	job/parallel_desc.cpp	/^void ParallelDesc::RemoveNeedlessDevice(const std::string& op_name,$/;"	f	class:oneflow::ParallelDesc	signature:(const std::string& op_name, int32_t max_device_num)
RemoveNeedlessDevice	job/parallel_desc.h	/^  void RemoveNeedlessDevice(const std::string& op_name, int32_t max_device_num);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const std::string& op_name, int32_t max_device_num)
RemoveNeedlessDevice	job/parallel_desc.h	/^  void RemoveNeedlessDevice(int32_t max_device_num) {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(int32_t max_device_num)
RenameFile	persistence/file_system.h	/^  virtual void RenameFile(const std::string& old_name,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& old_name, const std::string& new_name)
RenameFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& old_name, const std::string& new_name)
RenameFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& old_name, const std::string& new_name)
RenameFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& old_name, const std::string& new_name)
RequestReadMsg	comm_network/epoll/socket_message.h	/^struct RequestReadMsg {$/;"	s	namespace:oneflow
RequestWriteMsg	comm_network/epoll/socket_message.h	/^struct RequestWriteMsg {$/;"	s	namespace:oneflow
ReverseTopoForEachNode	graph/graph.h	/^  void ReverseTopoForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
ReverseTopoForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ReverseTopoForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
RngGaussian	kernel/kernel_util.cpp	/^void RngGaussian(const int64_t elem_cnt, const T mean, const T std,$/;"	f	namespace:oneflow::__anon28	signature:(const int64_t elem_cnt, const T mean, const T std, uint32_t random_seed, T* dptr)
RngUniform	kernel/kernel_util.cpp	/^void RngUniform(const int64_t elem_cnt, const T min, const T max,$/;"	f	namespace:oneflow::__anon28	signature:(const int64_t elem_cnt, const T min, const T max, uint32_t random_seed, T* dptr)
RtRegstDesc	register/runtime_register_desc.cpp	/^RtRegstDesc::RtRegstDesc(const RegstDescProto& proto) {$/;"	f	class:oneflow::RtRegstDesc	signature:(const RegstDescProto& proto)
RtRegstDesc	register/runtime_register_desc.h	/^  RtRegstDesc() = delete;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:()
RtRegstDesc	register/runtime_register_desc.h	/^  RtRegstDesc(const RegstDescProto& regst_desc_proto);$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(const RegstDescProto& regst_desc_proto)
RtRegstDesc	register/runtime_register_desc.h	/^class RtRegstDesc {$/;"	c	namespace:oneflow
Runtime	job/runtime.cpp	/^Runtime::Runtime(const Plan& plan, bool is_experiment_phase) {$/;"	f	class:oneflow::Runtime	signature:(const Plan& plan, bool is_experiment_phase)
Runtime	job/runtime.h	/^  Runtime() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
Runtime	job/runtime.h	/^  Runtime(const Plan& plan, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(const Plan& plan, bool is_experiment_phase)
RuntimeCtx	job/runtime_context.cpp	/^RuntimeCtx::RuntimeCtx(int64_t total_piece_num, bool is_experiment_phase) {$/;"	f	class:oneflow::RuntimeCtx	signature:(int64_t total_piece_num, bool is_experiment_phase)
RuntimeCtx	job/runtime_context.h	/^  RuntimeCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
RuntimeCtx	job/runtime_context.h	/^  RuntimeCtx(int64_t total_piece_num, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(int64_t total_piece_num, bool is_experiment_phase)
SAFE_LOG	common/util.h	139;"	d
SEQ	common/preprocessor_test.cpp	104;"	d	file:
SEQ	common/preprocessor_test.cpp	109;"	d	file:
SEQ	common/preprocessor_test.cpp	10;"	d	file:
SEQ	common/preprocessor_test.cpp	14;"	d	file:
SEQ	common/preprocessor_test.cpp	20;"	d	file:
SEQ	common/preprocessor_test.cpp	24;"	d	file:
SEQ	common/preprocessor_test.cpp	29;"	d	file:
SEQ	common/preprocessor_test.cpp	49;"	d	file:
SEQ	common/preprocessor_test.cpp	51;"	d	file:
SEQ	common/preprocessor_test.cpp	67;"	d	file:
SEQ	common/preprocessor_test.cpp	72;"	d	file:
SEQ	common/preprocessor_test.cpp	8;"	d	file:
SEQ	common/preprocessor_test.cpp	94;"	d	file:
SEQ	common/preprocessor_test.cpp	99;"	d	file:
SEQ1	common/preprocessor_test.cpp	57;"	d	file:
SEQ1	common/preprocessor_test.cpp	60;"	d	file:
SEQ2	common/preprocessor_test.cpp	58;"	d	file:
SEQ2	common/preprocessor_test.cpp	61;"	d	file:
SIGNED_INT_DATA_TYPE_SEQ	common/data_type.h	14;"	d
SIZE_OF_DATA_TYPE_ENTRY	common/data_type.h	70;"	d
SOCKET_MSG_TYPE_SEQ	comm_network/epoll/socket_message.h	21;"	d
SOFTMAX_LOSS_KERNEL_ENTRY	kernel/softmax_loss_kernel.cpp	77;"	d	file:
Scal	kernel/kernel_util.cpp	/^  static void Scal(DeviceCtx* ctx, const int n, const T alpha, T* x,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, T* x, const int incx)
Scal	kernel/kernel_util.h	/^  static void Scal(DeviceCtx* ctx, const int n, const T alpha, T* x,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, T* x, const int incx)
Send	common/channel.h	/^  int Send(const T& item);$/;"	p	class:oneflow::final	access:public	signature:(const T& item)
Send	common/channel.h	/^int Channel<T>::Send(const T& item) {$/;"	f	class:oneflow::Channel	signature:(const T& item)
SendActorMsg	comm_network/comm_network.h	/^  virtual void SendActorMsg(int64_t dst_machine_id, const ActorMsg& msg) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(int64_t dst_machine_id, const ActorMsg& msg)
SendActorMsg	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::SendActorMsg(int64_t dst_machine_id,$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t dst_machine_id, const ActorMsg& actor_msg)
SendCmdMsg	job/runtime.cpp	/^void SendCmdMsg(const std::vector<const TaskProto*>& tasks, ActorCmd cmd) {$/;"	f	namespace:oneflow::__anon33	signature:(const std::vector<const TaskProto*>& tasks, ActorCmd cmd)
SendMsg	actor/actor_message_bus.cpp	/^void ActorMsgBus::SendMsg(const ActorMsg& msg) {$/;"	f	class:oneflow::ActorMsgBus	signature:(const ActorMsg& msg)
SendMsg	actor/actor_message_bus.h	/^  void SendMsg(const ActorMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const ActorMsg& msg)
SendQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SendQueueNotEmptyEvent() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
SendQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.h	/^  void SendQueueNotEmptyEvent();$/;"	p	class:oneflow::final	access:private	signature:()
SendResponse	control/ctrl_call.h	/^  virtual void SendResponse() = 0;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
SendSocketMsg	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::SendSocketMsg(int64_t dst_machine_id, const SocketMsg& msg) {$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t dst_machine_id, const SocketMsg& msg)
SendSocketMsg	comm_network/epoll/epoll_comm_network.h	/^  void SendSocketMsg(int64_t dst_machine_id, const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(int64_t dst_machine_id, const SocketMsg& msg)
Serialize	actor/actor_message.h	/^  void Serialize(StreamT& out_stream) const {$/;"	f	class:oneflow::final	access:public	signature:(StreamT& out_stream) const
SerializeWithTextFormat	common/shape.h	/^  void SerializeWithTextFormat(StreamT& out_stream) const;$/;"	p	class:oneflow::final	access:public	signature:(StreamT& out_stream) const
SerializeWithTextFormat	common/shape.h	/^void Shape::SerializeWithTextFormat(StreamT& out_stream) const {$/;"	f	class:oneflow::Shape	signature:(StreamT& out_stream) const
Set	common/shape.cpp	/^void Shape::Set(int64_t index, int64_t val) {$/;"	f	class:oneflow::Shape	signature:(int64_t index, int64_t val)
Set	common/shape.h	/^  void Set(int64_t index, int64_t val);$/;"	p	class:oneflow::final	access:public	signature:(int64_t index, int64_t val)
SetBoxSplitPart	graph/boxing_task_node.cpp	/^static void SetBoxSplitPart($/;"	f	namespace:oneflow	signature:( const std::vector<BoxingTaskNode::EdgeInfo>& sorted_edges, const BalancedSplitter& bs, BoxSplitConf* split_conf)
SetChainNodeWithChainIt	graph/chain_graph.cpp	/^void SetChainNodeWithChainIt(ChainNode* chain_node, ChainIt chain_it) {}$/;"	f	namespace:oneflow::__anon43	signature:(ChainNode* chain_node, ChainIt chain_it)
SetHostPinnedMemoryAccordingToConsumers	register/register_desc.cpp	/^static void SetHostPinnedMemoryAccordingToConsumers($/;"	f	namespace:oneflow	signature:( const HashSet<const TaskNode*>& consumers, MemoryCase* mem_case)
SetProducerOp	graph/logical_graph.cpp	/^void LogicalGraph::SetProducerOp(const std::string& lbn,$/;"	f	class:oneflow::LogicalGraph	signature:(const std::string& lbn, std::weak_ptr<const Operator> op)
SetProducerOp	graph/logical_graph.h	/^  void SetProducerOp(const std::string& lbn, std::weak_ptr<const Operator> op);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, std::weak_ptr<const Operator> op)
SetStatusWhenActorMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenActorMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SetStatusWhenActorMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenActorMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
SetStatusWhenMsgBodyDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenMsgBodyDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SetStatusWhenMsgBodyDone	comm_network/epoll/socket_read_helper.h	/^  void SetStatusWhenMsgBodyDone();$/;"	p	class:oneflow::final	access:private	signature:()
SetStatusWhenMsgBodyDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenMsgBodyDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
SetStatusWhenMsgBodyDone	comm_network/epoll/socket_write_helper.h	/^  void SetStatusWhenMsgBodyDone();$/;"	p	class:oneflow::final	access:private	signature:()
SetStatusWhenMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SetStatusWhenMsgHeadDone	comm_network/epoll/socket_read_helper.h	/^  void SetStatusWhenMsgHeadDone();$/;"	p	class:oneflow::final	access:private	signature:()
SetStatusWhenMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
SetStatusWhenMsgHeadDone	comm_network/epoll/socket_write_helper.h	/^  void SetStatusWhenMsgHeadDone();$/;"	p	class:oneflow::final	access:private	signature:()
SetStatusWhenRequestReadMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenRequestReadMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SetStatusWhenRequestReadMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenRequestReadMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
SetStatusWhenRequestWriteMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenRequestWriteMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SetStatusWhenRequestWriteMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenRequestWriteMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
Shape	common/shape.cpp	/^Shape::Shape(const ShapeProto& shape_proto) {$/;"	f	class:oneflow::Shape	signature:(const ShapeProto& shape_proto)
Shape	common/shape.cpp	/^Shape::Shape(const std::vector<int64_t>& dim_vec) : dim_vec_(dim_vec) {$/;"	f	class:oneflow::Shape	signature:(const std::vector<int64_t>& dim_vec)
Shape	common/shape.h	/^  Shape() : elem_cnt_(0) {}$/;"	f	class:oneflow::final	access:public	signature:()
Shape	common/shape.h	/^  explicit Shape(const ShapeProto& shape_proto);$/;"	p	class:oneflow::final	access:public	signature:(const ShapeProto& shape_proto)
Shape	common/shape.h	/^  explicit Shape(const std::vector<int64_t>& dim_vec);$/;"	p	class:oneflow::final	access:public	signature:(const std::vector<int64_t>& dim_vec)
SinglePieceSize	job/job_desc.h	/^  int32_t SinglePieceSize() const { return job_conf_.single_piece_size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
Singleton	comm_network/comm_network.h	/^  static CommNet* Singleton() { return comm_network_ptr_; }$/;"	f	class:oneflow::CommNet	access:public	signature:()
Singleton	comm_network/epoll/epoll_comm_network.h	/^  static EpollCommNet* Singleton() {$/;"	f	class:oneflow::final	access:public	signature:()
SinkCompActor	actor/sink_compute_actor.h	/^  SinkCompActor() = default;$/;"	p	class:oneflow::SinkCompActor	access:public	signature:()
SinkCompActor	actor/sink_compute_actor.h	/^class SinkCompActor : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
SinkCompTaskNode	graph/sink_compute_task_node.h	/^  SinkCompTaskNode() = default;$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:()
SinkCompTaskNode	graph/sink_compute_task_node.h	/^class SinkCompTaskNode : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
SizeOfOneDataId	job/job_desc.cpp	/^size_t JobDesc::SizeOfOneDataId() const {$/;"	f	class:oneflow::JobDesc	signature:() const
SizeOfOneDataId	job/job_desc.h	/^  size_t SizeOfOneDataId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
Snapshot	persistence/snapshot.cpp	/^Snapshot::Snapshot(const std::string& snapshot_root_path) {$/;"	f	class:oneflow::Snapshot	signature:(const std::string& snapshot_root_path)
Snapshot	persistence/snapshot.h	/^  Snapshot() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
Snapshot	persistence/snapshot.h	/^  Snapshot(const std::string& snapshot_root_path);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& snapshot_root_path)
SnapshotMgr	persistence/snapshot_manager.cpp	/^SnapshotMgr::SnapshotMgr(const Plan& plan) {$/;"	f	class:oneflow::SnapshotMgr	signature:(const Plan& plan)
SnapshotMgr	persistence/snapshot_manager.h	/^  SnapshotMgr() = delete;$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:()
SnapshotMgr	persistence/snapshot_manager.h	/^  SnapshotMgr(const Plan& plan);$/;"	p	class:oneflow::SnapshotMgr	access:private	signature:(const Plan& plan)
SnapshotMgr	persistence/snapshot_manager.h	/^class SnapshotMgr {$/;"	c	namespace:oneflow
SocketHelper	comm_network/epoll/socket_helper.cpp	/^SocketHelper::SocketHelper(int sockfd, IOEventPoller* poller) {$/;"	f	class:oneflow::SocketHelper	signature:(int sockfd, IOEventPoller* poller)
SocketHelper	comm_network/epoll/socket_helper.h	/^  SocketHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
SocketHelper	comm_network/epoll/socket_helper.h	/^  SocketHelper(int sockfd, IOEventPoller* poller);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd, IOEventPoller* poller)
SocketMemDesc	comm_network/epoll/socket_memory_desc.h	/^struct SocketMemDesc {$/;"	s	namespace:oneflow
SocketMsg	comm_network/epoll/socket_message.h	/^struct SocketMsg {$/;"	s	namespace:oneflow
SocketMsgType	comm_network/epoll/socket_message.h	/^enum class SocketMsgType {$/;"	c	namespace:oneflow
SocketReadHelper	comm_network/epoll/socket_read_helper.cpp	/^SocketReadHelper::SocketReadHelper(int sockfd) {$/;"	f	class:oneflow::SocketReadHelper	signature:(int sockfd)
SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  SocketReadHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  SocketReadHelper(int sockfd);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd)
SocketWriteHelper	comm_network/epoll/socket_write_helper.cpp	/^SocketWriteHelper::SocketWriteHelper(int sockfd, IOEventPoller* poller) {$/;"	f	class:oneflow::SocketWriteHelper	signature:(int sockfd, IOEventPoller* poller)
SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  SocketWriteHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  SocketWriteHelper(int sockfd, IOEventPoller* poller);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd, IOEventPoller* poller)
SoftmaxComputeProb	kernel/softmax_kernel.h	/^void SoftmaxComputeProb(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* in, T* tmp, T* prob)
SoftmaxKernel	kernel/softmax_kernel.h	/^  SoftmaxKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
SoftmaxKernelUtil	kernel/softmax_kernel.cpp	/^  SoftmaxKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
SoftmaxKernelUtil	kernel/softmax_kernel.h	/^  SoftmaxKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
SoftmaxLossKernel	kernel/softmax_loss_kernel.h	/^  SoftmaxLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
SoftmaxLossKernelUtil	kernel/softmax_loss_kernel.cpp	/^  SoftmaxLossKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
SoftmaxLossKernelUtil	kernel/softmax_loss_kernel.h	/^  SoftmaxLossKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
SoftmaxLossOp	operator/softmax_loss_op.h	/^  SoftmaxLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
SoftmaxOp	operator/softmax_op.h	/^  SoftmaxOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
SoleDtbn	operator/operator.cpp	/^const std::string& Operator::SoleDtbn() const {$/;"	f	class:oneflow::Operator	signature:() const
SoleDtbn	operator/operator.h	/^  const std::string& SoleDtbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
SoleIbn	operator/operator.cpp	/^const std::string& Operator::SoleIbn() const {$/;"	f	class:oneflow::Operator	signature:() const
SoleIbn	operator/operator.h	/^  const std::string& SoleIbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
SoleIdbn	operator/operator.cpp	/^const std::string& Operator::SoleIdbn() const {$/;"	f	class:oneflow::Operator	signature:() const
SoleIdbn	operator/operator.h	/^  const std::string& SoleIdbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
SoleInEdge	graph/node.h	/^  EdgeType* SoleInEdge() const {$/;"	f	class:oneflow::Node	access:public	signature:() const
SoleNode	graph/graph.h	/^  NodeType* SoleNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
SoleNode	graph/graph.h	/^NodeType* Graph<NodeType, EdgeType>::SoleNode() const {$/;"	f	class:oneflow::Graph	signature:() const
SoleObn	operator/operator.cpp	/^const std::string& Operator::SoleObn() const {$/;"	f	class:oneflow::Operator	signature:() const
SoleObn	operator/operator.h	/^  const std::string& SoleObn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
SoleOdbn	operator/operator.cpp	/^const std::string& Operator::SoleOdbn() const {$/;"	f	class:oneflow::Operator	signature:() const
SoleOdbn	operator/operator.h	/^  const std::string& SoleOdbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
SoleOp	graph/chain_node.cpp	/^std::shared_ptr<const Operator> ChainNode::SoleOp() const {$/;"	f	class:oneflow::ChainNode	signature:() const
SoleOp	graph/chain_node.h	/^  std::shared_ptr<const Operator> SoleOp() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
SoleOutEdge	graph/node.h	/^  EdgeType* SoleOutEdge() const {$/;"	f	class:oneflow::Node	access:public	signature:() const
SoleSinkNode	graph/graph.h	/^  NodeType* SoleSinkNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
SoleSourceNode	graph/graph.h	/^  NodeType* SoleSourceNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
SortAndRemoveDuplication	common/util.h	/^void SortAndRemoveDuplication(std::vector<T>* vec) {$/;"	f	namespace:oneflow	signature:(std::vector<T>* vec)
SortByParallelId	graph/compute_task_node.cpp	/^void SortByParallelId(std::vector<CompTaskNode*>* node_vec) {$/;"	f	namespace:oneflow	signature:(std::vector<CompTaskNode*>* node_vec)
SortByParallelId	graph/compute_task_node.h	/^void SortByParallelId(std::vector<CompTaskNode*>* node_vec);$/;"	p	namespace:oneflow	signature:(std::vector<CompTaskNode*>* node_vec)
SourceCompActor	actor/source_compute_actor.h	/^  SourceCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
SourceCompTaskNode	graph/source_compute_task_node.h	/^  SourceCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
Split	common/str_util.cpp	/^void Split(const std::string& text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(std::string&&)> Func)
Split	common/str_util.h	/^void Split(const std::string& text, const std::string& delims,$/;"	p	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(std::string&&)> Func)
SplitAndParseAs	common/str_util.h	/^void SplitAndParseAs(const std::string& text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(T&&)> Func)
SrcMachineId	actor/actor_message.cpp	/^int64_t ActorMsg::SrcMachineId() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
SrcMachineId	actor/actor_message.h	/^  int64_t SrcMachineId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
Staleness	job/job_desc.cpp	/^int32_t JobDesc::Staleness() const {$/;"	f	class:oneflow::JobDesc	signature:() const
Staleness	job/job_desc.h	/^  int32_t Staleness() const;$/;"	p	class:oneflow::final	access:public	signature:() const
Start	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::Start() {$/;"	f	class:oneflow::IOEventPoller	signature:()
Start	comm_network/epoll/io_event_poller.h	/^  void Start();$/;"	p	class:oneflow::final	access:public	signature:()
Status	control/ctrl_call.h	/^  enum class Status { kBeforeHandleRequest, kBeforeDelete };$/;"	c	class:oneflow::final	access:private
StdVec2PbRf	common/protobuf.h	/^inline PbRf<T> StdVec2PbRf(const std::vector<T>& vec) {$/;"	f	namespace:oneflow	signature:(const std::vector<T>& vec)
StdVec2PbRpf	common/protobuf.h	/^inline PbRpf<T> StdVec2PbRpf(const std::vector<T>& vec) {$/;"	f	namespace:oneflow	signature:(const std::vector<T>& vec)
Stop	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::Stop() {$/;"	f	class:oneflow::IOEventPoller	signature:()
Stop	comm_network/epoll/io_event_poller.h	/^  void Stop();$/;"	p	class:oneflow::final	access:public	signature:()
StrToToken	common/str_util.cpp	/^const char* StrToToken(const char* text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const char* text, const std::string& delims, std::string* token)
StrToToken	common/str_util.h	/^const char* StrToToken(const char* text, const std::string& delims,$/;"	p	namespace:oneflow	signature:(const char* text, const std::string& delims, std::string* token)
StringReplace	common/str_util.h	/^inline void StringReplace(std::string* str, char old_ch, char new_ch) {$/;"	f	namespace:oneflow	signature:(std::string* str, char old_ch, char new_ch)
Stub	control/ctrl_service.h	/^    Stub(std::shared_ptr<grpc::ChannelInterface> channel);$/;"	p	class:oneflow::final::final	access:public	signature:(std::shared_ptr<grpc::ChannelInterface> channel)
Sub	kernel/softmax_kernel.cpp	/^  static void Sub(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix, const T* vector)
Sub	kernel/softmax_kernel.h	/^  static void Sub(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix, const T* vector)
Sum	kernel/kernel_util.cpp	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr)
Sum	kernel/kernel_util.cpp	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr, T* temp_storage, size_t temp_storage_bytes)
Sum	kernel/kernel_util.h	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr)
Sum	kernel/kernel_util.h	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr, T* temp_storage, size_t temp_storage_bytes)
SwitchToHandlerInitModelTmpOrNormal	actor/forward_compute_actor.cpp	/^void ForwardCompActor::SwitchToHandlerInitModelTmpOrNormal() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
SwitchToHandlerInitModelTmpOrNormal	actor/forward_compute_actor.h	/^  void SwitchToHandlerInitModelTmpOrNormal();$/;"	p	class:oneflow::final	access:private	signature:()
SwitchToMsgHeadReadHandle	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SwitchToMsgHeadReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
SwitchToMsgHeadReadHandle	comm_network/epoll/socket_read_helper.h	/^  void SwitchToMsgHeadReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
SyncStream	kernel/opkernel_test_common.cpp	/^void SyncStream<DeviceType::kCPU>(KernelCtx* ctx) {}$/;"	f	namespace:oneflow::test	signature:(KernelCtx* ctx)
SyncStream	kernel/opkernel_test_common.h	/^void SyncStream(KernelCtx* ctx);$/;"	p	namespace:oneflow::test	signature:(KernelCtx* ctx)
TEST	common/balanced_splitter_test.cpp	/^TEST(BalancedSplitter, split_20_to_6_part) {$/;"	f	namespace:oneflow	signature:(BalancedSplitter, split_20_to_6_part)
TEST	common/balanced_splitter_test.cpp	/^TEST(BalancedSplitter, split_2_to_3_part) {$/;"	f	namespace:oneflow	signature:(BalancedSplitter, split_2_to_3_part)
TEST	common/channel_test.cpp	/^TEST(Channel, 30sender40receiver) {$/;"	f	namespace:oneflow	signature:(Channel, 30sender40receiver)
TEST	common/preprocessor_test.cpp	/^TEST(PP, concate) {$/;"	f	namespace:oneflow	signature:(PP, concate)
TEST	common/preprocessor_test.cpp	/^TEST(PP, stringize) {$/;"	f	namespace:oneflow	signature:(PP, stringize)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, for_each_tuple) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, for_each_tuple)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_big_seq_size) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_big_seq_size)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_different_seq_product) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_different_seq_product)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_for_each)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_product) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_product)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_product_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_product_for_each)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_size) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_size)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, make_tuple_seq) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, make_tuple_seq)
TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, seq_product_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, seq_product_for_each)
TEST	common/preprocessor_test.cpp	/^TEST(PP_TUPLE, internal_is_tuple_empty) {$/;"	f	namespace:oneflow	signature:(PP_TUPLE, internal_is_tuple_empty)
TEST	common/preprocessor_test.cpp	/^TEST(PP_TUPLE, internal_tuple_size) {$/;"	f	namespace:oneflow	signature:(PP_TUPLE, internal_tuple_size)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_machine_id_and_name) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_machine_id_and_name)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_regst_desc_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_regst_desc_id)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_special_thrd_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_special_thrd_id)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_task_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_task_id)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, runtime_machine_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, runtime_machine_id)
TEST	job/id_manager_test.cpp	/^TEST(IDMgr, runtime_thrd_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, runtime_thrd_id)
TEST	kernel/accumulate_kernel_test.cpp	/^TEST(AccumulateKernel, accumulate) {$/;"	f	namespace:oneflow	signature:(AccumulateKernel, accumulate)
TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_add_clone_box) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_add_clone_box)
TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_concat_clone_box) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_concat_clone_box)
TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_concat_split_box_with_null) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_concat_split_box_with_null)
TEST	kernel/boxing_kernel_test.cpp	/^TEST(boxingKernel, boxing_concat_split_box) {$/;"	f	namespace:oneflow	signature:(boxingKernel, boxing_concat_split_box)
TEST	kernel/clone_kernel_test.cpp	/^TEST(CloneKernel, clone) {$/;"	f	namespace:oneflow	signature:(CloneKernel, clone)
TEST	kernel/concat_kernel_test.cpp	/^TEST(ConcatKernel, concat) {$/;"	f	namespace:oneflow	signature:(ConcatKernel, concat)
TEST	kernel/convolution_kernel_test.cpp	/^TEST(ConvKernel, conv_kernel_cpu) {$/;"	f	namespace:oneflow::test	signature:(ConvKernel, conv_kernel_cpu)
TEST	kernel/copy_hd_kernel_test.cpp	/^TEST(CopyHdKernel, copy_d2h) {$/;"	f	namespace:oneflow	signature:(CopyHdKernel, copy_d2h)
TEST	kernel/innerproduct_kernel_test.cpp	/^TEST(InnerProductKernel, FillModelConstant) {$/;"	f	namespace:oneflow	signature:(InnerProductKernel, FillModelConstant)
TEST	kernel/innerproduct_kernel_test.cpp	/^TEST(InnerProductKernel, IpKernelFwAndBp) {$/;"	f	namespace:oneflow	signature:(InnerProductKernel, IpKernelFwAndBp)
TEST	kernel/momentum_model_update_kernel_test.cpp	/^TEST(MomentumMdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(MomentumMdUpdateKernel, model_update)
TEST	kernel/multinomial_logistic_loss_kernel_test.cpp	/^TEST(MultinomialLogisticLossKernel, multinomial_logistic_loss_kernel) {$/;"	f	namespace:oneflow	signature:(MultinomialLogisticLossKernel, multinomial_logistic_loss_kernel)
TEST	kernel/normal_model_update_kernel_test.cpp	/^TEST(MdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(MdUpdateKernel, model_update)
TEST	kernel/pooling_kernel_test.cpp	/^TEST(PoolingKernel, pooling) {$/;"	f	namespace:oneflow	signature:(PoolingKernel, pooling)
TEST	kernel/relu_kernel_test.cpp	/^TEST(ReluKernel, relu) {$/;"	f	namespace:oneflow	signature:(ReluKernel, relu)
TEST	kernel/rmsprop_model_update_kernel_test.cpp	/^TEST(RMSPropMdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(RMSPropMdUpdateKernel, model_update)
TEST	kernel/softmax_kernel_test.cpp	/^TEST(SoftmaxKernel, softmax) {$/;"	f	namespace:oneflow	signature:(SoftmaxKernel, softmax)
TEST	kernel/softmax_loss_kernel_test.cpp	/^TEST(SoftmaxLossKernel, softmax_loss_kernel_fw_and_bp) {$/;"	f	namespace:oneflow	signature:(SoftmaxLossKernel, softmax_loss_kernel_fw_and_bp)
TEST	operator/boxing_op_test.cpp	/^TEST(BoxingOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(BoxingOp, infer_blob_desc)
TEST	operator/clone_op_test.cpp	/^TEST(CloneOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(CloneOp, infer_blob_desc)
TEST	operator/concat_op_test.cpp	/^TEST(ConcatOp, concat_two_3x3) {$/;"	f	namespace:oneflow	signature:(ConcatOp, concat_two_3x3)
TEST	operator/convolution_op_test.cpp	/^TEST(ConvolutionOp, dataparallel_convolution) {$/;"	f	namespace:oneflow	signature:(ConvolutionOp, dataparallel_convolution)
TEST	operator/convolution_op_test.cpp	/^TEST(ConvolutionOp, modelparallel_convolution) {$/;"	f	namespace:oneflow	signature:(ConvolutionOp, modelparallel_convolution)
TEST	operator/innerproduct_op_test.cpp	/^TEST(InnerProductOp, innerproduct) {$/;"	f	namespace:oneflow	signature:(InnerProductOp, innerproduct)
TEST	operator/multinomial_logistic_loss_op_test.cpp	/^TEST(MultinomialLogisticLossOp, test_loss_op) {$/;"	f	namespace:oneflow	signature:(MultinomialLogisticLossOp, test_loss_op)
TEST	operator/pooling_op_test.cpp	/^TEST(PoolingOp, pooling) {$/;"	f	namespace:oneflow	signature:(PoolingOp, pooling)
TEST	operator/relu_op_test.cpp	/^TEST(ReluOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(ReluOp, infer_blob_desc)
TEST	operator/softmax_loss_op_test.cpp	/^TEST(SoftmaxLossOp, softmax_loss_3x5) {$/;"	f	namespace:oneflow	signature:(SoftmaxLossOp, softmax_loss_3x5)
TEST	operator/softmax_op_test.cpp	/^TEST(SoftmaxOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(SoftmaxOp, infer_blob_desc)
TEST	persistence/file_system_test.cpp	/^TEST(file_system, write_and_read) {$/;"	f	namespace:oneflow	signature:(file_system, write_and_read)
TEST	persistence/snapshot_test.cpp	/^TEST(Snapshot, write_and_read) {$/;"	f	namespace:oneflow	signature:(Snapshot, write_and_read)
TODO	common/util.h	42;"	d
TaskEdge	graph/task_node.h	/^  TaskEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
TaskEdge	graph/task_node.h	/^class TaskEdge;$/;"	x
TaskGraph	graph/chain_node.h	/^class TaskGraph;$/;"	x
TaskGraph	graph/task_graph.cpp	/^TaskGraph::TaskGraph(std::unique_ptr<const ChainGraph>&& chain_gph) {$/;"	f	class:oneflow::TaskGraph	signature:(std::unique_ptr<const ChainGraph>&& chain_gph)
TaskGraph	graph/task_graph.h	/^  TaskGraph() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
TaskGraph	graph/task_graph.h	/^  TaskGraph(std::unique_ptr<const ChainGraph>&& chain_gph);$/;"	p	class:oneflow::final	access:public	signature:(std::unique_ptr<const ChainGraph>&& chain_gph)
TaskNode	graph/task_node.cpp	/^TaskNode::TaskNode() : machine_id_(-1), thrd_id_(-1), task_id_(-1) {}$/;"	f	class:oneflow::TaskNode	signature:()
TaskNode	graph/task_node.h	/^  TaskNode();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
TaskNode	graph/task_node.h	/^class TaskNode : public Node<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Node
TaskNode	register/register_desc.h	/^class TaskNode;$/;"	x
TestAccumulateKernel	kernel/accumulate_kernel_test.cpp	/^void TestAccumulateKernel() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
TestBoxingKernelAddClone	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelAddClone() {$/;"	f	namespace:oneflow::test::__anon26	signature:()
TestBoxingKernelConcatClone	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatClone(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
TestBoxingKernelConcatSplit	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplit(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
TestBoxingKernelConcatSplitNull	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplitNull(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
TestBoxingKernelConcatSplit_1	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplit_1(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
TestBoxingOp	operator/boxing_op_test.cpp	/^void TestBoxingOp() {$/;"	f	namespace:oneflow	signature:()
TestCloneKernel	kernel/clone_kernel_test.cpp	/^void TestCloneKernel(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon24	signature:(bool need_backward)
TestCloneOp	operator/clone_op_test.cpp	/^void TestCloneOp() {$/;"	f	namespace:oneflow	signature:()
TestConcatKernel	kernel/concat_kernel_test.cpp	/^void TestConcatKernel() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
TestConvolutionKernel	kernel/convolution_kernel_test.cpp	/^void TestConvolutionKernel(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon23	signature:(bool has_bias_term)
TestCopyHdKernel	kernel/copy_hd_kernel_test.cpp	/^void TestCopyHdKernel(CopyHdOpConf::Type hd_type) {$/;"	f	namespace:oneflow::test::__anon9	signature:(CopyHdOpConf::Type hd_type)
TestDirOperation	persistence/file_system_test.cpp	/^void TestDirOperation(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
TestFileOperation	persistence/file_system_test.cpp	/^void TestFileOperation(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
TestFileSystem	persistence/file_system_test.cpp	/^void TestFileSystem(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
TestInnerProductOp	operator/innerproduct_op_test.cpp	/^void TestInnerProductOp(ParallelPolicy policy, bool has_bias_term,$/;"	f	namespace:oneflow::__anon4	signature:(ParallelPolicy policy, bool has_bias_term, bool has_data_id)
TestMdUpdateKernel	kernel/normal_model_update_kernel_test.cpp	/^void TestMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon15	signature:()
TestMomentumMdUpdateKernel	kernel/momentum_model_update_kernel_test.cpp	/^void TestMomentumMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon17	signature:()
TestMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel_test.cpp	/^void TestMultinomialLogisticLossKernel() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
TestPoolingKernel	kernel/pooling_kernel_test.cpp	/^void TestPoolingKernel(const PoolingOpConf::PoolMethod& pooling_method) {$/;"	f	namespace:oneflow::test::__anon29	signature:(const PoolingOpConf::PoolMethod& pooling_method)
TestPoolingOp	operator/pooling_op_test.cpp	/^void TestPoolingOp(ParallelPolicy policy, bool has_data_id) {$/;"	f	namespace:oneflow	signature:(ParallelPolicy policy, bool has_data_id)
TestRMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel_test.cpp	/^void TestRMSPropMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon10	signature:()
TestReluKernel	kernel/relu_kernel_test.cpp	/^void TestReluKernel() {$/;"	f	namespace:oneflow::test	signature:()
TestReluOp	operator/relu_op_test.cpp	/^void TestReluOp() {$/;"	f	namespace:oneflow	signature:()
TestSoftmaxKernel	kernel/softmax_kernel_test.cpp	/^void TestSoftmaxKernel() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
TestSoftmaxLossKernel	kernel/softmax_loss_kernel_test.cpp	/^void TestSoftmaxLossKernel() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
TestSoftmaxOp	operator/softmax_op_test.cpp	/^void TestSoftmaxOp() {$/;"	f	namespace:oneflow	signature:()
ThrdId4ActorId	job/id_manager.cpp	/^int64_t IDMgr::ThrdId4ActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
ThrdId4ActorId	job/id_manager.h	/^  int64_t ThrdId4ActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
Thread	thread/thread.h	/^  Thread() = default;$/;"	p	class:oneflow::Thread	access:protected	signature:()
Thread	thread/thread.h	/^class Thread {$/;"	c	namespace:oneflow
ThreadCtx	thread/thread_context.h	/^  ThreadCtx() : copy_hd_cuda_stream(nullptr) {}$/;"	f	struct:oneflow::ThreadCtx	access:public	signature:()
ThreadCtx	thread/thread_context.h	/^struct ThreadCtx {$/;"	s	namespace:oneflow
ThreadMgr	thread/thread_manager.cpp	/^ThreadMgr::ThreadMgr() {$/;"	f	class:oneflow::ThreadMgr	signature:()
ThreadMgr	thread/thread_manager.h	/^  ThreadMgr();$/;"	p	class:oneflow::final	access:private	signature:()
ToDotFile	job/compiler.cpp	/^void ToDotFile(const Plan& plan, const std::string& filepath) {$/;"	f	namespace:oneflow::__anon34	signature:(const Plan& plan, const std::string& filepath)
ToDotWithAutoFilePath	graph/graph.h	/^  void ToDotWithAutoFilePath();$/;"	p	class:oneflow::Graph	access:public	signature:()
ToDotWithAutoFilePath	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithAutoFilePath() {$/;"	f	class:oneflow::Graph	signature:()
ToDotWithFilePath	graph/graph.h	/^  void ToDotWithFilePath(const std::string& file_path);$/;"	p	class:oneflow::Graph	access:public	signature:(const std::string& file_path)
ToDotWithFilePath	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithFilePath($/;"	f	class:oneflow::Graph	signature:( const std::string& file_path)
ToDotWithStream	graph/graph.h	/^  void ToDotWithStream(StreamT& out_stream);$/;"	p	class:oneflow::Graph	access:public	signature:(StreamT& out_stream)
ToDotWithStream	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithStream(StreamT& out_stream) {$/;"	f	class:oneflow::Graph	signature:(StreamT& out_stream)
ToExecSequence	graph/exec_graph.cpp	/^void ExecGraph::ToExecSequence(bool is_forward,$/;"	f	class:oneflow::ExecGraph	signature:(bool is_forward, const ParallelContext* parallel_ctx, ExecSequence* ret) const
ToExecSequence	graph/exec_graph.h	/^  void ToExecSequence(bool is_forward, const ParallelContext*,$/;"	p	class:oneflow::final	access:public	signature:(bool is_forward, const ParallelContext*, ExecSequence*) const
ToProto	common/shape.cpp	/^void Shape::ToProto(ShapeProto* ret) const {$/;"	f	class:oneflow::Shape	signature:(ShapeProto* ret) const
ToProto	common/shape.h	/^  void ToProto(ShapeProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(ShapeProto*) const
ToProto	graph/compute_task_node.cpp	/^void CompTaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::CompTaskNode	signature:(TaskProto* task_proto)
ToProto	graph/exec_graph.cpp	/^void ExecNode::ToProto(bool is_forward, const ParallelContext* parallel_ctx,$/;"	f	class:oneflow::ExecNode	signature:(bool is_forward, const ParallelContext* parallel_ctx, ExecNodeProto* ret) const
ToProto	graph/exec_graph.h	/^  void ToProto(bool is_forward, const ParallelContext*, ExecNodeProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(bool is_forward, const ParallelContext*, ExecNodeProto*) const
ToProto	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:(TaskProto* task_proto)
ToProto	graph/task_node.cpp	/^void TaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::TaskNode	signature:(TaskProto* task_proto)
ToProto	graph/task_node.h	/^  virtual void ToProto(TaskProto*);$/;"	p	class:oneflow::TaskNode	access:public	signature:(TaskProto*)
ToProto	register/blob_desc.h	/^  void ToProto(BlobDescProto* proto) const {$/;"	f	class:oneflow::final	access:public	signature:(BlobDescProto* proto) const
ToProto	register/register_desc.cpp	/^void RegstDesc::ToProto(RegstDescProto* ret) const {$/;"	f	class:oneflow::RegstDesc	signature:(RegstDescProto* ret) const
ToProto	register/register_desc.h	/^  void ToProto(RegstDescProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(RegstDescProto*) const
TopoForEachNode	graph/graph.h	/^  void TopoForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
TopoForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::TopoForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
TotalBatchNum	job/job_desc.cpp	/^int64_t JobDesc::TotalBatchNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
TotalBatchNum	job/job_desc.h	/^  int64_t TotalBatchNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
TotalByteSize	register/blob.h	/^  size_t TotalByteSize() const { return blob_desc_->TotalByteSize(); }$/;"	f	class:oneflow::final	access:public	signature:() const
TotalByteSize	register/blob_desc.cpp	/^size_t BlobDesc::TotalByteSize() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
TotalByteSize	register/blob_desc.h	/^  size_t TotalByteSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
TotalMachineNum	job/job_desc.h	/^  int64_t TotalMachineNum() const { return resource_.machine().size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
TranslateName	persistence/file_system.cpp	/^std::string FileSystem::TranslateName(const std::string& name) const {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& name) const
TranslateName	persistence/file_system.h	/^  virtual std::string TranslateName(const std::string& name) const;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& name) const
TryAsyncReturnModelRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::TryAsyncReturnModelRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
TryAsyncReturnModelRegst	actor/forward_compute_actor.h	/^  void TryAsyncReturnModelRegst();$/;"	p	class:oneflow::final	access:private	signature:()
TryAsyncReturnModelTmpRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::TryAsyncReturnModelTmpRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
TryAsyncReturnModelTmpRegst	actor/forward_compute_actor.h	/^  void TryAsyncReturnModelTmpRegst();$/;"	p	class:oneflow::final	access:private	signature:()
TryDataMerge	graph/chain_graph.cpp	/^bool TryDataMerge(const LogicalNode* first, const LogicalNode* second,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* first, const LogicalNode* second, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
TryLock	control/ctrl_client.cpp	/^TryLockResult CtrlClient::TryLock(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
TryLock	control/ctrl_client.h	/^  TryLockResult TryLock(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
TryLockHandler	control/ctrl_server.cpp	/^void CtrlServer::TryLockHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<TryLockRequest, TryLockResponse>* call)
TryMergeWithConnect	graph/chain_graph.cpp	/^bool TryMergeWithConnect(const LogicalNode* up_node,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* up_node, const LogicalNode* bottom_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
TryMergeWithoutConnect	graph/chain_graph.cpp	/^bool TryMergeWithoutConnect(const LogicalNode* lhs_node,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* lhs_node, const LogicalNode* rhs_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
TryModifyLbn4BnInOp	operator/operator.cpp	/^int8_t Operator::TryModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op, const std::string& lbn)
TryModifyLbn4BnInOp	operator/operator.h	/^  int8_t TryModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op, const std::string& lbn)
TrySwitchToZombieOrFinish	actor/actor.cpp	/^int Actor::TrySwitchToZombieOrFinish() {$/;"	f	class:oneflow::Actor	signature:()
TrySwitchToZombieOrFinish	actor/actor.h	/^  int TrySwitchToZombieOrFinish();$/;"	p	class:oneflow::Actor	access:protected	signature:()
TryUpdtStateAsProducedRegst	actor/actor.cpp	/^int Actor::TryUpdtStateAsProducedRegst(Regst* regst) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst)
TryUpdtStateAsProducedRegst	actor/actor.h	/^  int TryUpdtStateAsProducedRegst(Regst* regst);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst* regst)
TypeName	graph/chain_node.h	/^  virtual const char* TypeName() const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
TypeName	graph/graph.h	/^  virtual const char* TypeName() const { return ""; }$/;"	f	class:oneflow::Graph	access:public	signature:() const
UNEXPECTED_RUN	common/util.h	40;"	d
UNSIGNED_INT_DATA_TYPE_SEQ	common/data_type.h	20;"	d
UnRegisterMemory	comm_network/comm_network.h	/^  virtual void UnRegisterMemory(const void* token) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(const void* token)
UnRegisterMemory	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::UnRegisterMemory(const void* token) {$/;"	f	class:oneflow::EpollCommNet	signature:(const void* token)
UniformFill	kernel/kernel_util.cpp	/^void UniformFill(const UniformFillConf& fill_conf, uint32_t random_seed,$/;"	f	namespace:oneflow::__anon28	signature:(const UniformFillConf& fill_conf, uint32_t random_seed, Blob* blob)
UniqueCloseHandlePtr	persistence/windows/windows_file_system.cpp	/^typedef std::unique_ptr<void, decltype(CloseHandleFunc)> UniqueCloseHandlePtr;$/;"	t	namespace:oneflow::fs::__anon41	file:
UpdateBuffer	persistence/persistent_in_stream.cpp	/^void PersistentInStream::UpdateBuffer() {$/;"	f	class:oneflow::PersistentInStream	signature:()
UpdateBuffer	persistence/persistent_in_stream.h	/^  void UpdateBuffer();$/;"	p	class:oneflow::PersistentInStream	access:private	signature:()
UpdateElemCnt	common/shape.cpp	/^void Shape::UpdateElemCnt() {$/;"	f	class:oneflow::Shape	signature:()
UpdateElemCnt	common/shape.h	/^  void UpdateElemCnt();$/;"	p	class:oneflow::final	access:private	signature:()
UpdateModel	kernel/model_update_kernel.h	/^  virtual void UpdateModel($/;"	p	class:oneflow::MdUpdateKernel	access:protected	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
UpdateModel	kernel/normal_model_update_kernel.cpp	/^void NormalMdUpdateKernel<device_type, T>::UpdateModel($/;"	f	class:oneflow::NormalMdUpdateKernel	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
UpdateModel	kernel/rmsprop_model_update_kernel.cpp	/^  static void UpdateModel(DeviceCtx*, const int64_t n, const T alpha,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx*, const int64_t n, const T alpha, const T learning_rate, const T decay_rate, const T epsilon, const T* pre_model, T* model, T* mean_square, const T* model_diff_acc)
UpdateModel	kernel/rmsprop_model_update_kernel.cpp	/^void RMSPropMdUpdateKernel<device_type, T>::UpdateModel($/;"	f	class:oneflow::RMSPropMdUpdateKernel	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
UpdateModel	kernel/rmsprop_model_update_kernel.h	/^  static void UpdateModel(DeviceCtx*, const int64_t n, const T alpha,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx*, const int64_t n, const T alpha, const T learning_rate, const T decay_rate, const T epsilon, const T* pre_model, T* model, T* mean_square, const T* model_diff_acc)
UpdateModelRegstPtr	actor/forward_compute_actor.cpp	/^void ForwardCompActor::UpdateModelRegstPtr(Regst* regst) {$/;"	f	class:oneflow::ForwardCompActor	signature:(Regst* regst)
UpdateModelRegstPtr	actor/forward_compute_actor.h	/^  void UpdateModelRegstPtr(Regst* regst);$/;"	p	class:oneflow::final	access:private	signature:(Regst* regst)
UpdateTaskId	graph/task_node.cpp	/^void TaskNode::UpdateTaskId() {$/;"	f	class:oneflow::TaskNode	signature:()
UpdateTaskId	graph/task_node.h	/^  void UpdateTaskId();$/;"	p	class:oneflow::TaskNode	access:private	signature:()
Utf8ToWideChar	persistence/windows/windows_file_system.h	/^  static std::wstring Utf8ToWideChar(const std::string& utf8str) {$/;"	f	class:oneflow::fs::final	access:public	signature:(const std::string& utf8str)
VirtualActorInit	actor/actor.h	/^  virtual void VirtualActorInit(const TaskProto&) {}$/;"	f	class:oneflow::Actor	access:protected	signature:(const TaskProto&)
VirtualActorInit	actor/boxing_actor.cpp	/^void BoxingActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BoxingActor	signature:(const TaskProto& task_proto)
VirtualActorInit	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const TaskProto& task_proto)
VirtualActorInit	actor/copy_hd_actor.cpp	/^void CopyHdActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::CopyHdActor	signature:(const TaskProto& task_proto)
VirtualActorInit	actor/rnn_boxing_actor.cpp	/^void BoxingActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BoxingActor	signature:(const TaskProto& task_proto)
VirtualCompActorInit	actor/backward_compute_actor.cpp	/^void BackwardCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BackwardCompActor	signature:(const TaskProto& task_proto)
VirtualCompActorInit	actor/compute_actor.h	/^  virtual void VirtualCompActorInit(const TaskProto& task_proto) {}$/;"	f	class:oneflow::CompActor	access:protected	signature:(const TaskProto& task_proto)
VirtualCompActorInit	actor/forward_compute_actor.cpp	/^void ForwardCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const TaskProto& task_proto)
VirtualCompActorInit	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const TaskProto& task_proto)
VirtualCompActorInit	actor/sink_compute_actor.cpp	/^void SinkCompActor::VirtualCompActorInit(const TaskProto& proto) {$/;"	f	class:oneflow::SinkCompActor	signature:(const TaskProto& proto)
VirtualCompActorInit	actor/source_compute_actor.cpp	/^void SourceCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::SourceCompActor	signature:(const TaskProto& task_proto)
VirtualFixParallelDesc	operator/operator.h	/^  virtual void VirtualFixParallelDesc(ParallelDesc* pr_desc) const {}$/;"	f	class:oneflow::Operator	access:protected	signature:(ParallelDesc* pr_desc) const
VirtualGenKernelConf	operator/boxing_op.cpp	/^void BoxingOp::VirtualGenKernelConf($/;"	f	class:oneflow::BoxingOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
VirtualGenKernelConf	operator/concat_op.cpp	/^void ConcatOp::VirtualGenKernelConf($/;"	f	class:oneflow::ConcatOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
VirtualGenKernelConf	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::VirtualGenKernelConf($/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
VirtualGenKernelConf	operator/operator.h	/^  virtual void VirtualGenKernelConf($/;"	f	class:oneflow::Operator	access:protected	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
VirtualGenKernelConf	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::VirtualGenKernelConf($/;"	f	class:oneflow::SoftmaxLossOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
VirtualKernelInit	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::VirtualKernelInit(const ParallelContext*) {$/;"	f	class:oneflow::BoxingKernel	signature:(const ParallelContext*)
VirtualKernelInit	kernel/copy_hd_kernel.cpp	/^void CopyHdKernel::VirtualKernelInit(const ParallelContext*) {$/;"	f	class:oneflow::CopyHdKernel	signature:(const ParallelContext*)
VirtualKernelInit	kernel/data_loader_kernel.cpp	/^void DataLoaderKernel<T>::VirtualKernelInit($/;"	f	class:oneflow::DataLoaderKernel	signature:( const ParallelContext* parallel_ctx)
VirtualKernelInit	kernel/kernel.h	/^  virtual void VirtualKernelInit(const ParallelContext*) {}$/;"	f	class:oneflow::Kernel	access:protected	signature:(const ParallelContext*)
VirtualKernelInit	kernel/model_save_kernel.cpp	/^void ModelSaveKernel::VirtualKernelInit(const ParallelContext* parallel_ctx) {$/;"	f	class:oneflow::ModelSaveKernel	signature:(const ParallelContext* parallel_ctx)
VirtualKernelInit	kernel/print_kernel.cpp	/^void PrintKernel::VirtualKernelInit(const ParallelContext* parallel_ctx) {$/;"	f	class:oneflow::PrintKernel	signature:(const ParallelContext* parallel_ctx)
VirtualSinkCompActorInit	actor/model_save_compute_actor.cpp	/^void MdSaveCompActor::VirtualSinkCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::MdSaveCompActor	signature:(const TaskProto& task_proto)
VirtualSinkCompActorInit	actor/sink_compute_actor.h	/^  virtual void VirtualSinkCompActorInit(const TaskProto&) {}$/;"	f	class:oneflow::SinkCompActor	access:protected	signature:(const TaskProto&)
VisualStr	graph/chain_node.cpp	/^std::string ChainEdge::VisualStr() const { return ""; }$/;"	f	class:oneflow::ChainEdge	signature:() const
VisualStr	graph/chain_node.cpp	/^std::string ChainNode::VisualStr() const {$/;"	f	class:oneflow::ChainNode	signature:() const
VisualStr	graph/chain_node.h	/^  std::string VisualStr() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
VisualStr	graph/node.h	/^  virtual std::string VisualStr() const { return ""; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
VisualStr	graph/node.h	/^  virtual std::string VisualStr() const { return ""; }$/;"	f	class:oneflow::Node	access:public	signature:() const
VisualStr	graph/task_node.cpp	/^std::string TaskNode::VisualStr() const {$/;"	f	class:oneflow::TaskNode	signature:() const
WaitUntilCntEqualZero	common/blocking_counter.h	/^  void WaitUntilCntEqualZero() {$/;"	f	class:oneflow::final	access:public	signature:()
WaitUntilCntEqualZero	job/runtime_context.cpp	/^void RuntimeCtx::WaitUntilCntEqualZero(const std::string& name) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name)
WaitUntilCntEqualZero	job/runtime_context.h	/^  void WaitUntilCntEqualZero(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
WaitUntilDone	control/ctrl_client.cpp	/^void CtrlClient::WaitUntilDone(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
WaitUntilDone	control/ctrl_client.h	/^  void WaitUntilDone(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
WaitUntilDoneHandler	control/ctrl_server.cpp	/^void CtrlServer::WaitUntilDoneHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<WaitUntilDoneRequest, WaitUntilDoneResponse>* call)
WideCharToUtf8	persistence/windows/windows_file_system.h	/^  static std::string WideCharToUtf8(const std::wstring& wstr) {$/;"	f	class:oneflow::fs::final	access:public	signature:(const std::wstring& wstr)
WindowsFileSystem	persistence/windows/windows_file_system.h	/^  WindowsFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
WindowsRandomAccessFile	persistence/windows/windows_file_system.cpp	/^  WindowsRandomAccessFile(const std::string& fname, HANDLE hfile)$/;"	f	class:oneflow::fs::__anon41::WindowsRandomAccessFile	access:public	signature:(const std::string& fname, HANDLE hfile)
WindowsRandomAccessFile	persistence/windows/windows_file_system.cpp	/^class WindowsRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs::__anon41	file:	inherits:RandomAccessFile
WindowsWritableFile	persistence/windows/windows_file_system.cpp	/^  WindowsWritableFile(const std::string& fname, HANDLE hFile)$/;"	f	class:oneflow::fs::__anon41::WindowsWritableFile	access:public	signature:(const std::string& fname, HANDLE hFile)
WindowsWritableFile	persistence/windows/windows_file_system.cpp	/^class WindowsWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs::__anon41	file:	inherits:WritableFile
WritableFile	persistence/file_system.h	/^  WritableFile() = default;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
WritableFile	persistence/file_system.h	/^class WritableFile {$/;"	c	namespace:oneflow::fs
Write	persistence/persistent_out_stream.cpp	/^PersistentOutStream& PersistentOutStream::Write(const char* s, size_t n) {$/;"	f	class:oneflow::PersistentOutStream	signature:(const char* s, size_t n)
Write	persistence/persistent_out_stream.h	/^  PersistentOutStream& Write(const char* s, size_t n);$/;"	p	class:oneflow::final	access:public	signature:(const char* s, size_t n)
WriteUntilMsgQueueEmptyOrSocketNotWriteable	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::WriteUntilMsgQueueEmptyOrSocketNotWriteable() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
WriteUntilMsgQueueEmptyOrSocketNotWriteable	comm_network/epoll/socket_write_helper.h	/^  void WriteUntilMsgQueueEmptyOrSocketNotWriteable();$/;"	p	class:oneflow::final	access:private	signature:()
_OF_PP_INTERNAL_TRIGGER_PARENTHESIS_	common/preprocessor_internal.h	162;"	d
__anon40::mBlockSize	persistence/hadoop/hdfs.h	/^  tOffset mBlockSize; \/* the block size for the file *\/$/;"	m	struct:__anon40	access:public
__anon40::mGroup	persistence/hadoop/hdfs.h	/^  char *mGroup;       \/* the group associated with the file *\/$/;"	m	struct:__anon40	access:public
__anon40::mKind	persistence/hadoop/hdfs.h	/^  tObjectKind mKind;  \/* file or directory *\/$/;"	m	struct:__anon40	access:public
__anon40::mLastAccess	persistence/hadoop/hdfs.h	/^  tTime mLastAccess;  \/* the last access time for the file in seconds *\/$/;"	m	struct:__anon40	access:public
__anon40::mLastMod	persistence/hadoop/hdfs.h	/^  tTime mLastMod;     \/* the last modification time for the file in seconds *\/$/;"	m	struct:__anon40	access:public
__anon40::mName	persistence/hadoop/hdfs.h	/^  char *mName;        \/* the name of the file *\/$/;"	m	struct:__anon40	access:public
__anon40::mOwner	persistence/hadoop/hdfs.h	/^  char *mOwner;       \/* the owner of the file *\/$/;"	m	struct:__anon40	access:public
__anon40::mPermissions	persistence/hadoop/hdfs.h	/^  short mPermissions; \/* the permissions associated with the file *\/$/;"	m	struct:__anon40	access:public
__anon40::mReplication	persistence/hadoop/hdfs.h	/^  short mReplication; \/* the count of replicas *\/$/;"	m	struct:__anon40	access:public
__anon40::mSize	persistence/hadoop/hdfs.h	/^  tOffset mSize;      \/* the size of the file in bytes *\/$/;"	m	struct:__anon40	access:public
acc_cnt_	actor/accumulate_compute_actor.h	/^  int32_t acc_cnt_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
act_event_bin_filename_	actor/act_event_logger.h	/^  static const std::string act_event_bin_filename_;$/;"	m	class:oneflow::final	access:public
act_event_txt_filename_	actor/act_event_logger.h	/^  static const std::string act_event_txt_filename_;$/;"	m	class:oneflow::final	access:public
act_id_	actor/actor.h	/^  int64_t act_id_;$/;"	m	class:oneflow::Actor	access:private
activation_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t activation_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
actor_cmd	actor/actor_message.cpp	/^ActorCmd ActorMsg::actor_cmd() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
actor_cmd	actor/actor_message.h	/^  ActorCmd actor_cmd() const;$/;"	p	class:oneflow::final	access:public	signature:() const
actor_cmd_	actor/actor_message.h	/^    ActorCmd actor_cmd_;$/;"	m	union:oneflow::final::__anon42	access:public
actor_id	actor/actor.h	/^  int64_t actor_id() const { return actor_id_; }$/;"	f	class:oneflow::Actor	access:public	signature:() const
actor_id_	actor/actor.h	/^  int64_t actor_id_;$/;"	m	class:oneflow::Actor	access:private
actor_read_id_	actor/copy_comm_net_actor.cpp	/^  void* actor_read_id_;$/;"	m	class:oneflow::final	file:	access:private
actor_read_id_	actor/copy_comm_net_actor.h	/^  void* actor_read_id_;$/;"	m	class:oneflow::final	access:private
actor_thread_	thread/thread.h	/^  std::thread actor_thread_;$/;"	m	class:oneflow::Thread	access:private
ancestors	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> ancestors;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
ancestors_and_this	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> ancestors_and_this;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
axis_	kernel/boxing_kernel.cpp	/^  int32_t axis_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
barrier_calls_	control/ctrl_server.h	/^      barrier_calls_;$/;"	m	class:oneflow::final	access:private
base_begin_idx_	common/balanced_splitter.h	/^  int64_t base_begin_idx_;$/;"	m	class:oneflow::final	access:private
base_part_size_	common/balanced_splitter.h	/^  int64_t base_part_size_;$/;"	m	class:oneflow::final	access:private
begin	common/range.h	/^  int64_t begin() const { return begin_; }$/;"	f	class:oneflow::final	access:public	signature:() const
begin_	common/range.h	/^  int64_t begin_;$/;"	m	class:oneflow::final	access:private
bin_out_stream_	actor/act_event_logger.h	/^  PersistentOutStream bin_out_stream_;$/;"	m	class:oneflow::final	access:private
blob_desc	register/blob.h	/^  const BlobDesc& blob_desc() const { return *blob_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
blob_desc_	register/blob.h	/^  const BlobDesc* blob_desc_;$/;"	m	class:oneflow::final	access:private
blob_desc_ptr	register/blob.h	/^  const BlobDesc* blob_desc_ptr() const { return blob_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
bn_idx_	kernel/boxing_kernel.cpp	/^  int32_t bn_idx_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
bn_in_op2lbn_	operator/operator.h	/^  HashMap<std::string, std::string> bn_in_op2lbn_;$/;"	m	class:oneflow::Operator	access:private
bn_in_op2regst_	graph/exec_graph.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> bn_in_op2regst_;$/;"	m	class:oneflow::final	access:private
bn_in_op2regst_desc_id	actor/actor.h	/^    HashMap<std::string, int64_t> bn_in_op2regst_desc_id;$/;"	m	struct:oneflow::Actor::ExecKernel	access:public
bn_num_	kernel/boxing_kernel.cpp	/^  int32_t bn_num_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
bns_	kernel/boxing_kernel.cpp	/^  const PbRpf<std::string>* bns_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
boxing_thrd_offset_	job/id_manager.h	/^  std::vector<int64_t> boxing_thrd_offset_;$/;"	m	class:oneflow::final	access:private
break_epoll_loop_fd_	comm_network/epoll/io_event_poller.h	/^  int break_epoll_loop_fd_;$/;"	m	class:oneflow::final	access:private
buffer_	persistence/persistent_in_stream.h	/^  char* buffer_;$/;"	m	class:oneflow::PersistentInStream	access:private
buffer_size_	persistence/persistent_in_stream.cpp	/^const uint64_t PersistentInStream::buffer_size_ = 128 * 1024 * 1024;$/;"	m	class:oneflow::PersistentInStream	file:
buffer_size_	persistence/persistent_in_stream.h	/^  static const uint64_t buffer_size_;$/;"	m	class:oneflow::PersistentInStream	access:private
bw_node	graph/chain_node.h	/^  BackwardChainNode* bw_node() const { return bw_node_; }$/;"	f	class:oneflow::final	access:public	signature:() const
bw_node_	graph/chain_node.h	/^  BackwardChainNode* bw_node_;$/;"	m	class:oneflow::final	access:private
byte_size	comm_network/epoll/socket_memory_desc.h	/^  size_t byte_size;$/;"	m	struct:oneflow::SocketMemDesc	access:public
cbl	comm_network/epoll/epoll_comm_network.h	/^    CallBackList cbl;$/;"	m	struct:oneflow::final::ReadContext	access:public
cblas_axpy	blas/cblas_template.cpp	/^void cblas_axpy<double>(const int n, const double alpha, const double* x,$/;"	f	namespace:oneflow	signature:(const int n, const double alpha, const double* x, const int incx, double* y, const int incy)
cblas_axpy	blas/cblas_template.cpp	/^void cblas_axpy<float>(const int n, const float alpha, const float* x,$/;"	f	namespace:oneflow	signature:(const int n, const float alpha, const float* x, const int incx, float* y, const int incy)
cblas_axpy	blas/cblas_template.h	/^void cblas_axpy(const int n, const FloatingPointType alpha,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType alpha, const FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
cblas_caxpy	blas/cblas.h	/^void cblas_caxpy(const int N, const void *alpha, const void *X, const int incX,$/;"	p	signature:(const int N, const void *alpha, const void *X, const int incX, void *Y, const int incY)
cblas_ccopy	blas/cblas.h	/^void cblas_ccopy(const int N, const void *X, const int incX, void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, void *Y, const int incY)
cblas_cdotc_sub	blas/cblas.h	/^void cblas_cdotc_sub(const int N, const void *X, const int incX, const void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotc)
cblas_cdotu_sub	blas/cblas.h	/^void cblas_cdotu_sub(const int N, const void *X, const int incX, const void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotu)
cblas_cgbmv	blas/cblas.h	/^void cblas_cgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cgemm	blas/cblas.h	/^void cblas_cgemm(const enum CBLAS_ORDER Order,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_cgemv	blas/cblas.h	/^void cblas_cgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cgerc	blas/cblas.h	/^void cblas_cgerc(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_cgeru	blas/cblas.h	/^void cblas_cgeru(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_chbmv	blas/cblas.h	/^void cblas_chbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_chemm	blas/cblas.h	/^void cblas_chemm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_chemv	blas/cblas.h	/^void cblas_chemv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_cher	blas/cblas.h	/^void cblas_cher(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const void *X, const int incX, void *A, const int lda)
cblas_cher2	blas/cblas.h	/^void cblas_cher2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_cher2k	blas/cblas.h	/^void cblas_cher2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const float beta, void *C, const int ldc)
cblas_cherk	blas/cblas.h	/^void cblas_cherk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const void *A, const int lda, const float beta, void *C, const int ldc)
cblas_chpmv	blas/cblas.h	/^void cblas_chpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *Ap, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_chpr	blas/cblas.h	/^void cblas_chpr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const void *X, const int incX, void *A)
cblas_chpr2	blas/cblas.h	/^void cblas_chpr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *Ap)
cblas_copy	blas/cblas_template.cpp	/^void cblas_copy<double>(const int n, const double* x, const int incx, double* y,$/;"	f	namespace:oneflow	signature:(const int n, const double* x, const int incx, double* y, const int incy)
cblas_copy	blas/cblas_template.cpp	/^void cblas_copy<float>(const int n, const float* x, const int incx, float* y,$/;"	f	namespace:oneflow	signature:(const int n, const float* x, const int incx, float* y, const int incy)
cblas_copy	blas/cblas_template.h	/^void cblas_copy(const int n, const FloatingPointType* x, const int incx,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
cblas_cscal	blas/cblas.h	/^void cblas_cscal(const int N, const void *alpha, void *X, const int incX);$/;"	p	signature:(const int N, const void *alpha, void *X, const int incX)
cblas_csscal	blas/cblas.h	/^void cblas_csscal(const int N, const float alpha, void *X, const int incX);$/;"	p	signature:(const int N, const float alpha, void *X, const int incX)
cblas_cswap	blas/cblas.h	/^void cblas_cswap(const int N, void *X, const int incX, void *Y, const int incY);$/;"	p	signature:(const int N, void *X, const int incX, void *Y, const int incY)
cblas_csymm	blas/cblas.h	/^void cblas_csymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_csyr2k	blas/cblas.h	/^void cblas_csyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_csyrk	blas/cblas.h	/^void cblas_csyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *beta, void *C, const int ldc)
cblas_ctbmv	blas/cblas.h	/^void cblas_ctbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ctbsv	blas/cblas.h	/^void cblas_ctbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ctpmv	blas/cblas.h	/^void cblas_ctpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ctpsv	blas/cblas.h	/^void cblas_ctpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ctrmm	blas/cblas.h	/^void cblas_ctrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ctrmv	blas/cblas.h	/^void cblas_ctrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_ctrsm	blas/cblas.h	/^void cblas_ctrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ctrsv	blas/cblas.h	/^void cblas_ctrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_dasum	blas/cblas.h	/^double cblas_dasum(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_daxpy	blas/cblas.h	/^void cblas_daxpy(const int N, const double alpha, const double *X,$/;"	p	signature:(const int N, const double alpha, const double *X, const int incX, double *Y, const int incY)
cblas_dcopy	blas/cblas.h	/^void cblas_dcopy(const int N, const double *X, const int incX, double *Y,$/;"	p	signature:(const int N, const double *X, const int incX, double *Y, const int incY)
cblas_ddot	blas/cblas.h	/^double cblas_ddot(const int N, const double *X, const int incX, const double *Y,$/;"	p	signature:(const int N, const double *X, const int incX, const double *Y, const int incY)
cblas_dgbmv	blas/cblas.h	/^void cblas_dgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dgemm	blas/cblas.h	/^void cblas_dgemm(const enum CBLAS_ORDER Order,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dgemv	blas/cblas.h	/^void cblas_dgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dger	blas/cblas.h	/^void cblas_dger(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A, const int lda)
cblas_dnrm2	blas/cblas.h	/^double cblas_dnrm2(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_dot	blas/cblas_template.cpp	/^double cblas_dot<double>(const int n, const double* x, const int incx,$/;"	f	namespace:oneflow	signature:(const int n, const double* x, const int incx, const double* y, const int incy)
cblas_dot	blas/cblas_template.cpp	/^float cblas_dot<float>(const int n, const float* x, const int incx,$/;"	f	namespace:oneflow	signature:(const int n, const float* x, const int incx, const float* y, const int incy)
cblas_dot	blas/cblas_template.h	/^FloatingPointType cblas_dot(const int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType* x, const int incx, const FloatingPointType* y, const int incy)
cblas_drot	blas/cblas.h	/^void cblas_drot(const int N, double *X, const int incX, double *Y,$/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY, const double c, const double s)
cblas_drotg	blas/cblas.h	/^void cblas_drotg(double *a, double *b, double *c, double *s);$/;"	p	signature:(double *a, double *b, double *c, double *s)
cblas_drotm	blas/cblas.h	/^void cblas_drotm(const int N, double *X, const int incX, double *Y,$/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY, const double *P)
cblas_drotmg	blas/cblas.h	/^void cblas_drotmg(double *d1, double *d2, double *b1, const double b2,$/;"	p	signature:(double *d1, double *d2, double *b1, const double b2, double *P)
cblas_dsbmv	blas/cblas.h	/^void cblas_dsbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dscal	blas/cblas.h	/^void cblas_dscal(const int N, const double alpha, double *X, const int incX);$/;"	p	signature:(const int N, const double alpha, double *X, const int incX)
cblas_dsdot	blas/cblas.h	/^double cblas_dsdot(const int N, const float *X, const int incX, const float *Y,$/;"	p	signature:(const int N, const float *X, const int incX, const float *Y, const int incY)
cblas_dspmv	blas/cblas.h	/^void cblas_dspmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *Ap, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dspr	blas/cblas.h	/^void cblas_dspr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, double *Ap)
cblas_dspr2	blas/cblas.h	/^void cblas_dspr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A)
cblas_dswap	blas/cblas.h	/^void cblas_dswap(const int N, double *X, const int incX, double *Y,$/;"	p	signature:(const int N, double *X, const int incX, double *Y, const int incY)
cblas_dsymm	blas/cblas.h	/^void cblas_dsymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dsymv	blas/cblas.h	/^void cblas_dsymv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *A, const int lda, const double *X, const int incX, const double beta, double *Y, const int incY)
cblas_dsyr	blas/cblas.h	/^void cblas_dsyr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, double *A, const int lda)
cblas_dsyr2	blas/cblas.h	/^void cblas_dsyr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const double *X, const int incX, const double *Y, const int incY, double *A, const int lda)
cblas_dsyr2k	blas/cblas.h	/^void cblas_dsyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc)
cblas_dsyrk	blas/cblas.h	/^void cblas_dsyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const double *A, const int lda, const double beta, double *C, const int ldc)
cblas_dtbmv	blas/cblas.h	/^void cblas_dtbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const double *A, const int lda, double *X, const int incX)
cblas_dtbsv	blas/cblas.h	/^void cblas_dtbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const double *A, const int lda, double *X, const int incX)
cblas_dtpmv	blas/cblas.h	/^void cblas_dtpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *Ap, double *X, const int incX)
cblas_dtpsv	blas/cblas.h	/^void cblas_dtpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *Ap, double *X, const int incX)
cblas_dtrmm	blas/cblas.h	/^void cblas_dtrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const double alpha, const double *A, const int lda, double *B, const int ldb)
cblas_dtrmv	blas/cblas.h	/^void cblas_dtrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *A, const int lda, double *X, const int incX)
cblas_dtrsm	blas/cblas.h	/^void cblas_dtrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const double alpha, const double *A, const int lda, double *B, const int ldb)
cblas_dtrsv	blas/cblas.h	/^void cblas_dtrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const double *A, const int lda, double *X, const int incX)
cblas_dzasum	blas/cblas.h	/^double cblas_dzasum(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_dznrm2	blas/cblas.h	/^double cblas_dznrm2(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_gemm	blas/cblas_template.cpp	/^void cblas_gemm<double>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const double alpha, const double* a, const int lda, const double* b, const int ldb, const double beta, double* c, const int ldc)
cblas_gemm	blas/cblas_template.cpp	/^void cblas_gemm<float>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const float alpha, const float* a, const int lda, const float* b, const int ldb, const float beta, float* c, const int ldc)
cblas_gemm	blas/cblas_template.h	/^void cblas_gemm(const enum CBLAS_ORDER order,$/;"	p	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const FloatingPointType alpha, const FloatingPointType* a, const int lda, const FloatingPointType* b, const int ldb, const FloatingPointType beta, FloatingPointType* c, const int ldc)
cblas_gemv	blas/cblas_template.cpp	/^void cblas_gemv<double>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const double alpha, const double* a, const int lda, const double* x, const int incx, const double beta, double* y, const int incy)
cblas_gemv	blas/cblas_template.cpp	/^void cblas_gemv<float>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const float alpha, const float* a, const int lda, const float* x, const int incx, const float beta, float* y, const int incy)
cblas_gemv	blas/cblas_template.h	/^void cblas_gemv(const enum CBLAS_ORDER order,$/;"	p	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const FloatingPointType alpha, const FloatingPointType* a, const int lda, const FloatingPointType* x, const int incx, const FloatingPointType beta, FloatingPointType* y, const int incy)
cblas_icamax	blas/cblas.h	/^CBLAS_INDEX cblas_icamax(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_idamax	blas/cblas.h	/^CBLAS_INDEX cblas_idamax(const int N, const double *X, const int incX);$/;"	p	signature:(const int N, const double *X, const int incX)
cblas_isamax	blas/cblas.h	/^CBLAS_INDEX cblas_isamax(const int N, const float *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_izamax	blas/cblas.h	/^CBLAS_INDEX cblas_izamax(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_sasum	blas/cblas.h	/^float cblas_sasum(const int N, const float *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_saxpy	blas/cblas.h	/^void cblas_saxpy(const int N, const float alpha, const float *X, const int incX,$/;"	p	signature:(const int N, const float alpha, const float *X, const int incX, float *Y, const int incY)
cblas_scal	blas/cblas_template.cpp	/^void cblas_scal<double>(const int n, const double alpha, double* x,$/;"	f	namespace:oneflow	signature:(const int n, const double alpha, double* x, const int incx)
cblas_scal	blas/cblas_template.cpp	/^void cblas_scal<float>(const int n, const float alpha, float* x,$/;"	f	namespace:oneflow	signature:(const int n, const float alpha, float* x, const int incx)
cblas_scal	blas/cblas_template.h	/^void cblas_scal(const int n, const FloatingPointType alpha,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType alpha, FloatingPointType* x, const int incx)
cblas_scasum	blas/cblas.h	/^float cblas_scasum(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_scnrm2	blas/cblas.h	/^float cblas_scnrm2(const int N, const void *X, const int incX);$/;"	p	signature:(const int N, const void *X, const int incX)
cblas_scopy	blas/cblas.h	/^void cblas_scopy(const int N, const float *X, const int incX, float *Y,$/;"	p	signature:(const int N, const float *X, const int incX, float *Y, const int incY)
cblas_sdot	blas/cblas.h	/^float cblas_sdot(const int N, const float *X, const int incX, const float *Y,$/;"	p	signature:(const int N, const float *X, const int incX, const float *Y, const int incY)
cblas_sdsdot	blas/cblas.h	/^float cblas_sdsdot(const int N, const float alpha, const float *X,$/;"	p	signature:(const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY)
cblas_sgbmv	blas/cblas.h	/^void cblas_sgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sgemm	blas/cblas.h	/^void cblas_sgemm(const enum CBLAS_ORDER Order,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_sgemv	blas/cblas.h	/^void cblas_sgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sger	blas/cblas.h	/^void cblas_sger(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A, const int lda)
cblas_snrm2	blas/cblas.h	/^float cblas_snrm2(const int N, const float *X, const int incX);$/;"	p	signature:(const int N, const float *X, const int incX)
cblas_srot	blas/cblas.h	/^void cblas_srot(const int N, float *X, const int incX, float *Y, const int incY,$/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY, const float c, const float s)
cblas_srotg	blas/cblas.h	/^void cblas_srotg(float *a, float *b, float *c, float *s);$/;"	p	signature:(float *a, float *b, float *c, float *s)
cblas_srotm	blas/cblas.h	/^void cblas_srotm(const int N, float *X, const int incX, float *Y,$/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY, const float *P)
cblas_srotmg	blas/cblas.h	/^void cblas_srotmg(float *d1, float *d2, float *b1, const float b2, float *P);$/;"	p	signature:(float *d1, float *d2, float *b1, const float b2, float *P)
cblas_ssbmv	blas/cblas.h	/^void cblas_ssbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sscal	blas/cblas.h	/^void cblas_sscal(const int N, const float alpha, float *X, const int incX);$/;"	p	signature:(const int N, const float alpha, float *X, const int incX)
cblas_sspmv	blas/cblas.h	/^void cblas_sspmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *Ap, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_sspr	blas/cblas.h	/^void cblas_sspr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, float *Ap)
cblas_sspr2	blas/cblas.h	/^void cblas_sspr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A)
cblas_sswap	blas/cblas.h	/^void cblas_sswap(const int N, float *X, const int incX, float *Y,$/;"	p	signature:(const int N, float *X, const int incX, float *Y, const int incY)
cblas_ssymm	blas/cblas.h	/^void cblas_ssymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_ssymv	blas/cblas.h	/^void cblas_ssymv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *A, const int lda, const float *X, const int incX, const float beta, float *Y, const int incY)
cblas_ssyr	blas/cblas.h	/^void cblas_ssyr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, float *A, const int lda)
cblas_ssyr2	blas/cblas.h	/^void cblas_ssyr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const float alpha, const float *X, const int incX, const float *Y, const int incY, float *A, const int lda)
cblas_ssyr2k	blas/cblas.h	/^void cblas_ssyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc)
cblas_ssyrk	blas/cblas.h	/^void cblas_ssyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const float alpha, const float *A, const int lda, const float beta, float *C, const int ldc)
cblas_stbmv	blas/cblas.h	/^void cblas_stbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const float *A, const int lda, float *X, const int incX)
cblas_stbsv	blas/cblas.h	/^void cblas_stbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const float *A, const int lda, float *X, const int incX)
cblas_stpmv	blas/cblas.h	/^void cblas_stpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *Ap, float *X, const int incX)
cblas_stpsv	blas/cblas.h	/^void cblas_stpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *Ap, float *X, const int incX)
cblas_strmm	blas/cblas.h	/^void cblas_strmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const float alpha, const float *A, const int lda, float *B, const int ldb)
cblas_strmv	blas/cblas.h	/^void cblas_strmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *A, const int lda, float *X, const int incX)
cblas_strsm	blas/cblas.h	/^void cblas_strsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const float alpha, const float *A, const int lda, float *B, const int ldb)
cblas_strsv	blas/cblas.h	/^void cblas_strsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const float *A, const int lda, float *X, const int incX)
cblas_swap	blas/cblas_template.cpp	/^void cblas_swap<double>(const int n, double* x, const int incx, double* y,$/;"	f	namespace:oneflow	signature:(const int n, double* x, const int incx, double* y, const int incy)
cblas_swap	blas/cblas_template.cpp	/^void cblas_swap<float>(const int n, float* x, const int incx, float* y,$/;"	f	namespace:oneflow	signature:(const int n, float* x, const int incx, float* y, const int incy)
cblas_swap	blas/cblas_template.h	/^void cblas_swap(const int n, FloatingPointType* x, const int incx,$/;"	p	namespace:oneflow	signature:(const int n, FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
cblas_xerbla	blas/cblas.h	/^void cblas_xerbla(int p, const char *rout, const char *form, ...);$/;"	p	signature:(int p, const char *rout, const char *form, ...)
cblas_zaxpy	blas/cblas.h	/^void cblas_zaxpy(const int N, const void *alpha, const void *X, const int incX,$/;"	p	signature:(const int N, const void *alpha, const void *X, const int incX, void *Y, const int incY)
cblas_zcopy	blas/cblas.h	/^void cblas_zcopy(const int N, const void *X, const int incX, void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, void *Y, const int incY)
cblas_zdotc_sub	blas/cblas.h	/^void cblas_zdotc_sub(const int N, const void *X, const int incX, const void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotc)
cblas_zdotu_sub	blas/cblas.h	/^void cblas_zdotu_sub(const int N, const void *X, const int incX, const void *Y,$/;"	p	signature:(const int N, const void *X, const int incX, const void *Y, const int incY, void *dotu)
cblas_zdscal	blas/cblas.h	/^void cblas_zdscal(const int N, const double alpha, void *X, const int incX);$/;"	p	signature:(const int N, const double alpha, void *X, const int incX)
cblas_zgbmv	blas/cblas.h	/^void cblas_zgbmv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const int KL, const int KU, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zgemm	blas/cblas.h	/^void cblas_zgemm(const enum CBLAS_ORDER Order,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_TRANSPOSE TransB, const int M, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zgemv	blas/cblas.h	/^void cblas_zgemv(const enum CBLAS_ORDER order,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE TransA, const int M, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zgerc	blas/cblas.h	/^void cblas_zgerc(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zgeru	blas/cblas.h	/^void cblas_zgeru(const enum CBLAS_ORDER order, const int M, const int N,$/;"	p	signature:(const enum CBLAS_ORDER order, const int M, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zhbmv	blas/cblas.h	/^void cblas_zhbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const int K, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zhemm	blas/cblas.h	/^void cblas_zhemm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zhemv	blas/cblas.h	/^void cblas_zhemv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *A, const int lda, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zher	blas/cblas.h	/^void cblas_zher(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const void *X, const int incX, void *A, const int lda)
cblas_zher2	blas/cblas.h	/^void cblas_zher2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *A, const int lda)
cblas_zher2k	blas/cblas.h	/^void cblas_zher2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const double beta, void *C, const int ldc)
cblas_zherk	blas/cblas.h	/^void cblas_zherk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const double alpha, const void *A, const int lda, const double beta, void *C, const int ldc)
cblas_zhpmv	blas/cblas.h	/^void cblas_zhpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *Ap, const void *X, const int incX, const void *beta, void *Y, const int incY)
cblas_zhpr	blas/cblas.h	/^void cblas_zhpr(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const double alpha, const void *X, const int incX, void *A)
cblas_zhpr2	blas/cblas.h	/^void cblas_zhpr2(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const int N, const void *alpha, const void *X, const int incX, const void *Y, const int incY, void *Ap)
cblas_zscal	blas/cblas.h	/^void cblas_zscal(const int N, const void *alpha, void *X, const int incX);$/;"	p	signature:(const int N, const void *alpha, void *X, const int incX)
cblas_zswap	blas/cblas.h	/^void cblas_zswap(const int N, void *X, const int incX, void *Y, const int incY);$/;"	p	signature:(const int N, void *X, const int incX, void *Y, const int incY)
cblas_zsymm	blas/cblas.h	/^void cblas_zsymm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const int M, const int N, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zsyr2k	blas/cblas.h	/^void cblas_zsyr2k(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *B, const int ldb, const void *beta, void *C, const int ldc)
cblas_zsyrk	blas/cblas.h	/^void cblas_zsyrk(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE Trans, const int N, const int K, const void *alpha, const void *A, const int lda, const void *beta, void *C, const int ldc)
cblas_ztbmv	blas/cblas.h	/^void cblas_ztbmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ztbsv	blas/cblas.h	/^void cblas_ztbsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const int K, const void *A, const int lda, void *X, const int incX)
cblas_ztpmv	blas/cblas.h	/^void cblas_ztpmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ztpsv	blas/cblas.h	/^void cblas_ztpsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *Ap, void *X, const int incX)
cblas_ztrmm	blas/cblas.h	/^void cblas_ztrmm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ztrmv	blas/cblas.h	/^void cblas_ztrmv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
cblas_ztrsm	blas/cblas.h	/^void cblas_ztrsm(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side,$/;"	p	signature:(const enum CBLAS_ORDER Order, const enum CBLAS_SIDE Side, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int M, const int N, const void *alpha, const void *A, const int lda, void *B, const int ldb)
cblas_ztrsv	blas/cblas.h	/^void cblas_ztrsv(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo,$/;"	p	signature:(const enum CBLAS_ORDER order, const enum CBLAS_UPLO Uplo, const enum CBLAS_TRANSPOSE TransA, const enum CBLAS_DIAG Diag, const int N, const void *A, const int lda, void *X, const int incX)
chain_gph_	graph/task_graph.h	/^  std::unique_ptr<const ChainGraph> chain_gph_;$/;"	m	class:oneflow::final	access:private
chain_node	graph/compute_task_node.h	/^  const ChainNode* chain_node() const { return chain_node_; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:() const
chain_node_	graph/compute_task_node.h	/^  const ChainNode* chain_node_;$/;"	m	class:oneflow::CompTaskNode	access:private
channel_	control/ctrl_service.cpp	/^          channel_(channel) {$/;"	f	namespace:oneflow	signature:(channel)
channel_	control/ctrl_service.h	/^    std::shared_ptr<grpc::ChannelInterface> channel_;$/;"	m	class:oneflow::final::final	access:private
clone_op	graph/logical_graph.h	/^    std::shared_ptr<Operator> clone_op;$/;"	m	struct:oneflow::final::CloneInfo	access:public
cnt_val_	common/blocking_counter.h	/^  int64_t cnt_val_;$/;"	m	class:oneflow::final	access:private
col_id	register/blob.h	/^  int64_t col_id() const { return col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
col_id_	register/blob.h	/^  int64_t col_id_;$/;"	m	class:oneflow::final	access:private
comm_net_device_ctx_	actor/copy_comm_net_actor.h	/^  CommNetDeviceCtx* comm_net_device_ctx_;$/;"	m	class:oneflow::final	access:private
comm_net_token	actor/actor_message.cpp	/^const void* ActorMsg::comm_net_token() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
comm_net_token	actor/actor_message.h	/^    const void* comm_net_token;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
comm_net_token	actor/actor_message.h	/^  const void* comm_net_token() const;$/;"	p	class:oneflow::final	access:public	signature:() const
comm_net_token	actor/copy_comm_net_actor.h	/^    const void* comm_net_token;$/;"	m	struct:oneflow::final::RegstCtx	access:public
comm_net_token	register/blob.h	/^  const void* comm_net_token() const { return comm_net_token_; }$/;"	f	class:oneflow::final	access:public	signature:() const
comm_net_token_	register/blob.h	/^  const void* comm_net_token_;$/;"	m	class:oneflow::final	access:private
comm_network_ptr_	comm_network/comm_network.cpp	/^CommNet* CommNet::comm_network_ptr_;$/;"	m	class:oneflow::CommNet	file:
comm_network_ptr_	comm_network/comm_network.h	/^  static CommNet* comm_network_ptr_;$/;"	m	class:oneflow::CommNet	access:private
cond_	common/blocking_counter.h	/^  std::condition_variable cond_;$/;"	m	class:oneflow::final	access:private
cond_	common/channel.h	/^  std::condition_variable cond_;$/;"	m	class:oneflow::final	access:private
consumed_regsts_	graph/task_node.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> consumed_regsts_;$/;"	m	class:oneflow::TaskNode	access:private
consumers	register/register_desc.h	/^  const HashSet<const TaskNode*>& consumers() const { return consumers_; }$/;"	f	class:oneflow::final	access:public	signature:() const
consumers_	register/register_desc.h	/^  HashSet<const TaskNode*> consumers_;$/;"	m	class:oneflow::final	access:private
consumers_actor_id	register/register.cpp	/^const std::vector<int64_t>& Regst::consumers_actor_id() const {$/;"	f	class:oneflow::Regst	signature:() const
consumers_actor_id	register/register.h	/^  const std::vector<int64_t>& consumers_actor_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
consumers_actor_id	register/runtime_register_desc.h	/^  const std::vector<int64_t>& consumers_actor_id() const {$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
consumers_actor_id_	register/runtime_register_desc.h	/^  std::vector<int64_t> consumers_actor_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
copy_hd_cuda_stream	thread/thread_context.h	/^  const cudaStream_t* copy_hd_cuda_stream;$/;"	m	struct:oneflow::ThreadCtx	access:public
copy_type	graph/copy_task_node.h	/^  CopyHdOpConf::Type copy_type() const { return copy_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
copy_type_	graph/copy_task_node.h	/^  CopyHdOpConf::Type copy_type_;$/;"	m	class:oneflow::final	access:private
counters_	job/runtime_context.h	/^  HashMap<std::string, std::unique_ptr<BlockingCounter>> counters_;$/;"	m	class:oneflow::final	access:private
cp_kind_	kernel/copy_hd_kernel.h	/^  cudaMemcpyKind cp_kind_;$/;"	m	class:oneflow::final	access:private
cpy_func_	actor/accumulate_compute_actor.h	/^  std::function<void(DeviceCtx*, void* dst, const void* src, size_t)> cpy_func_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
cq_	control/ctrl_server.h	/^  std::unique_ptr<grpc::ServerCompletionQueue> cq_;$/;"	m	class:oneflow::final	access:private
ctrl_server_	job/oneflow.cpp	/^  std::unique_ptr<CtrlServer> ctrl_server_;$/;"	m	class:oneflow::final	file:	access:private
cublas_axpy	blas/cublas_template.h	/^void cublas_axpy(cublasHandle_t handle, int n, const FloatingPointType* alpha,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* alpha, const FloatingPointType* x, int incx, FloatingPointType* y, int incy)
cublas_copy	blas/cublas_template.h	/^void cublas_copy(cublasHandle_t handle, int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* x, int incx, FloatingPointType* y, int incy)
cublas_dot	blas/cublas_template.h	/^void cublas_dot(cublasHandle_t handle, int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* x, int incx, const FloatingPointType* y, int incy, FloatingPointType* result)
cublas_gemm	blas/cublas_template.h	/^void cublas_gemm(cublasHandle_t handle, cublasOperation_t cutrans_a,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, cublasOperation_t cutrans_a, cublasOperation_t cutrans_b, int m, int n, int k, const FloatingPointType* alpha, const FloatingPointType* a, int lda, const FloatingPointType* b, int ldb, const FloatingPointType* beta, FloatingPointType* c, int ldc)
cublas_gemv	blas/cublas_template.h	/^void cublas_gemv(cublasHandle_t handle, cublasOperation_t trans, int m, int n,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const FloatingPointType* alpha, const FloatingPointType* a, int lda, const FloatingPointType* x, int incx, const FloatingPointType* beta, FloatingPointType* y, int incy)
cublas_handle	device/cuda_stream_handle.cpp	/^const cublasHandle_t* CudaStreamHandle::cublas_handle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
cublas_handle	device/cuda_stream_handle.h	/^  const cublasHandle_t* cublas_handle();$/;"	p	class:oneflow::final	access:public	signature:()
cublas_handle	device/device_context.h	/^  const cublasHandle_t& cublas_handle() const { return *cublas_handle_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
cublas_handle_	device/cuda_stream_handle.h	/^  std::unique_ptr<cublasHandle_t> cublas_handle_;$/;"	m	class:oneflow::final	access:private
cublas_handle_	device/device_context.h	/^  const cublasHandle_t* cublas_handle_;$/;"	m	class:oneflow::DeviceCtx	access:private
cublas_scal	blas/cublas_template.h	/^void cublas_scal(cublasHandle_t handle, int n, const FloatingPointType* alpha,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* alpha, FloatingPointType* x, int incx)
cublas_swap	blas/cublas_template.h	/^void cublas_swap(cublasHandle_t handle, int n, FloatingPointType* x, int incx,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, FloatingPointType* x, int incx, FloatingPointType* y, int incy)
cuda_handle_	actor/actor.h	/^  CudaStreamHandle cuda_handle_;$/;"	m	class:oneflow::Actor	access:private
cuda_stream	device/cuda_stream_handle.cpp	/^const cudaStream_t* CudaStreamHandle::cuda_stream() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
cuda_stream	device/cuda_stream_handle.h	/^  const cudaStream_t* cuda_stream();$/;"	p	class:oneflow::final	access:public	signature:()
cuda_stream	device/device_context.h	/^  const cudaStream_t& cuda_stream() const { return *cuda_stream_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
cuda_stream_	device/cuda_stream_handle.h	/^  std::unique_ptr<cudaStream_t> cuda_stream_;$/;"	m	class:oneflow::final	access:private
cuda_stream_	device/device_context.h	/^  const cudaStream_t* cuda_stream_;$/;"	m	class:oneflow::DeviceCtx	access:private
cudnn_handle	device/cuda_stream_handle.cpp	/^const cudnnHandle_t* CudaStreamHandle::cudnn_handle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
cudnn_handle	device/cuda_stream_handle.h	/^  const cudnnHandle_t* cudnn_handle();$/;"	p	class:oneflow::final	access:public	signature:()
cudnn_handle	device/device_context.h	/^  const cudnnHandle_t& cudnn_handle() const { return *cudnn_handle_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
cudnn_handle_	device/cuda_stream_handle.h	/^  std::unique_ptr<cudnnHandle_t> cudnn_handle_;$/;"	m	class:oneflow::final	access:private
cudnn_handle_	device/device_context.h	/^  const cudnnHandle_t* cudnn_handle_;$/;"	m	class:oneflow::DeviceCtx	access:private
cur_buf_begin_	persistence/persistent_in_stream.h	/^  char* cur_buf_begin_;$/;"	m	class:oneflow::PersistentInStream	access:private
cur_buf_end_	persistence/persistent_in_stream.h	/^  char* cur_buf_end_;$/;"	m	class:oneflow::PersistentInStream	access:private
cur_file_pos	persistence/persistent_in_stream.h	/^  uint64_t cur_file_pos() const { return cur_file_pos_; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:() const
cur_file_pos_	persistence/persistent_in_stream.h	/^  uint64_t cur_file_pos_;$/;"	m	class:oneflow::PersistentInStream	access:private
cur_msg_	comm_network/epoll/socket_read_helper.h	/^  SocketMsg cur_msg_;$/;"	m	class:oneflow::final	access:private
cur_msg_	comm_network/epoll/socket_write_helper.h	/^  SocketMsg cur_msg_;$/;"	m	class:oneflow::final	access:private
cur_msg_queue_	comm_network/epoll/socket_write_helper.h	/^  std::queue<SocketMsg>* cur_msg_queue_;$/;"	m	class:oneflow::final	access:private
cur_read_handle_	comm_network/epoll/socket_read_helper.h	/^  bool (SocketReadHelper::*cur_read_handle_)();$/;"	m	class:oneflow::final	access:private
cur_write_handle_	comm_network/epoll/socket_write_helper.h	/^  bool (SocketWriteHelper::*cur_write_handle_)();$/;"	m	class:oneflow::final	access:private
data_id	register/blob.cpp	/^const char* Blob::data_id(int32_t no) const {$/;"	f	class:oneflow::Blob	signature:(int32_t no) const
data_id	register/blob.h	/^  const char* data_id() const { return data_id(0); }$/;"	f	class:oneflow::final	access:public	signature:() const
data_id	register/blob.h	/^  const char* data_id(int32_t no) const;$/;"	p	class:oneflow::final	access:public	signature:(int32_t no) const
data_id_ptr_	register/blob.h	/^  char* data_id_ptr_;$/;"	m	class:oneflow::final	access:private
data_output_lbns	graph/chain_node.h	/^  const HashSet<std::string>& data_output_lbns() const {$/;"	f	class:oneflow::ChainNode	access:public	signature:() const
data_output_lbns_	graph/chain_node.h	/^  HashSet<std::string> data_output_lbns_;$/;"	m	class:oneflow::ChainNode	access:private
data_tmp_bns_	operator/operator.h	/^  std::vector<std::string> data_tmp_bns_;$/;"	m	class:oneflow::Operator	access:private
data_tmp_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t data_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
data_type	register/blob.h	/^  DataType data_type() const { return blob_desc_->data_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
data_type	register/blob_desc.h	/^  DataType data_type() const { return data_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
data_type_	register/blob_desc.h	/^  DataType data_type_;$/;"	m	class:oneflow::final	access:private
deleter_	register/register.h	/^  std::function<void()> deleter_;$/;"	m	class:oneflow::final	access:private
descendants	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> descendants;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
descendants_and_this	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> descendants_and_this;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
device_ctx	kernel/kernel_context.h	/^  DeviceCtx* device_ctx;$/;"	m	struct:oneflow::KernelCtx	access:public
device_ctx_	actor/actor.h	/^  std::unique_ptr<DeviceCtx> device_ctx_;$/;"	m	class:oneflow::Actor	access:private
device_num_per_machine_	job/id_manager.h	/^  int64_t device_num_per_machine_;$/;"	m	class:oneflow::final	access:private
device_type	graph/task_node.cpp	/^DeviceType TaskNode::device_type() const {$/;"	f	class:oneflow::TaskNode	signature:() const
device_type	graph/task_node.h	/^  DeviceType device_type() const;$/;"	p	class:oneflow::TaskNode	access:public	signature:() const
dim_vec	common/shape.h	/^  const std::vector<int64_t>& dim_vec() const { return dim_vec_; }$/;"	f	class:oneflow::final	access:public	signature:() const
dim_vec_	common/shape.h	/^  std::vector<int64_t> dim_vec_;$/;"	m	class:oneflow::final	access:private
dlnet_conf	job/job_desc.h	/^  const DLNetConf& dlnet_conf() const { return dlnet_conf_; }$/;"	f	class:oneflow::final	access:public	signature:() const
dlnet_conf_	job/job_desc.h	/^  DLNetConf dlnet_conf_;$/;"	m	class:oneflow::final	access:private
done_cnt	comm_network/epoll/epoll_comm_network.h	/^    int8_t done_cnt;$/;"	m	struct:oneflow::final::ReadContext	access:public
done_cnt_mtx	comm_network/epoll/epoll_comm_network.h	/^    std::mutex done_cnt_mtx;$/;"	m	struct:oneflow::final::ReadContext	access:public
done_names_	control/ctrl_client.h	/^  HashSet<std::string> done_names_;$/;"	m	class:oneflow::final	access:private
dptr	register/blob.h	/^  const T* dptr() const {$/;"	f	class:oneflow::final	access:public	signature:() const
dptr_	register/blob.h	/^  void* dptr_;$/;"	m	class:oneflow::final	access:private
dst_actor_id	actor/actor_message.h	/^  int64_t dst_actor_id() const { return dst_actor_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
dst_actor_id_	actor/actor_message.h	/^  int64_t dst_actor_id_;$/;"	m	class:oneflow::final	access:private
dst_bn	graph/exec_graph.h	/^  const std::string& dst_bn() const { return dst_bn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
dst_bn_	graph/exec_graph.h	/^  std::string dst_bn_;$/;"	m	class:oneflow::final	access:private
dst_machine_id	comm_network/epoll/socket_message.h	/^  int64_t dst_machine_id;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
dst_node	graph/node.h	/^  NodeType* dst_node() const { return dst_node_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
dst_node_	graph/node.h	/^  NodeType* dst_node_;$/;"	m	class:oneflow::Edge	access:private
dst_token	comm_network/epoll/socket_message.h	/^  const void* dst_token;$/;"	m	struct:oneflow::RequestReadMsg	access:public
dst_token	comm_network/epoll/socket_message.h	/^  const void* dst_token;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
dtbn2lbn	operator/operator.cpp	/^std::string Operator::dtbn2lbn(const std::string& data_tmp_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& data_tmp_bn) const
dtbn2lbn	operator/operator.h	/^  std::string dtbn2lbn(const std::string& data_tmp_bn) const;$/;"	p	class:oneflow::Operator	access:private	signature:(const std::string& data_tmp_bn) const
edge	graph/boxing_task_node.h	/^    const TaskEdge* edge;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
edge_id	graph/node.h	/^  int64_t edge_id() const { return edge_id_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
edge_id_	graph/node.h	/^  int64_t edge_id_;$/;"	m	class:oneflow::Edge	access:private
edge_num	graph/graph.h	/^  size_t edge_num() const { return edges_.size(); }$/;"	f	class:oneflow::Graph	access:public	signature:() const
edges	graph/logical_graph.h	/^    std::vector<LogicalEdge*> edges;$/;"	m	struct:oneflow::final::CloneInfo	access:public
edges_	graph/graph.h	/^  std::vector<std::unique_ptr<EdgeType>> edges_;$/;"	m	class:oneflow::Graph	access:private
elem_cnt	common/shape.h	/^  int64_t elem_cnt() const { return elem_cnt_; }$/;"	f	class:oneflow::final	access:public	signature:() const
elem_cnt_	common/shape.h	/^  int64_t elem_cnt_;$/;"	m	class:oneflow::final	access:private
end	common/range.h	/^  int64_t end() const { return end_; }$/;"	f	class:oneflow::final	access:public	signature:() const
end_	common/range.h	/^  int64_t end_;$/;"	m	class:oneflow::final	access:private
eord_regst_desc_id	actor/actor_message.cpp	/^int64_t ActorMsg::eord_regst_desc_id() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
eord_regst_desc_id	actor/actor_message.h	/^  int64_t eord_regst_desc_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
eord_regst_desc_id_	actor/actor_message.h	/^    int64_t eord_regst_desc_id_;$/;"	m	union:oneflow::final::__anon42	access:public
ep_events_	comm_network/epoll/io_event_poller.h	/^  epoll_event* ep_events_;$/;"	m	class:oneflow::final	access:private
epfd_	comm_network/epoll/io_event_poller.h	/^  int epfd_;$/;"	m	class:oneflow::final	access:private
exec_gph_	graph/task_node.h	/^  ExecGraph exec_gph_;$/;"	m	class:oneflow::TaskNode	access:private
exec_kernel_vec	actor/actor.h	/^  const std::vector<ExecKernel>& exec_kernel_vec() { return exec_kernel_vec_; }$/;"	f	class:oneflow::Actor	access:protected	signature:()
exec_kernel_vec_	actor/actor.h	/^  std::vector<ExecKernel> exec_kernel_vec_;$/;"	m	class:oneflow::Actor	access:private
fd	comm_network/epoll/io_event_poller.h	/^    int fd;$/;"	m	struct:oneflow::final::IOHandler	access:public
fd_	persistence/posix/posix_file_system.cpp	/^  int fd_;$/;"	m	class:oneflow::fs::PosixRandomAccessFile	file:	access:private
feenableexcept	common/util.cpp	/^COMMAND(feenableexcept(FE_ALL_EXCEPT & ~FE_INEXACT & ~FE_UNDERFLOW));$/;"	p	namespace:oneflow	file:	signature:(FE_ALL_EXCEPT & ~E_INEXACT & ~E_UNDERFLOW)
file_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFile file_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
file_	persistence/hadoop/hadoop_file_system.cpp	/^  mutable hdfsFile file_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
file_	persistence/persistent_in_stream.h	/^  std::unique_ptr<fs::RandomAccessFile> file_;$/;"	m	class:oneflow::PersistentInStream	access:private
file_	persistence/persistent_out_stream.h	/^  std::unique_ptr<fs::WritableFile> file_;$/;"	m	class:oneflow::final	access:private
file_	persistence/posix/posix_file_system.cpp	/^  FILE* file_;$/;"	m	class:oneflow::fs::PosixWritableFile	file:	access:private
file_size	persistence/persistent_in_stream.h	/^  uint64_t file_size() const { return file_size_; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:() const
file_size_	persistence/persistent_in_stream.h	/^  uint64_t file_size_;$/;"	m	class:oneflow::PersistentInStream	access:private
filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
filename_	persistence/windows/windows_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::__anon41::WindowsRandomAccessFile	file:	access:private
filename_	persistence/windows/windows_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::__anon41::WindowsWritableFile	file:	access:private
final	actor/act_event_logger.h	/^class ActEventLogger final {$/;"	c	namespace:oneflow
final	actor/actor_message.h	/^class ActorMsg final {$/;"	c	namespace:oneflow
final	actor/actor_message_bus.h	/^class ActorMsgBus final {$/;"	c	namespace:oneflow
final	actor/backward_compute_actor.h	/^class BackwardCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
final	actor/boxing_actor.h	/^class BoxingActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
final	actor/copy_comm_net_actor.cpp	/^class CopyCommNetActor::CommNetDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	file:	inherits:DeviceCtx
final	actor/copy_comm_net_actor.h	/^class CopyCommNetActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
final	actor/copy_hd_actor.h	/^class CopyHdActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
final	actor/forward_compute_actor.h	/^class ForwardCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
final	actor/loss_accumulate_compute_actor.h	/^class LossAccCompActor final : public AccumulateCompActor {$/;"	c	namespace:oneflow	inherits:AccumulateCompActor
final	actor/loss_print_compute_actor.h	/^class LossPrintCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
final	actor/model_diff_accumulate_compute_actor.h	/^class MdDiffAccCompActor final : public AccumulateCompActor {$/;"	c	namespace:oneflow	inherits:AccumulateCompActor
final	actor/model_save_compute_actor.h	/^class MdSaveCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
final	actor/model_update_compute_actor.h	/^class MdUpdtCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
final	actor/print_compute_actor.h	/^class PrintCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
final	actor/rnn_boxing_actor.h	/^class BoxingActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
final	actor/source_compute_actor.h	/^class SourceCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
final	comm_network/epoll/epoll_comm_network.h	/^class EpollCommNet final : public CommNet {$/;"	c	namespace:oneflow	inherits:CommNet
final	comm_network/epoll/io_event_poller.h	/^class IOEventPoller final {$/;"	c	namespace:oneflow
final	comm_network/epoll/socket_helper.h	/^class SocketHelper final {$/;"	c	namespace:oneflow
final	comm_network/epoll/socket_read_helper.h	/^class SocketReadHelper final {$/;"	c	namespace:oneflow
final	comm_network/epoll/socket_write_helper.h	/^class SocketWriteHelper final {$/;"	c	namespace:oneflow
final	common/balanced_splitter.h	/^class BalancedSplitter final {$/;"	c	namespace:oneflow
final	common/blocking_counter.h	/^class BlockingCounter final {$/;"	c	namespace:oneflow
final	common/channel.h	/^class Channel final {$/;"	c	namespace:oneflow
final	common/range.h	/^class Range final {$/;"	c	namespace:oneflow
final	common/shape.h	/^class Shape final {$/;"	c	namespace:oneflow
final	common/test_util.h	5;"	d
final	control/ctrl_call.h	/^class CtrlCall final : public CtrlCallIf {$/;"	c	namespace:oneflow	inherits:CtrlCallIf
final	control/ctrl_client.h	/^class CtrlClient final {$/;"	c	namespace:oneflow
final	control/ctrl_server.h	/^class CtrlServer final {$/;"	c	namespace:oneflow
final	control/ctrl_service.h	/^  class AsyncService final : public grpc::Service {$/;"	c	class:oneflow::final	inherits:grpc::Service	access:public
final	control/ctrl_service.h	/^  class Stub final {$/;"	c	class:oneflow::final	access:public
final	control/ctrl_service.h	/^class CtrlService final {$/;"	c	namespace:oneflow
final	device/cpu_device_context.h	/^class CpuDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	inherits:DeviceCtx
final	device/cuda_device_context.h	/^class CudaDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	inherits:DeviceCtx
final	device/cuda_stream_handle.h	/^class CudaStreamHandle final {$/;"	c	namespace:oneflow
final	graph/backward_compute_task_node.h	/^class BackwardCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
final	graph/boxing_task_node.h	/^class InBoxingTaskNode final : public BoxingTaskNode {$/;"	c	namespace:oneflow	inherits:BoxingTaskNode
final	graph/boxing_task_node.h	/^class OutBoxingTaskNode final : public BoxingTaskNode {$/;"	c	namespace:oneflow	inherits:BoxingTaskNode
final	graph/chain_graph.h	/^class ChainGraph final : public Graph<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Graph
final	graph/chain_node.h	/^class BackwardChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class ChainEdge final : public Edge<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Edge
final	graph/chain_node.h	/^class ForwardChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class LossAccChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class LossChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class LossPrintChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class MdDiffAccChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class MdSaveChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class MdUpdtChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class PrintChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/chain_node.h	/^class SourceChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
final	graph/copy_task_node.h	/^class CopyCommNetTaskNode final : public CopyTaskNode {$/;"	c	namespace:oneflow	inherits:CopyTaskNode
final	graph/copy_task_node.h	/^class CopyHdTaskNode final : public CopyTaskNode {$/;"	c	namespace:oneflow	inherits:CopyTaskNode
final	graph/exec_graph.h	/^class ExecEdge final : public Edge<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Edge
final	graph/exec_graph.h	/^class ExecGraph final : public Graph<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Graph
final	graph/exec_graph.h	/^class ExecNode final : public Node<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Node
final	graph/forward_compute_task_node.h	/^class ForwardCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
final	graph/logical_graph.h	/^class LogicalEdge final : public Edge<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Edge
final	graph/logical_graph.h	/^class LogicalGraph final : public Graph<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Graph
final	graph/logical_graph.h	/^class LogicalNode final : public Node<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Node
final	graph/loss_accumulate_compute_task_node.h	/^class LossAccCompTaskNode final : public AccCompTaskNode {$/;"	c	namespace:oneflow	inherits:AccCompTaskNode
final	graph/loss_compute_task_node.h	/^class LossCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
final	graph/loss_print_compute_task_node.h	/^class LossPrintCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
final	graph/model_diff_accumulate_compute_task_node.h	/^class MdDiffAccCompTaskNode final : public AccCompTaskNode {$/;"	c	namespace:oneflow	inherits:AccCompTaskNode
final	graph/model_save_compute_task_node.h	/^class MdSaveCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
final	graph/model_update_compute_task_node.h	/^class MdUpdtCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
final	graph/print_compute_task_node.h	/^class PrintCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
final	graph/source_compute_task_node.h	/^class SourceCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
final	graph/task_graph.h	/^class TaskGraph final : public Graph<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Graph
final	graph/task_node.h	/^class TaskEdge final : public Edge<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Edge
final	job/compiler.h	/^class Compiler final {$/;"	c	namespace:oneflow
final	job/id_manager.h	/^class IDMgr final {$/;"	c	namespace:oneflow
final	job/improver.h	/^class Improver final {$/;"	c	namespace:oneflow
final	job/job_desc.h	/^class JobDesc final {$/;"	c	namespace:oneflow
final	job/machine_context.h	/^class MachineCtx final {$/;"	c	namespace:oneflow
final	job/oneflow.cpp	/^class Oneflow final {$/;"	c	namespace:oneflow	file:
final	job/runtime.h	/^class Runtime final {$/;"	c	namespace:oneflow
final	job/runtime_context.h	/^class RuntimeCtx final {$/;"	c	namespace:oneflow
final	kernel/accumulate_kernel.h	/^class AccumulateKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/boxing_kernel.cpp	/^class DataContentIterator final {$/;"	c	namespace:oneflow::__anon27	file:
final	kernel/boxing_kernel.cpp	/^class DataIdIterator final {$/;"	c	namespace:oneflow::__anon27	file:
final	kernel/boxing_kernel.h	/^class BoxingKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/clone_kernel.cpp	/^class CloneKernelUtil final {$/;"	c	namespace:oneflow	file:
final	kernel/clone_kernel.h	/^class CloneKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/concat_kernel.h	/^class ConcatKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/convolution_kernel.cpp	/^class ConvolutionKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
final	kernel/convolution_kernel.h	/^class ConvolutionKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/convolution_kernel.h	/^class ConvolutionKernelUtil final {$/;"	c	namespace:oneflow
final	kernel/copy_comm_net_kernel.h	/^class CopyCommNetKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/copy_hd_kernel.h	/^class CopyHdKernel final : public KernelIf<DeviceType::kGPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/data_loader_kernel.h	/^class DataLoaderKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/innerproduct_kernel.h	/^class InnerProductKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/kernel_util.cpp	/^struct KernelUtil<DeviceType::kCPU, T> final {$/;"	s	namespace:oneflow	file:
final	kernel/kernel_util.h	/^struct KernelUtil final {$/;"	s	namespace:oneflow
final	kernel/loss_print_kernel.h	/^class LossPrintKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/model_save_kernel.h	/^class ModelSaveKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/momentum_model_update_kernel.h	/^class MomentumMdUpdateKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/multinomial_logistic_loss_kernel.cpp	/^    final {$/;"	c	namespace:oneflow	file:
final	kernel/multinomial_logistic_loss_kernel.h	/^class MultinomialLogisticLossKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/multinomial_logistic_loss_kernel.h	/^class MultinomialLogisticLossKernelUtil final {$/;"	c	namespace:oneflow
final	kernel/normal_model_update_kernel.h	/^class NormalMdUpdateKernel final : public MdUpdateKernel<device_type> {$/;"	c	namespace:oneflow	inherits:MdUpdateKernel
final	kernel/opkernel_test_common.cpp	/^class KTCommon<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow::test	file:
final	kernel/opkernel_test_common.h	/^class KTCommon final {$/;"	c	namespace:oneflow::test
final	kernel/pooling_kernel.cpp	/^class PoolingKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
final	kernel/pooling_kernel.h	/^class PoolingKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/print_kernel.h	/^class PrintKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/relu_kernel.cpp	/^class ReluKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
final	kernel/relu_kernel.h	/^class ReluKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/relu_kernel.h	/^class ReluKernelUtil final {$/;"	c	namespace:oneflow
final	kernel/rmsprop_model_update_kernel.cpp	/^class RMSPropMdUpdateKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
final	kernel/rmsprop_model_update_kernel.h	/^class RMSPropMdUpdateKernel final : public MdUpdateKernel<device_type> {$/;"	c	namespace:oneflow	inherits:MdUpdateKernel
final	kernel/rmsprop_model_update_kernel.h	/^class RMSPropMdUpdateKernelUtil final {$/;"	c	namespace:oneflow
final	kernel/softmax_kernel.cpp	/^class SoftmaxKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
final	kernel/softmax_kernel.h	/^class SoftmaxKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/softmax_kernel.h	/^class SoftmaxKernelUtil final {$/;"	c	namespace:oneflow
final	kernel/softmax_loss_kernel.cpp	/^class SoftmaxLossKernelUtil<DeviceType::kCPU, PredType, LabelType> final {$/;"	c	namespace:oneflow	file:
final	kernel/softmax_loss_kernel.h	/^class SoftmaxLossKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
final	kernel/softmax_loss_kernel.h	/^class SoftmaxLossKernelUtil final {$/;"	c	namespace:oneflow
final	memory/memory_allocator.h	/^class MemoryAllocator final {$/;"	c	namespace:oneflow
final	operator/accumulate_op.h	/^class AccumulateOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/boxing_op.h	/^class BoxingOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/clone_op.h	/^class CloneOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/concat_op.h	/^class ConcatOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/convolution_op.h	/^class ConvolutionOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/copy_comm_net_op.h	/^class CopyCommNetOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/copy_hd_op.h	/^class CopyHdOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/data_loader_op.h	/^class DataLoaderOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/innerproduct_op.h	/^class InnerProductOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/loss_print_op.h	/^class LossPrintOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/model_save_op.h	/^class ModelSaveOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/momentum_model_update_op.h	/^class MomentumModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
final	operator/multinomial_logistic_loss_op.h	/^class MultinomialLogisticLossOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/normal_model_update_op.h	/^class NormalModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
final	operator/pooling_op.h	/^class PoolingOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/print_op.h	/^class PrintOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/relu_op.h	/^class ReluOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/rmsprop_model_update_op.h	/^class RMSPropModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
final	operator/softmax_loss_op.h	/^class SoftmaxLossOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	operator/softmax_op.h	/^class SoftmaxOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
final	persistence/cyclic_persistent_in_stream.h	/^class CyclicPersistentInStream final : public PersistentInStream {$/;"	c	namespace:oneflow	inherits:PersistentInStream
final	persistence/hadoop/hadoop_file_system.h	/^class HadoopFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
final	persistence/normal_persistent_in_stream.h	/^class NormalPersistentInStream final : public PersistentInStream {$/;"	c	namespace:oneflow	inherits:PersistentInStream
final	persistence/persistent_out_stream.h	/^class PersistentOutStream final {$/;"	c	namespace:oneflow
final	persistence/posix/posix_file_system.h	/^class PosixFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
final	persistence/snapshot.h	/^class Snapshot final {$/;"	c	namespace:oneflow
final	persistence/windows/windows_file_system.h	/^class WindowsFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
final	register/blob.h	/^class Blob final {$/;"	c	namespace:oneflow
final	register/blob.h	/^class PieceStatus final {$/;"	c	namespace:oneflow
final	register/blob_desc.h	/^class BlobDesc final {$/;"	c	namespace:oneflow
final	register/register.h	/^class Regst final {$/;"	c	namespace:oneflow
final	register/register_desc.h	/^class RegstDesc final {$/;"	c	namespace:oneflow
final	register/register_manager.h	/^class RegstMgr final {$/;"	c	namespace:oneflow
final	thread/cpu_thread.h	/^class CpuThread final : public Thread {$/;"	c	namespace:oneflow	inherits:Thread
final	thread/gpu_thread.h	/^class GpuThread final : public Thread {$/;"	c	namespace:oneflow	inherits:Thread
final	thread/thread_manager.h	/^class ThreadMgr final {$/;"	c	namespace:oneflow
fname_	persistence/posix/posix_file_system.cpp	/^  std::string fname_;$/;"	m	class:oneflow::fs::PosixRandomAccessFile	file:	access:private
fname_	persistence/posix/posix_file_system.cpp	/^  std::string fname_;$/;"	m	class:oneflow::fs::PosixWritableFile	file:	access:private
fs	persistence/file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
fs	persistence/file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
fs	persistence/file_system_test.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
fs	persistence/hadoop/hadoop_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
fs	persistence/hadoop/hadoop_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
fs	persistence/posix/posix_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
fs	persistence/posix/posix_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
fs	persistence/windows/windows_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
fs	persistence/windows/windows_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
fs_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFS fs_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
fs_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFS fs_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
fw_node	graph/chain_node.h	/^  ForwardChainNode* fw_node() const { return fw_node_; }$/;"	f	class:oneflow::final	access:public	signature:() const
fw_node_	graph/chain_node.h	/^  ForwardChainNode* fw_node_;$/;"	m	class:oneflow::final	access:private
g_method_name	control/ctrl_service.cpp	/^const char* g_method_name[] = {$/;"	m	namespace:oneflow::__anon37	file:
gfs	persistence/file_system.cpp	/^  FileSystem* gfs;$/;"	m	struct:oneflow::fs::GlobalFSConstructor	file:	access:public
grpc_server_	control/ctrl_server.h	/^  std::unique_ptr<grpc::Server> grpc_server_;$/;"	m	class:oneflow::final	access:private
grpc_service_	control/ctrl_server.h	/^  std::unique_ptr<CtrlService::AsyncService> grpc_service_;$/;"	m	class:oneflow::final	access:private
hadoopReadZero	persistence/hadoop/hdfs.h	/^struct hadoopRzBuffer *hadoopReadZero(hdfsFile file,$/;"	p	signature:(hdfsFile file, struct hadoopRzOptions *opts, int32_t maxLength)
hadoopRzBuffer	persistence/hadoop/hdfs.h	/^struct hadoopRzBuffer;$/;"	x
hadoopRzBufferFree	persistence/hadoop/hdfs.h	/^void hadoopRzBufferFree(hdfsFile file, struct hadoopRzBuffer *buffer);$/;"	p	signature:(hdfsFile file, struct hadoopRzBuffer *buffer)
hadoopRzBufferGet	persistence/hadoop/hdfs.h	/^const void *hadoopRzBufferGet(const struct hadoopRzBuffer *buffer);$/;"	p	signature:(const struct hadoopRzBuffer *buffer)
hadoopRzBufferLength	persistence/hadoop/hdfs.h	/^int32_t hadoopRzBufferLength(const struct hadoopRzBuffer *buffer);$/;"	p	signature:(const struct hadoopRzBuffer *buffer)
hadoopRzOptions	persistence/hadoop/hdfs.h	/^struct hadoopRzOptions;$/;"	x
hadoopRzOptionsAlloc	persistence/hadoop/hdfs.h	/^struct hadoopRzOptions *hadoopRzOptionsAlloc(void);$/;"	p	signature:(void)
hadoopRzOptionsFree	persistence/hadoop/hdfs.h	/^void hadoopRzOptionsFree(struct hadoopRzOptions *opts);$/;"	p	signature:(struct hadoopRzOptions *opts)
hadoopRzOptionsSetByteBufferPool	persistence/hadoop/hdfs.h	/^int hadoopRzOptionsSetByteBufferPool(struct hadoopRzOptions *opts,$/;"	p	signature:(struct hadoopRzOptions *opts, const char *className)
hadoopRzOptionsSetSkipChecksum	persistence/hadoop/hdfs.h	/^int hadoopRzOptionsSetSkipChecksum(struct hadoopRzOptions *opts, int skip);$/;"	p	signature:(struct hadoopRzOptions *opts, int skip)
handle_	persistence/hadoop/hadoop_file_system.h	/^  void* handle_ = nullptr;$/;"	m	class:oneflow::fs::LibHDFS	access:private
has_data_id	register/blob.h	/^  bool has_data_id() const { return blob_desc_->has_data_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
has_data_id	register/blob_desc.h	/^  bool has_data_id() const { return has_data_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
has_data_id_	register/blob_desc.h	/^  bool has_data_id_;$/;"	m	class:oneflow::final	access:private
hdfsAvailable	persistence/hadoop/hdfs.h	/^int hdfsAvailable(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsBuilder	persistence/hadoop/hdfs.h	/^struct hdfsBuilder;$/;"	x
hdfsBuilderConfSetStr	persistence/hadoop/hdfs.h	/^int hdfsBuilderConfSetStr(struct hdfsBuilder *bld, const char *key,$/;"	p	signature:(struct hdfsBuilder *bld, const char *key, const char *val)
hdfsBuilderConnect	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFS(hdfsBuilder*)> hdfsBuilderConnect;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsBuilderConnect	persistence/hadoop/hdfs.h	/^hdfsFS hdfsBuilderConnect(struct hdfsBuilder *bld);$/;"	p	signature:(struct hdfsBuilder *bld)
hdfsBuilderSetForceNewInstance	persistence/hadoop/hdfs.h	/^void hdfsBuilderSetForceNewInstance(struct hdfsBuilder *bld);$/;"	p	signature:(struct hdfsBuilder *bld)
hdfsBuilderSetKerbTicketCachePath	persistence/hadoop/hadoop_file_system.h	/^      hdfsBuilderSetKerbTicketCachePath;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsBuilderSetKerbTicketCachePath	persistence/hadoop/hdfs.h	/^void hdfsBuilderSetKerbTicketCachePath(struct hdfsBuilder *bld,$/;"	p	signature:(struct hdfsBuilder *bld, const char *kerbTicketCachePath)
hdfsBuilderSetNameNode	persistence/hadoop/hadoop_file_system.h	/^  std::function<void(hdfsBuilder*, const char*)> hdfsBuilderSetNameNode;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsBuilderSetNameNode	persistence/hadoop/hdfs.h	/^void hdfsBuilderSetNameNode(struct hdfsBuilder *bld, const char *nn);$/;"	p	signature:(struct hdfsBuilder *bld, const char *nn)
hdfsBuilderSetNameNodePort	persistence/hadoop/hdfs.h	/^void hdfsBuilderSetNameNodePort(struct hdfsBuilder *bld, tPort port);$/;"	p	signature:(struct hdfsBuilder *bld, tPort port)
hdfsBuilderSetUserName	persistence/hadoop/hdfs.h	/^void hdfsBuilderSetUserName(struct hdfsBuilder *bld, const char *userName);$/;"	p	signature:(struct hdfsBuilder *bld, const char *userName)
hdfsChmod	persistence/hadoop/hdfs.h	/^int hdfsChmod(hdfsFS fs, const char *path, short mode);$/;"	p	signature:(hdfsFS fs, const char *path, short mode)
hdfsChown	persistence/hadoop/hdfs.h	/^int hdfsChown(hdfsFS fs, const char *path, const char *owner,$/;"	p	signature:(hdfsFS fs, const char *path, const char *owner, const char *group)
hdfsCloseFile	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsCloseFile;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsCloseFile	persistence/hadoop/hdfs.h	/^int hdfsCloseFile(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsConfGetInt	persistence/hadoop/hdfs.h	/^int hdfsConfGetInt(const char *key, int32_t *val);$/;"	p	signature:(const char *key, int32_t *val)
hdfsConfGetStr	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(const char*, char**)> hdfsConfGetStr;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsConfGetStr	persistence/hadoop/hdfs.h	/^int hdfsConfGetStr(const char *key, char **val);$/;"	p	signature:(const char *key, char **val)
hdfsConfStrFree	persistence/hadoop/hdfs.h	/^void hdfsConfStrFree(char *val);$/;"	p	signature:(char *val)
hdfsConnect	persistence/hadoop/hdfs.h	/^hdfsFS hdfsConnect(const char *nn, tPort port);$/;"	p	signature:(const char *nn, tPort port)
hdfsConnectAsUser	persistence/hadoop/hdfs.h	/^hdfsFS hdfsConnectAsUser(const char *nn, tPort port, const char *user);$/;"	p	signature:(const char *nn, tPort port, const char *user)
hdfsConnectAsUserNewInstance	persistence/hadoop/hdfs.h	/^hdfsFS hdfsConnectAsUserNewInstance(const char *nn, tPort port,$/;"	p	signature:(const char *nn, tPort port, const char *user)
hdfsConnectNewInstance	persistence/hadoop/hdfs.h	/^hdfsFS hdfsConnectNewInstance(const char *nn, tPort port);$/;"	p	signature:(const char *nn, tPort port)
hdfsCopy	persistence/hadoop/hdfs.h	/^int hdfsCopy(hdfsFS srcFS, const char *src, hdfsFS dstFS, const char *dst);$/;"	p	signature:(hdfsFS srcFS, const char *src, hdfsFS dstFS, const char *dst)
hdfsCreateDirectory	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*)> hdfsCreateDirectory;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsCreateDirectory	persistence/hadoop/hdfs.h	/^int hdfsCreateDirectory(hdfsFS fs, const char *path);$/;"	p	signature:(hdfsFS fs, const char *path)
hdfsDelete	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*, int recursive)> hdfsDelete;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsDelete	persistence/hadoop/hdfs.h	/^int hdfsDelete(hdfsFS fs, const char *path, int recursive);$/;"	p	signature:(hdfsFS fs, const char *path, int recursive)
hdfsDisconnect	persistence/hadoop/hdfs.h	/^int hdfsDisconnect(hdfsFS fs);$/;"	p	signature:(hdfsFS fs)
hdfsExists	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*)> hdfsExists;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsExists	persistence/hadoop/hdfs.h	/^int hdfsExists(hdfsFS fs, const char *path);$/;"	p	signature:(hdfsFS fs, const char *path)
hdfsFS	persistence/hadoop/hadoop_file_system.h	/^typedef hdfs_internal* hdfsFS;$/;"	t
hdfsFS	persistence/hadoop/hdfs.h	/^typedef struct hdfs_internal *hdfsFS;$/;"	t	typeref:struct:hdfs_internal
hdfsFile	persistence/hadoop/hdfs.h	/^typedef struct hdfsFile_internal *hdfsFile;$/;"	t	typeref:struct:hdfsFile_internal
hdfsFileClearReadStatistics	persistence/hadoop/hdfs.h	/^int hdfsFileClearReadStatistics(hdfsFile file);$/;"	p	signature:(hdfsFile file)
hdfsFileFreeReadStatistics	persistence/hadoop/hdfs.h	/^void hdfsFileFreeReadStatistics(struct hdfsReadStatistics *stats);$/;"	p	signature:(struct hdfsReadStatistics *stats)
hdfsFileGetReadStatistics	persistence/hadoop/hdfs.h	/^int hdfsFileGetReadStatistics(hdfsFile file, struct hdfsReadStatistics **stats);$/;"	p	signature:(hdfsFile file, struct hdfsReadStatistics **stats)
hdfsFileInfo	persistence/hadoop/hdfs.h	/^} hdfsFileInfo;$/;"	t	typeref:struct:__anon40
hdfsFileIsEncrypted	persistence/hadoop/hdfs.h	/^int hdfsFileIsEncrypted(hdfsFileInfo *hdfsFileInfo);$/;"	p	signature:(hdfsFileInfo *hdfsFileInfo)
hdfsFileIsOpenForRead	persistence/hadoop/hdfs.h	/^int hdfsFileIsOpenForRead(hdfsFile file);$/;"	p	signature:(hdfsFile file)
hdfsFileIsOpenForWrite	persistence/hadoop/hdfs.h	/^int hdfsFileIsOpenForWrite(hdfsFile file);$/;"	p	signature:(hdfsFile file)
hdfsFile_internal	persistence/hadoop/hdfs.h	/^struct hdfsFile_internal;$/;"	x
hdfsFlush	persistence/hadoop/hdfs.h	/^int hdfsFlush(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsFreeBuilder	persistence/hadoop/hdfs.h	/^void hdfsFreeBuilder(struct hdfsBuilder *bld);$/;"	p	signature:(struct hdfsBuilder *bld)
hdfsFreeFileInfo	persistence/hadoop/hadoop_file_system.h	/^  std::function<void(hdfsFileInfo*, int)> hdfsFreeFileInfo;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsFreeFileInfo	persistence/hadoop/hdfs.h	/^void hdfsFreeFileInfo(hdfsFileInfo *hdfsFileInfo, int numEntries);$/;"	p	signature:(hdfsFileInfo *hdfsFileInfo, int numEntries)
hdfsFreeHosts	persistence/hadoop/hdfs.h	/^void hdfsFreeHosts(char ***blockHosts);$/;"	p	signature:(char ***blockHosts)
hdfsGetCapacity	persistence/hadoop/hdfs.h	/^tOffset hdfsGetCapacity(hdfsFS fs);$/;"	p	signature:(hdfsFS fs)
hdfsGetDefaultBlockSize	persistence/hadoop/hdfs.h	/^tOffset hdfsGetDefaultBlockSize(hdfsFS fs);$/;"	p	signature:(hdfsFS fs)
hdfsGetDefaultBlockSizeAtPath	persistence/hadoop/hdfs.h	/^tOffset hdfsGetDefaultBlockSizeAtPath(hdfsFS fs, const char *path);$/;"	p	signature:(hdfsFS fs, const char *path)
hdfsGetHosts	persistence/hadoop/hdfs.h	/^char ***hdfsGetHosts(hdfsFS fs, const char *path, tOffset start,$/;"	p	signature:(hdfsFS fs, const char *path, tOffset start, tOffset length)
hdfsGetPathInfo	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFileInfo*(hdfsFS, const char*)> hdfsGetPathInfo;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsGetPathInfo	persistence/hadoop/hdfs.h	/^hdfsFileInfo *hdfsGetPathInfo(hdfsFS fs, const char *path);$/;"	p	signature:(hdfsFS fs, const char *path)
hdfsGetUsed	persistence/hadoop/hdfs.h	/^tOffset hdfsGetUsed(hdfsFS fs);$/;"	p	signature:(hdfsFS fs)
hdfsGetWorkingDirectory	persistence/hadoop/hdfs.h	/^char *hdfsGetWorkingDirectory(hdfsFS fs, char *buffer, size_t bufferSize);$/;"	p	signature:(hdfsFS fs, char *buffer, size_t bufferSize)
hdfsHFlush	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsHFlush;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsHFlush	persistence/hadoop/hdfs.h	/^int hdfsHFlush(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsHSync	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsHSync;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsHSync	persistence/hadoop/hdfs.h	/^int hdfsHSync(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsListDirectory	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFileInfo*(hdfsFS, const char*, int*)> hdfsListDirectory;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsListDirectory	persistence/hadoop/hdfs.h	/^hdfsFileInfo *hdfsListDirectory(hdfsFS fs, const char *path, int *numEntries);$/;"	p	signature:(hdfsFS fs, const char *path, int *numEntries)
hdfsMove	persistence/hadoop/hdfs.h	/^int hdfsMove(hdfsFS srcFS, const char *src, hdfsFS dstFS, const char *dst);$/;"	p	signature:(hdfsFS srcFS, const char *src, hdfsFS dstFS, const char *dst)
hdfsNewBuilder	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsBuilder*()> hdfsNewBuilder;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsNewBuilder	persistence/hadoop/hdfs.h	/^struct hdfsBuilder *hdfsNewBuilder(void);$/;"	p	signature:(void)
hdfsOpenFile	persistence/hadoop/hadoop_file_system.h	/^      hdfsOpenFile;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsOpenFile	persistence/hadoop/hdfs.h	/^hdfsFile hdfsOpenFile(hdfsFS fs, const char *path, int flags, int bufferSize,$/;"	p	signature:(hdfsFS fs, const char *path, int flags, int bufferSize, short replication, tSize blocksize)
hdfsPread	persistence/hadoop/hadoop_file_system.h	/^  std::function<tSize(hdfsFS, hdfsFile, tOffset, void*, tSize)> hdfsPread;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsPread	persistence/hadoop/hdfs.h	/^tSize hdfsPread(hdfsFS fs, hdfsFile file, tOffset position, void *buffer,$/;"	p	signature:(hdfsFS fs, hdfsFile file, tOffset position, void *buffer, tSize length)
hdfsRead	persistence/hadoop/hdfs.h	/^tSize hdfsRead(hdfsFS fs, hdfsFile file, void *buffer, tSize length);$/;"	p	signature:(hdfsFS fs, hdfsFile file, void *buffer, tSize length)
hdfsReadStatistics	persistence/hadoop/hdfs.h	/^struct hdfsReadStatistics {$/;"	s
hdfsReadStatistics::totalBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
hdfsReadStatistics::totalLocalBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalLocalBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
hdfsReadStatistics::totalShortCircuitBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalShortCircuitBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
hdfsReadStatistics::totalZeroCopyBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalZeroCopyBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
hdfsReadStatisticsGetRemoteBytesRead	persistence/hadoop/hdfs.h	/^int64_t hdfsReadStatisticsGetRemoteBytesRead($/;"	p	signature:( const struct hdfsReadStatistics *stats)
hdfsRename	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*, const char*)> hdfsRename;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsRename	persistence/hadoop/hdfs.h	/^int hdfsRename(hdfsFS fs, const char *oldPath, const char *newPath);$/;"	p	signature:(hdfsFS fs, const char *oldPath, const char *newPath)
hdfsSeek	persistence/hadoop/hdfs.h	/^int hdfsSeek(hdfsFS fs, hdfsFile file, tOffset desiredPos);$/;"	p	signature:(hdfsFS fs, hdfsFile file, tOffset desiredPos)
hdfsSetReplication	persistence/hadoop/hdfs.h	/^int hdfsSetReplication(hdfsFS fs, const char *path, int16_t replication);$/;"	p	signature:(hdfsFS fs, const char *path, int16_t replication)
hdfsSetWorkingDirectory	persistence/hadoop/hdfs.h	/^int hdfsSetWorkingDirectory(hdfsFS fs, const char *path);$/;"	p	signature:(hdfsFS fs, const char *path)
hdfsTell	persistence/hadoop/hdfs.h	/^tOffset hdfsTell(hdfsFS fs, hdfsFile file);$/;"	p	signature:(hdfsFS fs, hdfsFile file)
hdfsTruncateFile	persistence/hadoop/hdfs.h	/^int hdfsTruncateFile(hdfsFS fs, const char *path, tOffset newlength);$/;"	p	signature:(hdfsFS fs, const char *path, tOffset newlength)
hdfsUnbufferFile	persistence/hadoop/hdfs.h	/^int hdfsUnbufferFile(hdfsFile file);$/;"	p	signature:(hdfsFile file)
hdfsUtime	persistence/hadoop/hdfs.h	/^int hdfsUtime(hdfsFS fs, const char *path, tTime mtime, tTime atime);$/;"	p	signature:(hdfsFS fs, const char *path, tTime mtime, tTime atime)
hdfsWrite	persistence/hadoop/hadoop_file_system.h	/^  std::function<tSize(hdfsFS, hdfsFile, const void*, tSize)> hdfsWrite;$/;"	m	class:oneflow::fs::LibHDFS	access:public
hdfsWrite	persistence/hadoop/hdfs.h	/^tSize hdfsWrite(hdfsFS fs, hdfsFile file, const void *buffer, tSize length);$/;"	p	signature:(hdfsFS fs, hdfsFile file, const void *buffer, tSize length)
hdfs_	persistence/hadoop/hadoop_file_system.cpp	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
hdfs_	persistence/hadoop/hadoop_file_system.cpp	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
hdfs_	persistence/hadoop/hadoop_file_system.h	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::final	access:private
hdfs_filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string hdfs_filename_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
hdfs_internal	persistence/hadoop/hadoop_file_system.h	/^struct hdfs_internal;$/;"	x
hdfs_internal	persistence/hadoop/hdfs.h	/^struct hdfs_internal;$/;"	x
hfile_	persistence/windows/windows_file_system.cpp	/^  HANDLE hfile_;$/;"	m	class:oneflow::fs::__anon41::WindowsRandomAccessFile	file:	access:private
hfile_	persistence/windows/windows_file_system.cpp	/^  HANDLE hfile_;$/;"	m	class:oneflow::fs::__anon41::WindowsWritableFile	file:	access:private
ibn2lbn	operator/boxing_op.cpp	/^std::string BoxingOp::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::BoxingOp	signature:(const std::string& input_bn) const
ibn2lbn	operator/copy_comm_net_op.cpp	/^std::string CopyCommNetOp::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::CopyCommNetOp	signature:(const std::string& input_bn) const
ibn2lbn	operator/operator.cpp	/^std::string Operator::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& input_bn) const
ibn2lbn	operator/operator.h	/^  virtual std::string ibn2lbn(const std::string& input_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& input_bn) const
ibn2lbn_	operator/concat_op.h	/^  HashMap<std::string, std::string> ibn2lbn_;$/;"	m	class:oneflow::final	access:private
ibn2lbn_	operator/print_op.h	/^  HashMap<std::string, std::string> ibn2lbn_;$/;"	m	class:oneflow::final	access:private
ibn_0_	kernel/boxing_kernel.h	/^  PbRpf<std::string> ibn_0_;$/;"	m	class:oneflow::final	access:private
id2actor_ptr_	thread/thread.h	/^  HashMap<int64_t, std::unique_ptr<Actor>> id2actor_ptr_;$/;"	m	class:oneflow::Thread	access:private
id2task_	thread/thread.h	/^  HashMap<int64_t, TaskProto> id2task_;$/;"	m	class:oneflow::Thread	access:private
id2task_mtx_	thread/thread.h	/^  std::mutex id2task_mtx_;$/;"	m	class:oneflow::Thread	access:private
in_edges	graph/node.h	/^  const std::unordered_set<EdgeType*>& in_edges() const { return in_edges_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
in_edges_	graph/node.h	/^  HashSet<EdgeType*> in_edges_;$/;"	m	class:oneflow::Node	access:private
in_regst_	actor/sink_compute_actor.h	/^  Regst* in_regst_;$/;"	m	class:oneflow::SinkCompActor	access:private
in_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t in_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
in_stream_	kernel/data_loader_kernel.h	/^  std::unique_ptr<PersistentInStream> in_stream_;$/;"	m	class:oneflow::final	access:private
init_remaining_cnt_	actor/model_update_compute_actor.h	/^  int8_t init_remaining_cnt_;$/;"	m	class:oneflow::final	access:private
input_bns_	operator/operator.h	/^  std::vector<std::string> input_bns_;$/;"	m	class:oneflow::Operator	access:private
input_diff_bns_	operator/operator.h	/^  std::vector<std::string> input_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
internal	common/str_util.cpp	/^namespace internal {$/;"	n	namespace:oneflow	file:
internal	common/str_util.h	/^namespace internal {$/;"	n	namespace:oneflow
internal	persistence/hadoop/hadoop_file_system.cpp	/^namespace internal {$/;"	n	namespace:oneflow::fs	file:
io_handlers_	comm_network/epoll/io_event_poller.h	/^  std::forward_list<IOHandler*> io_handlers_;$/;"	m	class:oneflow::final	access:private
is_eof_	actor/source_compute_actor.h	/^  bool is_eof_;$/;"	m	class:oneflow::final	access:private
is_eord_	actor/boxing_actor.h	/^  bool is_eord_;$/;"	m	class:oneflow::final	access:private
is_experiment_phase	job/runtime_context.h	/^  bool is_experiment_phase() const { return is_experiment_phase_; }$/;"	f	class:oneflow::final	access:public	signature:() const
is_experiment_phase_	job/runtime_context.h	/^  bool is_experiment_phase_;$/;"	m	class:oneflow::final	access:private
is_finished_in_cur_pid_	actor/rnn_boxing_actor.h	/^  HashMap<int64_t, bool> is_finished_in_cur_pid_;$/;"	m	class:oneflow::final	access:private
is_forward	register/register.h	/^  bool is_forward() const { return is_forward_; }$/;"	f	class:oneflow::final	access:public	signature:() const
is_forward_	register/register.h	/^  int is_forward_;$/;"	m	class:oneflow::final	access:private
is_in_eord_	actor/accumulate_compute_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
is_in_eord_	actor/copy_hd_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::final	access:private
is_in_eord_	actor/forward_compute_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::final	access:private
is_locked_	register/register_desc.h	/^  bool is_locked_;$/;"	m	class:oneflow::final	access:private
is_model_diff_acc_eord_	actor/model_update_compute_actor.h	/^  bool is_model_diff_acc_eord_;$/;"	m	class:oneflow::final	access:private
is_out_diff_eord_	actor/backward_compute_actor.h	/^  bool is_out_diff_eord_;$/;"	m	class:oneflow::final	access:private
is_receive_closed_	common/channel.h	/^  bool is_receive_closed_;$/;"	m	class:oneflow::final	access:private
is_send_closed_	common/channel.h	/^  bool is_send_closed_;$/;"	m	class:oneflow::final	access:private
job_conf	job/job_desc.h	/^  const JobConf& job_conf() const { return job_conf_; }$/;"	f	class:oneflow::final	access:public	signature:() const
job_conf_	job/job_desc.h	/^  JobConf job_conf_;$/;"	m	class:oneflow::final	access:private
kBeforeHandleRequest	control/ctrl_call.h	/^  enum class Status { kBeforeHandleRequest, kBeforeDelete };$/;"	m	class:oneflow::final::Status	access:private
kCtrlMethodNum	control/ctrl_service.h	/^const int32_t kCtrlMethodNum = OF_PP_INTERNAL_SEQ_SIZE(CTRL_METHOD_SEQ);$/;"	m	namespace:oneflow
kCudaMaxBlocksNum	device/cuda_util.h	/^const int32_t kCudaMaxBlocksNum = 4096;$/;"	m	namespace:oneflow
kCudaThreadsNumPerBlock	device/cuda_util.h	/^const int32_t kCudaThreadsNumPerBlock = 512;$/;"	m	namespace:oneflow
kEordMsg	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	m	class:oneflow::ActorMsgType	access:private
kInitModel	actor/actor_message.h	/^  kInitModel = 0,     \/\/ MdUpdt Actor$/;"	m	class:oneflow::ActorCmd	access:private
kMaxRegisterNum	register/register_desc.h	/^const int32_t kMaxRegisterNum = std::numeric_limits<int32_t>::max();$/;"	m	namespace:oneflow
kNullDataId	job/keyword.cpp	/^const char* kNullDataId = ONEFLOW_INTERNAL_PREFIX "NullDataId";$/;"	m	namespace:oneflow	file:
kObjectKindDirectory	persistence/hadoop/hdfs.h	/^  kObjectKindDirectory = 'D',$/;"	e	enum:tObjectKind
kObjectKindFile	persistence/hadoop/hdfs.h	/^  kObjectKindFile = 'F',$/;"	e	enum:tObjectKind
kPackedBlobName	job/keyword.cpp	/^const char* kPackedBlobName = ONEFLOW_INTERNAL_PREFIX "PackedBlobName";$/;"	m	namespace:oneflow	file:
kRegstMsg	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	m	class:oneflow::ActorMsgType	access:private
kSendInitialModel	actor/actor_message.h	/^  kSendInitialModel,  \/\/ MdUpdt Actor$/;"	m	class:oneflow::ActorCmd	access:private
kStart	actor/actor_message.h	/^  kStart,             \/\/ Source Actor$/;"	m	class:oneflow::ActorCmd	access:private
kStopThread	actor/actor_message.h	/^  kStopThread,$/;"	m	class:oneflow::ActorCmd	access:private
kernel	actor/actor.h	/^    std::unique_ptr<const Kernel> kernel;$/;"	m	struct:oneflow::Actor::ExecKernel	access:public
kernel_conf	kernel/kernel.h	/^  const KernelConf& kernel_conf() const { return kernel_conf_; }$/;"	f	class:oneflow::Kernel	access:protected	signature:() const
kernel_conf_	kernel/kernel.h	/^  KernelConf kernel_conf_;$/;"	m	class:oneflow::Kernel	access:private
kv_	control/ctrl_server.h	/^  HashMap<std::string, std::string> kv_;$/;"	m	class:oneflow::final	access:private
lbn	graph/exec_graph.h	/^  const std::string& lbn() const { return lbn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
lbn2blob_	register/register.h	/^  HashMap<std::string, std::unique_ptr<Blob>> lbn2blob_;$/;"	m	class:oneflow::final	access:private
lbn2blob_desc_	register/register_desc.h	/^  HashMap<std::string, std::unique_ptr<BlobDesc>> lbn2blob_desc_;$/;"	m	class:oneflow::final	access:private
lbn2blob_desc_	register/runtime_register_desc.h	/^  std::unordered_map<std::string, std::unique_ptr<BlobDesc>> lbn2blob_desc_;$/;"	m	class:oneflow::RtRegstDesc	access:private
lbn2producer_	graph/logical_graph.h	/^  HashMap<std::string, std::weak_ptr<const Operator>> lbn2producer_;$/;"	m	class:oneflow::final	access:private
lbn_	graph/exec_graph.h	/^  std::string lbn_;$/;"	m	class:oneflow::final	access:private
log_dir	common/util.h	/^DECLARE_string(log_dir);$/;"	v
loop_thread_	control/ctrl_server.h	/^  std::thread loop_thread_;$/;"	m	class:oneflow::final	access:private
mBlockSize	persistence/hadoop/hdfs.h	/^  tOffset mBlockSize; \/* the block size for the file *\/$/;"	m	struct:__anon40	access:public
mGroup	persistence/hadoop/hdfs.h	/^  char *mGroup;       \/* the group associated with the file *\/$/;"	m	struct:__anon40	access:public
mKind	persistence/hadoop/hdfs.h	/^  tObjectKind mKind;  \/* file or directory *\/$/;"	m	struct:__anon40	access:public
mLastAccess	persistence/hadoop/hdfs.h	/^  tTime mLastAccess;  \/* the last access time for the file in seconds *\/$/;"	m	struct:__anon40	access:public
mLastMod	persistence/hadoop/hdfs.h	/^  tTime mLastMod;     \/* the last modification time for the file in seconds *\/$/;"	m	struct:__anon40	access:public
mName	persistence/hadoop/hdfs.h	/^  char *mName;        \/* the name of the file *\/$/;"	m	struct:__anon40	access:public
mOwner	persistence/hadoop/hdfs.h	/^  char *mOwner;       \/* the owner of the file *\/$/;"	m	struct:__anon40	access:public
mPermissions	persistence/hadoop/hdfs.h	/^  short mPermissions; \/* the permissions associated with the file *\/$/;"	m	struct:__anon40	access:public
mReplication	persistence/hadoop/hdfs.h	/^  short mReplication; \/* the count of replicas *\/$/;"	m	struct:__anon40	access:public
mSize	persistence/hadoop/hdfs.h	/^  tOffset mSize;      \/* the size of the file in bytes *\/$/;"	m	struct:__anon40	access:public
machine_id	actor/actor.cpp	/^int64_t Actor::machine_id() const {$/;"	f	class:oneflow::Actor	signature:() const
machine_id	actor/actor.h	/^  int64_t machine_id() const;$/;"	p	class:oneflow::Actor	access:public	signature:() const
machine_id	graph/task_node.h	/^  int64_t machine_id() const { return machine_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
machine_id2machine_name_	job/id_manager.h	/^  HashMap<int64_t, std::string> machine_id2machine_name_;$/;"	m	class:oneflow::final	access:private
machine_id2sockfd_	comm_network/epoll/epoll_comm_network.h	/^  std::vector<int> machine_id2sockfd_;$/;"	m	class:oneflow::final	access:private
machine_id2sorted_dev_phy_ids_	job/parallel_desc.h	/^  HashMap<int64_t, std::vector<int64_t>> machine_id2sorted_dev_phy_ids_;$/;"	m	class:oneflow::ParallelDesc	access:private
machine_id_	graph/task_node.h	/^  int64_t machine_id_;$/;"	m	class:oneflow::TaskNode	access:private
machine_id_bit_num_	job/id_manager.h	/^  static const int64_t machine_id_bit_num_ = 16;$/;"	m	class:oneflow::final	access:private
machine_name2machine_id_	job/id_manager.h	/^  HashMap<std::string, int64_t> machine_name2machine_id_;$/;"	m	class:oneflow::final	access:private
machine_num_	job/id_manager.h	/^  int32_t machine_num_;$/;"	m	class:oneflow::final	access:private
main	job/oneflow.cpp	/^int main(int argc, char** argv) {$/;"	f	signature:(int argc, char** argv)
max_acc_cnt_	actor/accumulate_compute_actor.h	/^  int32_t max_acc_cnt_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
max_col_id	register/blob.h	/^  int64_t max_col_id() const { return max_col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
max_col_id_	register/blob.h	/^  int64_t max_col_id_;$/;"	m	class:oneflow::final	access:private
max_event_num_	comm_network/epoll/io_event_poller.cpp	/^const int IOEventPoller::max_event_num_ = 32;$/;"	m	class:oneflow::IOEventPoller	file:
max_event_num_	comm_network/epoll/io_event_poller.h	/^  static const int max_event_num_;$/;"	m	class:oneflow::final	access:private
max_register_num	register/register_desc.h	/^  int32_t max_register_num() const { return max_register_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
max_register_num_	register/register_desc.h	/^  int32_t max_register_num_;$/;"	m	class:oneflow::final	access:private
max_retry_num	control/ctrl_client.cpp	/^const int32_t max_retry_num = 60;$/;"	m	namespace:oneflow::__anon38	file:
mbn2lbn	operator/operator.cpp	/^std::string Operator::mbn2lbn(const std::string& model_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& model_bn) const
mbn2lbn	operator/operator.h	/^  virtual std::string mbn2lbn(const std::string& model_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& model_bn) const
mem_case	register/runtime_register_desc.h	/^  const MemoryCase& mem_case() const { return mem_case_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
mem_case_	register/register_desc.h	/^  MemoryCase mem_case_;$/;"	m	class:oneflow::final	access:private
mem_case_	register/runtime_register_desc.h	/^  MemoryCase mem_case_;$/;"	m	class:oneflow::RtRegstDesc	access:private
mem_desc_mtx_	comm_network/epoll/epoll_comm_network.h	/^  std::mutex mem_desc_mtx_;$/;"	m	class:oneflow::final	access:private
mem_descs_	comm_network/epoll/epoll_comm_network.h	/^  std::list<SocketMemDesc*> mem_descs_;$/;"	m	class:oneflow::final	access:private
mem_ptr	comm_network/epoll/socket_memory_desc.h	/^  void* mem_ptr;$/;"	m	struct:oneflow::SocketMemDesc	access:public
memory_ptr	register/blob.h	/^  const void* memory_ptr() const {$/;"	f	class:oneflow::final	access:public	signature:() const
min_register_num	register/register_desc.h	/^  int32_t min_register_num() const { return min_register_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
min_register_num_	register/register_desc.h	/^  int32_t min_register_num_;$/;"	m	class:oneflow::final	access:private
model_bns_	operator/operator.h	/^  std::vector<std::string> model_bns_;$/;"	m	class:oneflow::Operator	access:private
model_diff_bns_	operator/operator.h	/^  std::vector<std::string> model_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
model_regst_	actor/forward_compute_actor.h	/^  Regst* model_regst_;$/;"	m	class:oneflow::final	access:private
model_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_regst_desc_id_	actor/model_update_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_save_snapshots_path_	persistence/snapshot_manager.h	/^  std::string model_save_snapshots_path_;$/;"	m	class:oneflow::SnapshotMgr	access:private
model_tmp_bns_	operator/operator.h	/^  std::vector<std::string> model_tmp_bns_;$/;"	m	class:oneflow::Operator	access:private
model_tmp_regst_	actor/forward_compute_actor.h	/^  Regst* model_tmp_regst_;$/;"	m	class:oneflow::final	access:private
model_tmp_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_tmp_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_tmp_regst_desc_id_	actor/model_update_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
model_version_id	register/register.h	/^  int64_t model_version_id() const { return model_version_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
model_version_id_	register/register.h	/^  int64_t model_version_id_;$/;"	m	class:oneflow::final	access:private
msg_channel_	thread/thread.h	/^  Channel<ActorMsg> msg_channel_;$/;"	m	class:oneflow::Thread	access:private
msg_handler_	actor/actor.h	/^  MsgHandler msg_handler_;$/;"	m	class:oneflow::Actor	access:private
msg_type	actor/actor_message.h	/^  ActorMsgType msg_type() const { return msg_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
msg_type	comm_network/epoll/socket_message.h	/^  SocketMsgType msg_type;$/;"	m	struct:oneflow::SocketMsg	access:public
msg_type_	actor/actor_message.h	/^  ActorMsgType msg_type_;$/;"	m	class:oneflow::final	access:private
mtbn2lbn	operator/operator.cpp	/^std::string Operator::mtbn2lbn(const std::string& model_tmp_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& model_tmp_bn) const
mtbn2lbn	operator/operator.h	/^  virtual std::string mtbn2lbn(const std::string& model_tmp_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& model_tmp_bn) const
mtx_	common/blocking_counter.h	/^  std::mutex mtx_;$/;"	m	class:oneflow::final	access:private
mu_	persistence/hadoop/hadoop_file_system.cpp	/^  mutable std::mutex mu_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
mut_actor_thread	thread/thread.h	/^  std::thread& mut_actor_thread() { return actor_thread_; }$/;"	f	class:oneflow::Thread	access:protected	signature:()
mut_begin	common/range.h	/^  int64_t& mut_begin() { return begin_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_data_id	register/blob.h	/^  char* mut_data_id() { return mut_data_id(0); }$/;"	f	class:oneflow::final	access:public	signature:()
mut_data_id	register/blob.h	/^  char* mut_data_id(int32_t no) { return const_cast<char*>(data_id(no)); }$/;"	f	class:oneflow::final	access:public	signature:(int32_t no)
mut_device_ctx	actor/actor.h	/^  std::unique_ptr<DeviceCtx>& mut_device_ctx() { return device_ctx_; }$/;"	f	class:oneflow::Actor	access:protected	signature:()
mut_dptr	register/blob.h	/^  T* mut_dptr() {$/;"	f	class:oneflow::final	access:public	signature:()
mut_dst_bn	graph/exec_graph.h	/^  std::string& mut_dst_bn() { return dst_bn_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_end	common/range.h	/^  int64_t& mut_end() { return end_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_exec_gph	graph/task_node.h	/^  ExecGraph& mut_exec_gph() { return exec_gph_; }$/;"	f	class:oneflow::TaskNode	access:protected	signature:()
mut_memory_ptr	register/blob.h	/^  void* mut_memory_ptr() { return const_cast<void*>(memory_ptr()); }$/;"	f	class:oneflow::final	access:public	signature:()
mut_op	graph/exec_graph.h	/^  std::shared_ptr<const Operator>& mut_op() { return op_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_op	graph/logical_graph.h	/^  std::shared_ptr<Operator>& mut_op() { return op_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_op_conf	operator/operator.h	/^  OperatorConf& mut_op_conf() { return op_conf_; }$/;"	f	class:oneflow::Operator	access:protected	signature:()
mut_op_vec	graph/chain_node.h	/^  std::vector<std::shared_ptr<const Operator>>& mut_op_vec() { return op_vec_; }$/;"	f	class:oneflow::ChainNode	access:public	signature:()
mut_parallel_ctx	graph/compute_task_node.h	/^  ParallelContext* mut_parallel_ctx() { return &parallel_ctx_; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:()
mut_parallel_desc	graph/chain_node.cpp	/^std::shared_ptr<const ParallelDesc>& ChainNode::mut_parallel_desc() {$/;"	f	class:oneflow::ChainNode	signature:()
mut_parallel_desc	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc>& mut_parallel_desc();$/;"	p	class:oneflow::ChainNode	access:public	signature:()
mut_parallel_desc	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc>& mut_parallel_desc() {$/;"	f	class:oneflow::final	access:public	signature:()
mut_request	control/ctrl_call.h	/^  RequestMessageType* mut_request() { return &request_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_responder	control/ctrl_call.h	/^  grpc::ServerAsyncResponseWriter<ResponseMessageType>* mut_responder() {$/;"	f	class:oneflow::final	access:public	signature:()
mut_response	control/ctrl_call.h	/^  ResponseMessageType* mut_response() { return &response_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_server_ctx	control/ctrl_call.h	/^  grpc::ServerContext* mut_server_ctx() { return &server_ctx_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_shape	register/blob_desc.h	/^  Shape& mut_shape() { return shape_; }$/;"	f	class:oneflow::final	access:public	signature:()
mut_src_bn	graph/exec_graph.h	/^  std::string& mut_src_bn() { return src_bn_; }$/;"	f	class:oneflow::final	access:public	signature:()
mutex_	common/channel.h	/^  mutable std::mutex mutex_;$/;"	m	class:oneflow::final	access:private
name2lock_status_	control/ctrl_server.h	/^  HashMap<std::string, void*> name2lock_status_;$/;"	m	class:oneflow::final	access:private
name2regst_desc_id_	actor/actor.h	/^  HashMap<std::string, int64_t> name2regst_desc_id_;$/;"	m	class:oneflow::Actor	access:private
name_in_producer2regst_	graph/task_node.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> name_in_producer2regst_;$/;"	m	class:oneflow::final	access:private
namenode_	persistence/hadoop/hadoop_file_system.h	/^  std::string namenode_;$/;"	m	class:oneflow::fs::final	access:private
next_model_version_id_	actor/model_update_compute_actor.h	/^  int64_t next_model_version_id_;$/;"	m	class:oneflow::final	access:private
next_piece_id_	actor/accumulate_compute_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
next_piece_id_	actor/copy_comm_net_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::final	access:private
next_piece_id_	actor/source_compute_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::final	access:private
next_snapshot_id_	actor/model_save_compute_actor.h	/^  int64_t next_snapshot_id_;$/;"	m	class:oneflow::final	access:private
node_id	graph/node.h	/^  int64_t node_id() const { return node_id_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
node_id_	graph/node.h	/^  int64_t node_id_;$/;"	m	class:oneflow::Node	access:private
node_id_str	graph/node.h	/^  std::string node_id_str() const { return std::to_string(node_id_); }$/;"	f	class:oneflow::Node	access:public	signature:() const
node_num	graph/graph.h	/^  size_t node_num() const { return nodes_.size(); }$/;"	f	class:oneflow::Graph	access:public	signature:() const
nodes	graph/chain_graph.cpp	/^  std::vector<const LogicalNode*> nodes;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
nodes_	graph/graph.h	/^  std::vector<std::unique_ptr<NodeType>> nodes_;$/;"	m	class:oneflow::Graph	access:private
obn2lbn	operator/boxing_op.cpp	/^std::string BoxingOp::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::BoxingOp	signature:(const std::string& output_bn) const
obn2lbn	operator/copy_comm_net_op.cpp	/^std::string CopyCommNetOp::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::CopyCommNetOp	signature:(const std::string& output_bn) const
obn2lbn	operator/operator.cpp	/^std::string Operator::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& output_bn) const
obn2lbn	operator/operator.h	/^  virtual std::string obn2lbn(const std::string& output_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& output_bn) const
obn_0_	kernel/boxing_kernel.h	/^  PbRpf<std::string> obn_0_;$/;"	m	class:oneflow::final	access:private
of_make_unique	common/util.h	/^std::unique_ptr<T> of_make_unique(Args&&... args) {$/;"	f	namespace:oneflow	signature:(Args&&.... args)
oneflow	actor/accumulate_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/accumulate_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/act_event_logger.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/act_event_logger.h	/^namespace oneflow {$/;"	n
oneflow	actor/actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/actor_message.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/actor_message.h	/^namespace oneflow {$/;"	n
oneflow	actor/actor_message_bus.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/actor_message_bus.h	/^namespace oneflow {$/;"	n
oneflow	actor/backward_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/backward_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/boxing_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/boxing_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/copy_comm_net_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/copy_comm_net_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/copy_hd_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/copy_hd_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/forward_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/forward_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/loss_accumulate_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/loss_accumulate_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/loss_print_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/loss_print_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/model_diff_accumulate_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/model_diff_accumulate_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/model_save_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/model_save_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/model_update_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/model_update_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/print_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/print_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/rnn_boxing_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/rnn_boxing_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/sink_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/sink_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	actor/source_compute_actor.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	actor/source_compute_actor.h	/^namespace oneflow {$/;"	n
oneflow	blas/cblas_template.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	blas/cblas_template.h	/^namespace oneflow {$/;"	n
oneflow	blas/cublas_template.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/comm_network.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/comm_network.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/epoll_comm_network.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/epoll/epoll_comm_network.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/io_event_poller.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/epoll/io_event_poller.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/socket_helper.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/epoll/socket_helper.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/socket_memory_desc.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/socket_message.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/socket_read_helper.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/epoll/socket_read_helper.h	/^namespace oneflow {$/;"	n
oneflow	comm_network/epoll/socket_write_helper.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	comm_network/epoll/socket_write_helper.h	/^namespace oneflow {$/;"	n
oneflow	common/balanced_splitter.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/balanced_splitter.h	/^namespace oneflow {$/;"	n
oneflow	common/balanced_splitter_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/blocking_counter.h	/^namespace oneflow {$/;"	n
oneflow	common/channel.h	/^namespace oneflow {$/;"	n
oneflow	common/channel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/data_type.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/data_type.h	/^namespace oneflow {$/;"	n
oneflow	common/preprocessor_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/process_state.h	/^namespace oneflow {$/;"	n
oneflow	common/protobuf.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/protobuf.h	/^namespace oneflow {$/;"	n
oneflow	common/range.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/range.h	/^namespace oneflow {$/;"	n
oneflow	common/shape.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/shape.h	/^namespace oneflow {$/;"	n
oneflow	common/str_util.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/str_util.h	/^namespace oneflow {$/;"	n
oneflow	common/util.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	common/util.h	/^namespace oneflow {$/;"	n
oneflow	control/ctrl_call.h	/^namespace oneflow {$/;"	n
oneflow	control/ctrl_client.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	control/ctrl_client.h	/^namespace oneflow {$/;"	n
oneflow	control/ctrl_server.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	control/ctrl_server.h	/^namespace oneflow {$/;"	n
oneflow	control/ctrl_service.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	control/ctrl_service.h	/^namespace oneflow {$/;"	n
oneflow	device/cpu_device_context.h	/^namespace oneflow {$/;"	n
oneflow	device/cuda_device_context.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	device/cuda_device_context.h	/^namespace oneflow {$/;"	n
oneflow	device/cuda_stream_handle.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	device/cuda_stream_handle.h	/^namespace oneflow {$/;"	n
oneflow	device/cuda_util.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	device/cuda_util.h	/^namespace oneflow {$/;"	n
oneflow	device/device_context.h	/^namespace oneflow {$/;"	n
oneflow	graph/accumulate_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/accumulate_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/backward_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/backward_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/boxing_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/boxing_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/chain_graph.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/chain_graph.h	/^namespace oneflow {$/;"	n
oneflow	graph/chain_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/chain_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/copy_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/copy_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/exec_graph.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/exec_graph.h	/^namespace oneflow {$/;"	n
oneflow	graph/forward_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/forward_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/graph.h	/^namespace oneflow {$/;"	n
oneflow	graph/logical_graph.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/logical_graph.h	/^namespace oneflow {$/;"	n
oneflow	graph/loss_accumulate_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/loss_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/loss_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/loss_print_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/model_diff_accumulate_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/model_save_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/model_update_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/model_update_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/node.h	/^namespace oneflow {$/;"	n
oneflow	graph/print_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/sink_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/sink_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/source_compute_task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/source_compute_task_node.h	/^namespace oneflow {$/;"	n
oneflow	graph/task_graph.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/task_graph.h	/^namespace oneflow {$/;"	n
oneflow	graph/task_node.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	graph/task_node.h	/^namespace oneflow {$/;"	n
oneflow	job/compiler.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/compiler.h	/^namespace oneflow {$/;"	n
oneflow	job/id_manager.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/id_manager.h	/^namespace oneflow {$/;"	n
oneflow	job/id_manager_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/improver.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/improver.h	/^namespace oneflow {$/;"	n
oneflow	job/job_desc.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/job_desc.h	/^namespace oneflow {$/;"	n
oneflow	job/keyword.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/keyword.h	/^namespace oneflow {$/;"	n
oneflow	job/machine_context.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/machine_context.h	/^namespace oneflow {$/;"	n
oneflow	job/mock_job_desc.h	/^namespace oneflow {$/;"	n
oneflow	job/oneflow.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/parallel_desc.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/parallel_desc.h	/^namespace oneflow {$/;"	n
oneflow	job/runtime.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/runtime.h	/^namespace oneflow {$/;"	n
oneflow	job/runtime_context.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	job/runtime_context.h	/^namespace oneflow {$/;"	n
oneflow	kernel/accumulate_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/accumulate_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/accumulate_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/boxing_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/boxing_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/boxing_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/clone_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/clone_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/clone_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/concat_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/concat_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/concat_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/convolution_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/convolution_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/convolution_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/copy_comm_net_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/copy_comm_net_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/copy_hd_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/copy_hd_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/copy_hd_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/data_loader_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/data_loader_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/innerproduct_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/innerproduct_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/innerproduct_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/kernel_context.h	/^namespace oneflow {$/;"	n
oneflow	kernel/kernel_util.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/kernel_util.h	/^namespace oneflow {$/;"	n
oneflow	kernel/loss_print_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/loss_print_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/model_save_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/model_save_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/model_update_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/momentum_model_update_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/momentum_model_update_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/momentum_model_update_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/multinomial_logistic_loss_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/multinomial_logistic_loss_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/multinomial_logistic_loss_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/normal_model_update_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/normal_model_update_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/normal_model_update_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/opkernel_test_common.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/opkernel_test_common.h	/^namespace oneflow {$/;"	n
oneflow	kernel/pooling_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/pooling_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/pooling_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/print_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/print_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/relu_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/relu_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/relu_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/rmsprop_model_update_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/rmsprop_model_update_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/rmsprop_model_update_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/softmax_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/softmax_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/softmax_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/softmax_loss_kernel.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	kernel/softmax_loss_kernel.h	/^namespace oneflow {$/;"	n
oneflow	kernel/softmax_loss_kernel_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	memory/memory_allocator.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	memory/memory_allocator.h	/^namespace oneflow {$/;"	n
oneflow	operator/accumulate_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/accumulate_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/boxing_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/boxing_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/boxing_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/clone_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/clone_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/clone_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/concat_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/concat_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/concat_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/convolution_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/convolution_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/convolution_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/copy_comm_net_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/copy_comm_net_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/copy_hd_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/copy_hd_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/data_loader_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/data_loader_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/innerproduct_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/innerproduct_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/innerproduct_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/loss_print_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/loss_print_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/model_save_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/model_save_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/model_update_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/momentum_model_update_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/momentum_model_update_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/multinomial_logistic_loss_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/multinomial_logistic_loss_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/multinomial_logistic_loss_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/normal_model_update_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/normal_model_update_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/operator.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/operator.h	/^namespace oneflow {$/;"	n
oneflow	operator/pooling_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/pooling_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/pooling_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/print_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/print_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/relu_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/relu_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/relu_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/rmsprop_model_update_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/rmsprop_model_update_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/softmax_loss_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/softmax_loss_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/softmax_loss_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/softmax_op.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	operator/softmax_op.h	/^namespace oneflow {$/;"	n
oneflow	operator/softmax_op_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/cyclic_persistent_in_stream.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/cyclic_persistent_in_stream.h	/^namespace oneflow {$/;"	n
oneflow	persistence/file_system.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/file_system.h	/^namespace oneflow {$/;"	n
oneflow	persistence/file_system_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/hadoop/hadoop_file_system.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/hadoop/hadoop_file_system.h	/^namespace oneflow {$/;"	n
oneflow	persistence/normal_persistent_in_stream.h	/^namespace oneflow {$/;"	n
oneflow	persistence/persistent_in_stream.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/persistent_in_stream.h	/^namespace oneflow {$/;"	n
oneflow	persistence/persistent_out_stream.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/persistent_out_stream.h	/^namespace oneflow {$/;"	n
oneflow	persistence/posix/posix_file_system.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/posix/posix_file_system.h	/^namespace oneflow {$/;"	n
oneflow	persistence/snapshot.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/snapshot.h	/^namespace oneflow {$/;"	n
oneflow	persistence/snapshot_manager.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/snapshot_manager.h	/^namespace oneflow {$/;"	n
oneflow	persistence/snapshot_test.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/windows/windows_file_system.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	persistence/windows/windows_file_system.h	/^namespace oneflow {$/;"	n
oneflow	register/blob.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/blob.h	/^namespace oneflow {$/;"	n
oneflow	register/blob_desc.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/blob_desc.h	/^namespace oneflow {$/;"	n
oneflow	register/register.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/register.h	/^namespace oneflow {$/;"	n
oneflow	register/register_desc.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/register_desc.h	/^namespace oneflow {$/;"	n
oneflow	register/register_manager.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/register_manager.h	/^namespace oneflow {$/;"	n
oneflow	register/runtime_register_desc.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	register/runtime_register_desc.h	/^namespace oneflow {$/;"	n
oneflow	thread/cpu_thread.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	thread/cpu_thread.h	/^namespace oneflow {$/;"	n
oneflow	thread/gpu_thread.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	thread/gpu_thread.h	/^namespace oneflow {$/;"	n
oneflow	thread/thread.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	thread/thread.h	/^namespace oneflow {$/;"	n
oneflow	thread/thread_context.h	/^namespace oneflow {$/;"	n
oneflow	thread/thread_manager.cpp	/^namespace oneflow {$/;"	n	file:
oneflow	thread/thread_manager.h	/^namespace oneflow {$/;"	n
oneflow::ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/boxing_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kBoxingConf, BoxingKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kBoxingConf, BoxingKernel, ARITHMETIC_DATA_TYPE_SEQ)
oneflow::ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/data_loader_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kDataLoaderConf, DataLoaderKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kDataLoaderConf, DataLoaderKernel, ARITHMETIC_DATA_TYPE_SEQ)
oneflow::ADD_CPU_DEFAULT_KERNEL_CREATOR	kernel/loss_print_kernel.cpp	/^ADD_CPU_DEFAULT_KERNEL_CREATOR(OperatorConf::kLossPrintConf, LossPrintKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kLossPrintConf, LossPrintKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/accumulate_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kAccumulateConf, AccumulateKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kAccumulateConf, AccumulateKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/clone_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kCloneConf, CloneKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCloneConf, CloneKernel, ALL_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/convolution_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kConvolutionConf, ConvolutionKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConvolutionConf, ConvolutionKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/innerproduct_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kInnerproductConf, InnerProductKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kInnerproductConf, InnerProductKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/momentum_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kMomentumMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMomentumMdupdtConf, MomentumMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/normal_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kNormalMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kNormalMdupdtConf, NormalMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/pooling_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kPoolingConf, PoolingKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPoolingConf, PoolingKernel, ARITHMETIC_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/relu_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kReluConf, ReluKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kReluConf, ReluKernel, FLOATING_DATA_TYPE_SEQ SIGNED_INT_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/rmsprop_model_update_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kRmspropMdupdtConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kRmspropMdupdtConf, RMSPropMdUpdateKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ADD_DEFAULT_KERNEL_CREATOR	kernel/softmax_kernel.cpp	/^ADD_DEFAULT_KERNEL_CREATOR(OperatorConf::kSoftmaxConf, SoftmaxKernel,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxConf, SoftmaxKernel, FLOATING_DATA_TYPE_SEQ)
oneflow::ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(int32, Int32);$/;"	p	namespace:oneflow	signature:(int32, Int32)
oneflow::ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(int64, Int64);$/;"	p	namespace:oneflow	signature:(int64, Int64)
oneflow::ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(uint32, UInt32);$/;"	p	namespace:oneflow	signature:(uint32, UInt32)
oneflow::ALIAS_PB_TYPE	common/protobuf.h	/^ALIAS_PB_TYPE(uint64, UInt64);$/;"	p	namespace:oneflow	signature:(uint64, UInt64)
oneflow::AccCompTaskNode	graph/accumulate_compute_task_node.h	/^class AccCompTaskNode : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::AccCompTaskNode::AccCompTaskNode	graph/accumulate_compute_task_node.h	/^  AccCompTaskNode() = default;$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:()
oneflow::AccCompTaskNode::BuildExecGphAndRegst	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
oneflow::AccCompTaskNode::ConsumeAllRegsts	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
oneflow::AccCompTaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccCompTaskNode);$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:(AccCompTaskNode)
oneflow::AccCompTaskNode::ProduceAllRegstsAndBindEdges	graph/accumulate_compute_task_node.cpp	/^void AccCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::AccCompTaskNode	signature:()
oneflow::AccCompTaskNode::override	graph/accumulate_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
oneflow::AccCompTaskNode::override	graph/accumulate_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
oneflow::AccCompTaskNode::override	graph/accumulate_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
oneflow::AccCompTaskNode::~AccCompTaskNode	graph/accumulate_compute_task_node.h	/^  virtual ~AccCompTaskNode() = default;$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:()
oneflow::AccumulateCompActor	actor/accumulate_compute_actor.h	/^class AccumulateCompActor : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::AccumulateCompActor::AccumulateCompActor	actor/accumulate_compute_actor.h	/^  AccumulateCompActor() = default;$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:()
oneflow::AccumulateCompActor::Act	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::Act() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
oneflow::AccumulateCompActor::AsyncReturnAllReadableRegst	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
oneflow::AccumulateCompActor::HandlerNormal	actor/accumulate_compute_actor.cpp	/^int AccumulateCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::AccumulateCompActor	signature:(const ActorMsg& msg)
oneflow::AccumulateCompActor::Init	actor/accumulate_compute_actor.cpp	/^void AccumulateCompActor::Init(const TaskProto& task_proto,$/;"	f	class:oneflow::AccumulateCompActor	signature:(const TaskProto& task_proto, int32_t max_acc_cnt)
oneflow::AccumulateCompActor::Init	actor/accumulate_compute_actor.h	/^  void Init(const TaskProto&, int32_t max_acc_cnt);$/;"	p	class:oneflow::AccumulateCompActor	access:protected	signature:(const TaskProto&, int32_t max_acc_cnt)
oneflow::AccumulateCompActor::IsReadAlwaysUnReadyFromNow	actor/accumulate_compute_actor.cpp	/^bool AccumulateCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::AccumulateCompActor	signature:()
oneflow::AccumulateCompActor::OF_DISALLOW_COPY_AND_MOVE	actor/accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateCompActor);$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:(AccumulateCompActor)
oneflow::AccumulateCompActor::acc_cnt_	actor/accumulate_compute_actor.h	/^  int32_t acc_cnt_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::cpy_func_	actor/accumulate_compute_actor.h	/^  std::function<void(DeviceCtx*, void* dst, const void* src, size_t)> cpy_func_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::is_in_eord_	actor/accumulate_compute_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::max_acc_cnt_	actor/accumulate_compute_actor.h	/^  int32_t max_acc_cnt_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::next_piece_id_	actor/accumulate_compute_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::override	actor/accumulate_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::override	actor/accumulate_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::override	actor/accumulate_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::override	actor/accumulate_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::pending_in_regst_	actor/accumulate_compute_actor.h	/^  std::queue<Regst*> pending_in_regst_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
oneflow::AccumulateCompActor::~AccumulateCompActor	actor/accumulate_compute_actor.h	/^  virtual ~AccumulateCompActor() = default;$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:()
oneflow::AccumulateKernel::ForwardDataContent	kernel/accumulate_kernel.cpp	/^void AccumulateKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::AccumulateKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::AccumulateOp::GetSpecialConf	operator/accumulate_op.cpp	/^const PbMessage& AccumulateOp::GetSpecialConf() const {$/;"	f	class:oneflow::AccumulateOp	signature:() const
oneflow::AccumulateOp::InitFromOpConf	operator/accumulate_op.cpp	/^void AccumulateOp::InitFromOpConf() {$/;"	f	class:oneflow::AccumulateOp	signature:()
oneflow::ActEventLogger::ActEventLogger	actor/act_event_logger.cpp	/^ActEventLogger::ActEventLogger()$/;"	f	class:oneflow::ActEventLogger	signature:()
oneflow::ActEventLogger::PrintActEventToLogDir	actor/act_event_logger.cpp	/^void ActEventLogger::PrintActEventToLogDir(const ActEvent& act_event) {$/;"	f	class:oneflow::ActEventLogger	signature:(const ActEvent& act_event)
oneflow::Actor	actor/actor.h	/^class Actor {$/;"	c	namespace:oneflow
oneflow::Actor::Act	actor/actor.h	/^  virtual void Act() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::ActUntilFail	actor/actor.cpp	/^void Actor::ActUntilFail() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::ActUntilFail	actor/actor.h	/^  void ActUntilFail();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::AsyncDo	actor/actor.cpp	/^void Actor::AsyncDo(std::function<void()> func) {$/;"	f	class:oneflow::Actor	signature:(std::function<void()> func)
oneflow::Actor::AsyncDo	actor/actor.h	/^  void AsyncDo(std::function<void()>);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<void()>)
oneflow::Actor::AsyncLaunchKernel	actor/actor.cpp	/^void Actor::AsyncLaunchKernel($/;"	f	class:oneflow::Actor	signature:( const KernelCtx& kernel_ctx, std::function<Regst*(int64_t)> Regst4RegstDescId)
oneflow::Actor::AsyncLaunchKernel	actor/actor.h	/^  void AsyncLaunchKernel(const KernelCtx&,$/;"	p	class:oneflow::Actor	access:protected	signature:(const KernelCtx&, std::function<Regst*(int64_t)> Regst4RegstDescId)
oneflow::Actor::AsyncReturnAllReadableRegst	actor/actor.h	/^  virtual void AsyncReturnAllReadableRegst() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::AsyncSendEORDMsgForAllProducedRegstDesc	actor/actor.cpp	/^void Actor::AsyncSendEORDMsgForAllProducedRegstDesc() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::AsyncSendEORDMsgForAllProducedRegstDesc	actor/actor.h	/^  void AsyncSendEORDMsgForAllProducedRegstDesc();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::AsyncSendEORDMsgToConsumers	actor/actor.cpp	/^void Actor::AsyncSendEORDMsgToConsumers(int64_t regst_desc_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t regst_desc_id)
oneflow::Actor::AsyncSendEORDMsgToConsumers	actor/actor.h	/^  void AsyncSendEORDMsgToConsumers(int64_t regst_desc_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t regst_desc_id)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(Regst*)> RegstPreProcess)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(Regst*)> RegstPreProcess, std::function<bool(int64_t)> IsAllowedActor)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer($/;"	f	class:oneflow::Actor	signature:( std::function<bool(int64_t)> IsAllowedActor)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToConsumer() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(Regst*)> RegstPreProcess);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(Regst*)> RegstPreProcess)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(Regst*)> RegstPreProcess,$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(Regst*)> RegstPreProcess, std::function<bool(int64_t)> IsAllowedActor)
oneflow::Actor::AsyncSendRegstMsgToConsumer	actor/actor.h	/^  void AsyncSendRegstMsgToConsumer(std::function<bool(int64_t)> IsAllowedActor);$/;"	p	class:oneflow::Actor	access:protected	signature:(std::function<bool(int64_t)> IsAllowedActor)
oneflow::Actor::AsyncSendRegstMsgToProducer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToProducer(Regst* regst) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst)
oneflow::Actor::AsyncSendRegstMsgToProducer	actor/actor.cpp	/^void Actor::AsyncSendRegstMsgToProducer(Regst* regst, int64_t producer) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst, int64_t producer)
oneflow::Actor::AsyncSendRegstMsgToProducer	actor/actor.h	/^  void AsyncSendRegstMsgToProducer(Regst*);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst*)
oneflow::Actor::AsyncSendRegstMsgToProducer	actor/actor.h	/^  void AsyncSendRegstMsgToProducer(Regst*, int64_t producer);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst*, int64_t producer)
oneflow::Actor::DecreaseRemainingEordCnt	actor/actor.cpp	/^void Actor::DecreaseRemainingEordCnt() { remaining_eord_cnt_ -= 1; }$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::DecreaseRemainingEordCnt	actor/actor.h	/^  void DecreaseRemainingEordCnt();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::ExecKernel	actor/actor.h	/^  struct ExecKernel {$/;"	s	class:oneflow::Actor	access:protected
oneflow::Actor::ExecKernel::bn_in_op2regst_desc_id	actor/actor.h	/^    HashMap<std::string, int64_t> bn_in_op2regst_desc_id;$/;"	m	struct:oneflow::Actor::ExecKernel	access:public
oneflow::Actor::ExecKernel::kernel	actor/actor.h	/^    std::unique_ptr<const Kernel> kernel;$/;"	m	struct:oneflow::Actor::ExecKernel	access:public
oneflow::Actor::GenDefaultKernelCtx	actor/actor.cpp	/^KernelCtx Actor::GenDefaultKernelCtx() const {$/;"	f	class:oneflow::Actor	signature:() const
oneflow::Actor::GenDefaultKernelCtx	actor/actor.h	/^  KernelCtx GenDefaultKernelCtx() const;$/;"	p	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::GetCurSoleWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurSoleWriteableRegst() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::GetCurSoleWriteableRegst	actor/actor.h	/^  Regst* GetCurSoleWriteableRegst();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::GetCurWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurWriteableRegst(const std::string& name) {$/;"	f	class:oneflow::Actor	signature:(const std::string& name)
oneflow::Actor::GetCurWriteableRegst	actor/actor.cpp	/^Regst* Actor::GetCurWriteableRegst(int64_t regst_desc_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t regst_desc_id)
oneflow::Actor::GetCurWriteableRegst	actor/actor.h	/^  Regst* GetCurWriteableRegst(const std::string& name);$/;"	p	class:oneflow::Actor	access:protected	signature:(const std::string& name)
oneflow::Actor::GetCurWriteableRegst	actor/actor.h	/^  Regst* GetCurWriteableRegst(int64_t regst_desc_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t regst_desc_id)
oneflow::Actor::GetDeviceType	actor/actor.cpp	/^DeviceType Actor::GetDeviceType() const {$/;"	f	class:oneflow::Actor	signature:() const
oneflow::Actor::GetDeviceType	actor/actor.h	/^  DeviceType GetDeviceType() const;$/;"	p	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::GetReservedWorkStreamId	actor/actor.cpp	/^int64_t Actor::GetReservedWorkStreamId(int64_t reserved_id) {$/;"	f	class:oneflow::Actor	signature:(int64_t reserved_id)
oneflow::Actor::GetReservedWorkStreamId	actor/actor.h	/^  int64_t GetReservedWorkStreamId(int64_t reserved_id);$/;"	p	class:oneflow::Actor	access:protected	signature:(int64_t reserved_id)
oneflow::Actor::GetWorkStreamId	actor/actor.h	/^  int64_t GetWorkStreamId() const { return device_ctx_->work_stream_id(); }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::HandlerNormal	actor/actor.h	/^  virtual int HandlerNormal(const ActorMsg& msg) = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:(const ActorMsg& msg)
oneflow::Actor::HandlerZombie	actor/actor.cpp	/^int Actor::HandlerZombie(const ActorMsg& msg) {$/;"	f	class:oneflow::Actor	signature:(const ActorMsg& msg)
oneflow::Actor::HandlerZombie	actor/actor.h	/^  int HandlerZombie(const ActorMsg& msg);$/;"	p	class:oneflow::Actor	access:protected	signature:(const ActorMsg& msg)
oneflow::Actor::Init	actor/actor.cpp	/^void Actor::Init(const TaskProto& task_proto, const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Actor	signature:(const TaskProto& task_proto, const ThreadCtx& thread_ctx)
oneflow::Actor::Init	actor/actor.h	/^  void Init(const TaskProto&, const ThreadCtx&);$/;"	p	class:oneflow::Actor	access:public	signature:(const TaskProto&, const ThreadCtx&)
oneflow::Actor::InitDeviceCtx	actor/actor.cpp	/^void Actor::InitDeviceCtx(const ThreadCtx&) {$/;"	f	class:oneflow::Actor	signature:(const ThreadCtx&)
oneflow::Actor::InitDeviceCtx	actor/actor.h	/^  virtual void InitDeviceCtx(const ThreadCtx&);$/;"	p	class:oneflow::Actor	access:protected	signature:(const ThreadCtx&)
oneflow::Actor::IsReadAlwaysUnReadyFromNow	actor/actor.h	/^  virtual bool IsReadAlwaysUnReadyFromNow() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::IsReadReady	actor/actor.h	/^  virtual bool IsReadReady() = 0;$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::IsWriteReady	actor/actor.cpp	/^bool Actor::IsWriteReady() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::IsWriteReady	actor/actor.h	/^  virtual bool IsWriteReady();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::NewWorkStreamId	actor/actor.cpp	/^int64_t Actor::NewWorkStreamId() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::NewWorkStreamId	actor/actor.h	/^  int64_t NewWorkStreamId();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::OF_DISALLOW_COPY_AND_MOVE	actor/actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(Actor);$/;"	p	class:oneflow::Actor	access:public	signature:(Actor)
oneflow::Actor::ProcessMsg	actor/actor.h	/^  int ProcessMsg(const ActorMsg& msg) { return (this->*msg_handler_)(msg); }$/;"	f	class:oneflow::Actor	access:public	signature:(const ActorMsg& msg)
oneflow::Actor::RegstDescId4Name	actor/actor.cpp	/^int64_t Actor::RegstDescId4Name(const std::string& name) const {$/;"	f	class:oneflow::Actor	signature:(const std::string& name) const
oneflow::Actor::RegstDescId4Name	actor/actor.h	/^  int64_t RegstDescId4Name(const std::string& name) const;$/;"	p	class:oneflow::Actor	access:protected	signature:(const std::string& name) const
oneflow::Actor::TrySwitchToZombieOrFinish	actor/actor.cpp	/^int Actor::TrySwitchToZombieOrFinish() {$/;"	f	class:oneflow::Actor	signature:()
oneflow::Actor::TrySwitchToZombieOrFinish	actor/actor.h	/^  int TrySwitchToZombieOrFinish();$/;"	p	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::TryUpdtStateAsProducedRegst	actor/actor.cpp	/^int Actor::TryUpdtStateAsProducedRegst(Regst* regst) {$/;"	f	class:oneflow::Actor	signature:(Regst* regst)
oneflow::Actor::TryUpdtStateAsProducedRegst	actor/actor.h	/^  int TryUpdtStateAsProducedRegst(Regst* regst);$/;"	p	class:oneflow::Actor	access:protected	signature:(Regst* regst)
oneflow::Actor::VirtualActorInit	actor/actor.h	/^  virtual void VirtualActorInit(const TaskProto&) {}$/;"	f	class:oneflow::Actor	access:protected	signature:(const TaskProto&)
oneflow::Actor::act_id_	actor/actor.h	/^  int64_t act_id_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::actor_id	actor/actor.h	/^  int64_t actor_id() const { return actor_id_; }$/;"	f	class:oneflow::Actor	access:public	signature:() const
oneflow::Actor::actor_id_	actor/actor.h	/^  int64_t actor_id_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::cuda_handle_	actor/actor.h	/^  CudaStreamHandle cuda_handle_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::device_ctx_	actor/actor.h	/^  std::unique_ptr<DeviceCtx> device_ctx_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::exec_kernel_vec	actor/actor.h	/^  const std::vector<ExecKernel>& exec_kernel_vec() { return exec_kernel_vec_; }$/;"	f	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::exec_kernel_vec_	actor/actor.h	/^  std::vector<ExecKernel> exec_kernel_vec_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::machine_id	actor/actor.cpp	/^int64_t Actor::machine_id() const {$/;"	f	class:oneflow::Actor	signature:() const
oneflow::Actor::machine_id	actor/actor.h	/^  int64_t machine_id() const;$/;"	p	class:oneflow::Actor	access:public	signature:() const
oneflow::Actor::msg_handler_	actor/actor.h	/^  MsgHandler msg_handler_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::mut_device_ctx	actor/actor.h	/^  std::unique_ptr<DeviceCtx>& mut_device_ctx() { return device_ctx_; }$/;"	f	class:oneflow::Actor	access:protected	signature:()
oneflow::Actor::name2regst_desc_id_	actor/actor.h	/^  HashMap<std::string, int64_t> name2regst_desc_id_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::parallel_ctx	actor/actor.h	/^  const ParallelContext* parallel_ctx() const { return parallel_ctx_.get(); }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::parallel_ctx_	actor/actor.h	/^  std::unique_ptr<ParallelContext> parallel_ctx_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::produced_regst2reading_cnt_	actor/actor.h	/^  HashMap<Regst*, int64_t> produced_regst2reading_cnt_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::produced_regsts_	actor/actor.h	/^  HashMap<int64_t, std::vector<std::unique_ptr<Regst>>> produced_regsts_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::remaining_eord_cnt	actor/actor.h	/^  int64_t remaining_eord_cnt() const { return remaining_eord_cnt_; }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::remaining_eord_cnt_	actor/actor.h	/^  int64_t remaining_eord_cnt_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::set_msg_handler	actor/actor.h	/^  void set_msg_handler(MsgHandler val) { msg_handler_ = val; }$/;"	f	class:oneflow::Actor	access:protected	signature:(MsgHandler val)
oneflow::Actor::thrd_id	actor/actor.cpp	/^int64_t Actor::thrd_id() const {$/;"	f	class:oneflow::Actor	signature:() const
oneflow::Actor::thrd_id	actor/actor.h	/^  int64_t thrd_id() const;$/;"	p	class:oneflow::Actor	access:public	signature:() const
oneflow::Actor::total_reading_cnt	actor/actor.h	/^  int64_t total_reading_cnt() const { return total_reading_cnt_; }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
oneflow::Actor::total_reading_cnt_	actor/actor.h	/^  int64_t total_reading_cnt_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::writeable_produced_regst_	actor/actor.h	/^  HashMap<int64_t, std::deque<Regst*>> writeable_produced_regst_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::writeable_produced_regst_desc_num_	actor/actor.h	/^  int64_t writeable_produced_regst_desc_num_;$/;"	m	class:oneflow::Actor	access:private
oneflow::Actor::~Actor	actor/actor.h	/^  virtual ~Actor() = default;$/;"	p	class:oneflow::Actor	access:public	signature:()
oneflow::ActorCmd	actor/actor_message.h	/^enum class ActorCmd {$/;"	c	namespace:oneflow
oneflow::ActorCmd::kInitModel	actor/actor_message.h	/^  kInitModel = 0,     \/\/ MdUpdt Actor$/;"	m	class:oneflow::ActorCmd	access:private
oneflow::ActorCmd::kSendInitialModel	actor/actor_message.h	/^  kSendInitialModel,  \/\/ MdUpdt Actor$/;"	m	class:oneflow::ActorCmd	access:private
oneflow::ActorCmd::kStart	actor/actor_message.h	/^  kStart,             \/\/ Source Actor$/;"	m	class:oneflow::ActorCmd	access:private
oneflow::ActorCmd::kStopThread	actor/actor_message.h	/^  kStopThread,$/;"	m	class:oneflow::ActorCmd	access:private
oneflow::ActorCreatorMap	actor/actor.cpp	/^static HashMap<int, std::function<Actor*()>>& ActorCreatorMap() {$/;"	f	namespace:oneflow	signature:()
oneflow::ActorMsg::BuildCommandMsg	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildCommandMsg(int64_t dst_actor_id, ActorCmd cmd) {$/;"	f	class:oneflow::ActorMsg	signature:(int64_t dst_actor_id, ActorCmd cmd)
oneflow::ActorMsg::BuildEordMsg	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildEordMsg(int64_t consumer, int64_t regst_desc_id) {$/;"	f	class:oneflow::ActorMsg	signature:(int64_t consumer, int64_t regst_desc_id)
oneflow::ActorMsg::BuildRegstMsgToConsumer	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildRegstMsgToConsumer(int64_t producer, int64_t consumer,$/;"	f	class:oneflow::ActorMsg	signature:(int64_t producer, int64_t consumer, Regst* regst_raw_ptr)
oneflow::ActorMsg::BuildRegstMsgToProducer	actor/actor_message.cpp	/^ActorMsg ActorMsg::BuildRegstMsgToProducer(int64_t consumer, int64_t producer,$/;"	f	class:oneflow::ActorMsg	signature:(int64_t consumer, int64_t producer, Regst* regst_raw_ptr)
oneflow::ActorMsg::SrcMachineId	actor/actor_message.cpp	/^int64_t ActorMsg::SrcMachineId() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsg::actor_cmd	actor/actor_message.cpp	/^ActorCmd ActorMsg::actor_cmd() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsg::comm_net_token	actor/actor_message.cpp	/^const void* ActorMsg::comm_net_token() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsg::eord_regst_desc_id	actor/actor_message.cpp	/^int64_t ActorMsg::eord_regst_desc_id() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsg::piece_id	actor/actor_message.cpp	/^int64_t ActorMsg::piece_id() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsg::regst	actor/actor_message.cpp	/^Regst* ActorMsg::regst() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
oneflow::ActorMsgBus::SendMsg	actor/actor_message_bus.cpp	/^void ActorMsgBus::SendMsg(const ActorMsg& msg) {$/;"	f	class:oneflow::ActorMsgBus	signature:(const ActorMsg& msg)
oneflow::ActorMsgType	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	c	namespace:oneflow
oneflow::ActorMsgType::kEordMsg	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	m	class:oneflow::ActorMsgType	access:private
oneflow::ActorMsgType::kRegstMsg	actor/actor_message.h	/^enum class ActorMsgType { kRegstMsg = 0, kEordMsg, kCmdMsg };$/;"	m	class:oneflow::ActorMsgType	access:private
oneflow::ActorRegistry	actor/actor.h	/^struct ActorRegistry {$/;"	s	namespace:oneflow
oneflow::ActorRegistry::ActorRegistry	actor/actor.h	/^  ActorRegistry() {$/;"	f	struct:oneflow::ActorRegistry	access:public	signature:()
oneflow::AddActorCreator	actor/actor.cpp	/^void AddActorCreator(TaskType task_type, std::function<Actor*()> creator) {$/;"	f	namespace:oneflow	signature:(TaskType task_type, std::function<Actor*()> creator)
oneflow::AddActorCreator	actor/actor.h	/^void AddActorCreator(TaskType task_type, std::function<Actor*()> creator);$/;"	p	namespace:oneflow	signature:(TaskType task_type, std::function<Actor*()> creator)
oneflow::AddKernelCreator	kernel/copy_comm_net_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kCopyCommNetConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyCommNetConf, []() { return new CopyCommNetKernel; })
oneflow::AddKernelCreator	kernel/copy_hd_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kCopyHdConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyHdConf, []() { return new CopyHdKernel; })
oneflow::AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator1 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator1 creator)
oneflow::AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator2 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator2 creator)
oneflow::AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator3 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator3 creator)
oneflow::AddKernelCreator	kernel/kernel.cpp	/^void AddKernelCreator(OperatorConf::OpTypeCase opcase, KernelCreator4 creator) {$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase opcase, KernelCreator4 creator)
oneflow::AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator1);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator1)
oneflow::AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator2);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator2)
oneflow::AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator3);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator3)
oneflow::AddKernelCreator	kernel/kernel.h	/^void AddKernelCreator(OperatorConf::OpTypeCase, KernelCreator4);$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase, KernelCreator4)
oneflow::AddKernelCreator	kernel/model_save_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kModelSaveConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kModelSaveConf, []() { return new ModelSaveKernel; })
oneflow::AddKernelCreator	kernel/print_kernel.cpp	/^COMMAND(AddKernelCreator(OperatorConf::kPrintConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPrintConf, []() { return new PrintKernel; })
oneflow::AddOpCreator	operator/operator.cpp	/^void AddOpCreator(OperatorConf::OpTypeCase op_type_case,$/;"	f	namespace:oneflow	signature:(OperatorConf::OpTypeCase op_type_case, std::function<Operator*()> creator)
oneflow::AddOpCreator	operator/operator.h	/^void AddOpCreator(OperatorConf::OpTypeCase op_type_case,$/;"	p	namespace:oneflow	signature:(OperatorConf::OpTypeCase op_type_case, std::function<Operator*()> creator)
oneflow::BackwardChainNode	graph/chain_node.h	/^class BackwardChainNode;$/;"	x
oneflow::BackwardChainNode::FindLbnsFromBackward	graph/chain_node.cpp	/^std::vector<std::string> BackwardChainNode::FindLbnsFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::FindLbnsFromLoss	graph/chain_node.cpp	/^std::vector<std::string> BackwardChainNode::FindLbnsFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::GetMthdForBldBoxingOpConfFromBackward	graph/chain_node.cpp	/^BldBoxingOpConfMthd BackwardChainNode::GetMthdForBldBoxingOpConfFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::GetMthdForBldBoxingOpConfFromLoss	graph/chain_node.cpp	/^BldBoxingOpConfMthd BackwardChainNode::GetMthdForBldBoxingOpConfFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::GetMthdForBldSubTskGphFromBackward	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromBackward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode*) const
oneflow::BackwardChainNode::GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode* node) const
oneflow::BackwardChainNode::GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd BackwardChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::BackwardChainNode	signature:( const ChainNode*) const
oneflow::BackwardChainNode::set_data_output_lbns	graph/chain_node.cpp	/^void BackwardChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::BackwardChainNode	signature:()
oneflow::BackwardCompActor::Act	actor/backward_compute_actor.cpp	/^void BackwardCompActor::Act() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
oneflow::BackwardCompActor::AsyncReturnAllReadableRegst	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
oneflow::BackwardCompActor::AsyncReturnModelRegstUntilLastPieceIdGreaterThan	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnModelRegstUntilLastPieceIdGreaterThan($/;"	f	class:oneflow::BackwardCompActor	signature:( int64_t piece_id)
oneflow::BackwardCompActor::AsyncReturnModelRegstUntilMatchCurOutRegst	actor/backward_compute_actor.cpp	/^void BackwardCompActor::AsyncReturnModelRegstUntilMatchCurOutRegst() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
oneflow::BackwardCompActor::HandlerNormal	actor/backward_compute_actor.cpp	/^int BackwardCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BackwardCompActor	signature:(const ActorMsg& msg)
oneflow::BackwardCompActor::IsReadAlwaysUnReadyFromNow	actor/backward_compute_actor.cpp	/^bool BackwardCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
oneflow::BackwardCompActor::IsReadReady	actor/backward_compute_actor.cpp	/^bool BackwardCompActor::IsReadReady() {$/;"	f	class:oneflow::BackwardCompActor	signature:()
oneflow::BackwardCompActor::VirtualCompActorInit	actor/backward_compute_actor.cpp	/^void BackwardCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BackwardCompActor	signature:(const TaskProto& task_proto)
oneflow::BackwardCompTaskNode::BuildActivationDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildActivationDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::BuildExecGphAndBindOutDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildExecGphAndBindOutDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::BuildExecGphAndRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::BuildInDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildInDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::BuildModelDiffRegst	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::BuildModelDiffRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::ConsumeAllRegsts	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::GetRelatedInRegst	graph/backward_compute_task_node.cpp	/^std::shared_ptr<RegstDesc> BackwardCompTaskNode::GetRelatedInRegst() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::InferBlobDescsInProducedRegsts	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::InferBlobDescsInProducedRegsts() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BackwardCompTaskNode::ProduceAllRegstsAndBindEdges	graph/backward_compute_task_node.cpp	/^void BackwardCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::BackwardCompTaskNode	signature:()
oneflow::BalancedSplitter::At	common/balanced_splitter.cpp	/^Range BalancedSplitter::At(int64_t first_idx, int64_t last_idx) const {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t first_idx, int64_t last_idx) const
oneflow::BalancedSplitter::At	common/balanced_splitter.cpp	/^Range BalancedSplitter::At(int64_t idx) const {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t idx) const
oneflow::BalancedSplitter::BalancedSplitter	common/balanced_splitter.cpp	/^BalancedSplitter::BalancedSplitter(int64_t total_num, int64_t split_num) {$/;"	f	class:oneflow::BalancedSplitter	signature:(int64_t total_num, int64_t split_num)
oneflow::Basename	common/str_util.cpp	/^std::string Basename(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
oneflow::Basename	common/str_util.h	/^std::string Basename(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
oneflow::Blob::Blob	register/blob.cpp	/^Blob::Blob(const BlobDesc* blob_desc, char* mem_ptr,$/;"	f	class:oneflow::Blob	signature:(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token)
oneflow::Blob::CopyDataContentFrom	register/blob.cpp	/^void Blob::CopyDataContentFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::Blob::CopyDataIdFrom	register/blob.cpp	/^void Blob::CopyDataIdFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::Blob::CopyFrom	register/blob.cpp	/^void Blob::CopyFrom(DeviceCtx* device_ctx, const Blob* rhs) {$/;"	f	class:oneflow::Blob	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::Blob::data_id	register/blob.cpp	/^const char* Blob::data_id(int32_t no) const {$/;"	f	class:oneflow::Blob	signature:(int32_t no) const
oneflow::BlobDesc::BlobDesc	register/blob_desc.cpp	/^BlobDesc::BlobDesc()$/;"	f	class:oneflow::BlobDesc	signature:()
oneflow::BlobDesc::ByteSizeOfDataContentField	register/blob_desc.cpp	/^size_t BlobDesc::ByteSizeOfDataContentField() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
oneflow::BlobDesc::ByteSizeOfDataIdField	register/blob_desc.cpp	/^size_t BlobDesc::ByteSizeOfDataIdField() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
oneflow::BlobDesc::TotalByteSize	register/blob_desc.cpp	/^size_t BlobDesc::TotalByteSize() const {$/;"	f	class:oneflow::BlobDesc	signature:() const
oneflow::BlobDesc::operator ==	register/blob_desc.cpp	/^bool BlobDesc::operator==(const BlobDesc& rhs) const {$/;"	f	class:oneflow::BlobDesc	signature:(const BlobDesc& rhs) const
oneflow::BlocksNum4ThreadsNum	device/cuda_util.h	/^inline int32_t BlocksNum4ThreadsNum(const int32_t n) {$/;"	f	namespace:oneflow	signature:(const int32_t n)
oneflow::BoxingActor::Act	actor/boxing_actor.cpp	/^void BoxingActor::Act() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::Act	actor/rnn_boxing_actor.cpp	/^void BoxingActor::Act() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::AsyncReturnAllReadableRegst	actor/boxing_actor.cpp	/^void BoxingActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::AsyncReturnAllReadableRegst	actor/rnn_boxing_actor.cpp	/^void BoxingActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::HandlerNormal	actor/boxing_actor.cpp	/^int BoxingActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BoxingActor	signature:(const ActorMsg& msg)
oneflow::BoxingActor::HandlerNormal	actor/rnn_boxing_actor.cpp	/^int BoxingActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::BoxingActor	signature:(const ActorMsg& msg)
oneflow::BoxingActor::IsReadAlwaysUnReadyFromNow	actor/boxing_actor.cpp	/^bool BoxingActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::IsReadAlwaysUnReadyFromNow	actor/rnn_boxing_actor.cpp	/^bool BoxingActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::IsReadReady	actor/boxing_actor.cpp	/^bool BoxingActor::IsReadReady() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::IsReadReady	actor/rnn_boxing_actor.cpp	/^bool BoxingActor::IsReadReady() {$/;"	f	class:oneflow::BoxingActor	signature:()
oneflow::BoxingActor::VirtualActorInit	actor/boxing_actor.cpp	/^void BoxingActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BoxingActor	signature:(const TaskProto& task_proto)
oneflow::BoxingActor::VirtualActorInit	actor/rnn_boxing_actor.cpp	/^void BoxingActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::BoxingActor	signature:(const TaskProto& task_proto)
oneflow::BoxingKernel::ForwardDataContent	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::ForwardDataContent($/;"	f	class:oneflow::BoxingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::BoxingKernel::ForwardDataId	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::ForwardDataId($/;"	f	class:oneflow::BoxingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::BoxingKernel::VirtualKernelInit	kernel/boxing_kernel.cpp	/^void BoxingKernel<T>::VirtualKernelInit(const ParallelContext*) {$/;"	f	class:oneflow::BoxingKernel	signature:(const ParallelContext*)
oneflow::BoxingOp::GetSpecialConf	operator/boxing_op.cpp	/^const PbMessage& BoxingOp::GetSpecialConf() const {$/;"	f	class:oneflow::BoxingOp	signature:() const
oneflow::BoxingOp::InferBlobDescs	operator/boxing_op.cpp	/^void BoxingOp::InferBlobDescs($/;"	f	class:oneflow::BoxingOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::BoxingOp::InitFromOpConf	operator/boxing_op.cpp	/^void BoxingOp::InitFromOpConf() {$/;"	f	class:oneflow::BoxingOp	signature:()
oneflow::BoxingOp::VirtualGenKernelConf	operator/boxing_op.cpp	/^void BoxingOp::VirtualGenKernelConf($/;"	f	class:oneflow::BoxingOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::BoxingOp::ibn2lbn	operator/boxing_op.cpp	/^std::string BoxingOp::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::BoxingOp	signature:(const std::string& input_bn) const
oneflow::BoxingOp::obn2lbn	operator/boxing_op.cpp	/^std::string BoxingOp::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::BoxingOp	signature:(const std::string& output_bn) const
oneflow::BoxingTaskNode	graph/boxing_task_node.h	/^class BoxingTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
oneflow::BoxingTaskNode::BoxingTaskNode	graph/boxing_task_node.h	/^  BoxingTaskNode() = default;$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:()
oneflow::BoxingTaskNode::BuildExecGphAndRegst	graph/boxing_task_node.cpp	/^void BoxingTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
oneflow::BoxingTaskNode::BuildWithChainPair	graph/boxing_task_node.cpp	/^void BoxingTaskNode::BuildWithChainPair($/;"	f	class:oneflow::BoxingTaskNode	signature:( const ChainNode* in_chain, const std::vector<EdgeInfo>& sorted_in_edges, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_out_edges)
oneflow::BoxingTaskNode::BuildWithChainPair	graph/boxing_task_node.h	/^  void BuildWithChainPair(const ChainNode* in_chain,$/;"	p	class:oneflow::BoxingTaskNode	access:private	signature:(const ChainNode* in_chain, const std::vector<EdgeInfo>& sorted_in_edges, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_out_edges)
oneflow::BoxingTaskNode::ConsumeAllRegsts	graph/boxing_task_node.cpp	/^void BoxingTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndClone)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndDataSplit)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(AddAndModelSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(AddAndModelSplit)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(DataConcatAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndClone)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(DataConcatAndModelSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndModelSplit)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(ModelConcatAndClone);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(ModelConcatAndClone)
oneflow::BoxingTaskNode::DECLARE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_BLD_BOXING_OP_CONF_METHOD(ModelConcatAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(ModelConcatAndDataSplit)
oneflow::BoxingTaskNode::DECLARE_VIRTUAL_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.h	/^  DECLARE_VIRTUAL_BLD_BOXING_OP_CONF_METHOD(DataConcatAndDataSplit);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(DataConcatAndDataSplit)
oneflow::BoxingTaskNode::EdgeInfo	graph/boxing_task_node.h	/^  struct EdgeInfo {$/;"	s	class:oneflow::BoxingTaskNode	access:public
oneflow::BoxingTaskNode::EdgeInfo::edge	graph/boxing_task_node.h	/^    const TaskEdge* edge;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
oneflow::BoxingTaskNode::EdgeInfo::parallel_id_max	graph/boxing_task_node.h	/^    int64_t parallel_id_max;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
oneflow::BoxingTaskNode::EdgeInfo::parallel_id_min	graph/boxing_task_node.h	/^    int64_t parallel_id_min;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
oneflow::BoxingTaskNode::HashMap	graph/boxing_task_node.h	/^      HashMap<const ChainNode*, std::vector<EdgeInfo>>*);$/;"	m	class:oneflow::BoxingTaskNode	access:private
oneflow::BoxingTaskNode::Init	graph/boxing_task_node.cpp	/^void BoxingTaskNode::Init(int64_t machine_id) {$/;"	f	class:oneflow::BoxingTaskNode	signature:(int64_t machine_id)
oneflow::BoxingTaskNode::Init	graph/boxing_task_node.h	/^  void Init(int64_t machine_id);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(int64_t machine_id)
oneflow::BoxingTaskNode::NewBoxingOp	graph/boxing_task_node.cpp	/^std::shared_ptr<Operator> BoxingTaskNode::NewBoxingOp($/;"	f	class:oneflow::BoxingTaskNode	signature:( const std::string& lbn, const ChainNode* in_chain, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_in_edges, const std::vector<EdgeInfo>& sorted_out_edges)
oneflow::BoxingTaskNode::NewBoxingOp	graph/boxing_task_node.h	/^  std::shared_ptr<Operator> NewBoxingOp($/;"	p	class:oneflow::BoxingTaskNode	access:private	signature:( const std::string& lbn, const ChainNode* in_chain, const ChainNode* out_chain, const std::vector<EdgeInfo>& sorted_in_edges, const std::vector<EdgeInfo>& sorted_out_edges)
oneflow::BoxingTaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingTaskNode);$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:(BoxingTaskNode)
oneflow::BoxingTaskNode::ProduceAllRegstsAndBindEdges	graph/boxing_task_node.cpp	/^void BoxingTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::BoxingTaskNode	signature:()
oneflow::BoxingTaskNode::override	graph/boxing_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
oneflow::BoxingTaskNode::override	graph/boxing_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
oneflow::BoxingTaskNode::override	graph/boxing_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
oneflow::BoxingTaskNode::~BoxingTaskNode	graph/boxing_task_node.h	/^  virtual ~BoxingTaskNode() = default;$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:()
oneflow::CallFromReceiverThread	common/channel_test.cpp	/^void CallFromReceiverThread(std::vector<int>* visit, Channel<int>* channel) {$/;"	f	namespace:oneflow	signature:(std::vector<int>* visit, Channel<int>* channel)
oneflow::CallFromSenderThread	common/channel_test.cpp	/^void CallFromSenderThread(Channel<int>* channel, Range range) {$/;"	f	namespace:oneflow	signature:(Channel<int>* channel, Range range)
oneflow::ChainEdge	graph/chain_node.h	/^class ChainEdge;$/;"	x
oneflow::ChainEdge::GetMthdForBldSubTskGph	graph/chain_node.cpp	/^BldSubTskGphMthd ChainEdge::GetMthdForBldSubTskGph() const {$/;"	f	class:oneflow::ChainEdge	signature:() const
oneflow::ChainEdge::VisualStr	graph/chain_node.cpp	/^std::string ChainEdge::VisualStr() const { return ""; }$/;"	f	class:oneflow::ChainEdge	signature:() const
oneflow::ChainGraph::BuildBwStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildBwStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
oneflow::ChainGraph::BuildFwStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildFwStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
oneflow::ChainGraph::BuildLossPrintStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildLossPrintStruct() {$/;"	f	class:oneflow::ChainGraph	signature:()
oneflow::ChainGraph::BuildModelStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildModelStruct(bool is_train) {$/;"	f	class:oneflow::ChainGraph	signature:(bool is_train)
oneflow::ChainGraph::BuildRnnStruct	graph/chain_graph.cpp	/^void ChainGraph::BuildRnnStruct() {}$/;"	f	class:oneflow::ChainGraph	signature:()
oneflow::ChainGraph::ChainGraph	graph/chain_graph.cpp	/^ChainGraph::ChainGraph(bool is_train) {$/;"	f	class:oneflow::ChainGraph	signature:(bool is_train)
oneflow::ChainNode	graph/boxing_task_node.h	/^class ChainNode;$/;"	x
oneflow::ChainNode	graph/chain_node.h	/^class ChainNode : public Node<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Node
oneflow::ChainNode	graph/compute_task_node.h	/^class ChainNode;$/;"	x
oneflow::ChainNode::AddDataOutputLbnsTo	graph/chain_node.cpp	/^void ChainNode::AddDataOutputLbnsTo(const ChainNode* to_node) {$/;"	f	class:oneflow::ChainNode	signature:(const ChainNode* to_node)
oneflow::ChainNode::AddDataOutputLbnsTo	graph/chain_node.h	/^  void AddDataOutputLbnsTo(const ChainNode*);$/;"	p	class:oneflow::ChainNode	access:protected	signature:(const ChainNode*)
oneflow::ChainNode::ChainNode	graph/chain_node.h	/^  ChainNode() = default;$/;"	p	class:oneflow::ChainNode	access:protected	signature:()
oneflow::ChainNode::FindLbnsTo	graph/chain_node.h	/^  virtual std::vector<std::string> FindLbnsTo(const ChainNode*) const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:(const ChainNode*) const
oneflow::ChainNode::FixCompTaskNode	graph/chain_node.h	/^  virtual void FixCompTaskNode(CompTaskNode*) const {}$/;"	f	class:oneflow::ChainNode	access:protected	signature:(CompTaskNode*) const
oneflow::ChainNode::GenSortedCompTaskNodes	graph/chain_node.cpp	/^void ChainNode::GenSortedCompTaskNodes(CompTaskNodeHandler Handler) const {$/;"	f	class:oneflow::ChainNode	signature:(CompTaskNodeHandler Handler) const
oneflow::ChainNode::GenSortedCompTaskNodes	graph/chain_node.h	/^  void GenSortedCompTaskNodes(CompTaskNodeHandler) const;$/;"	p	class:oneflow::ChainNode	access:public	signature:(CompTaskNodeHandler) const
oneflow::ChainNode::GetMthdForBldBoxingOpConfTo	graph/chain_node.h	/^  virtual BldBoxingOpConfMthd GetMthdForBldBoxingOpConfTo($/;"	p	class:oneflow::ChainNode	access:public	signature:( const ChainNode*) const
oneflow::ChainNode::GetMthdForBldSubTskGphTo	graph/chain_node.h	/^  virtual BldSubTskGphMthd GetMthdForBldSubTskGphTo(const ChainNode*) const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:(const ChainNode*) const
oneflow::ChainNode::HasOpWithModelOrModelTmpBlob	graph/chain_node.cpp	/^bool ChainNode::HasOpWithModelOrModelTmpBlob() const {$/;"	f	class:oneflow::ChainNode	signature:() const
oneflow::ChainNode::HasOpWithModelOrModelTmpBlob	graph/chain_node.h	/^  bool HasOpWithModelOrModelTmpBlob() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::NewCompTaskNode	graph/chain_node.h	/^  virtual CompTaskNode* NewCompTaskNode() const = 0;$/;"	p	class:oneflow::ChainNode	access:protected	signature:() const
oneflow::ChainNode::OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainNode);$/;"	p	class:oneflow::ChainNode	access:public	signature:(ChainNode)
oneflow::ChainNode::OF_PP_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_FOR_EACH_TUPLE(DECLARE_VIRTUAL_FROM_METHOD, CHAIN_TYPE_SEQ);$/;"	p	class:oneflow::ChainNode	access:public	signature:(DECLARE_VIRTUAL_FROM_METHOD, CHAIN_TYPE_SEQ)
oneflow::ChainNode::SoleOp	graph/chain_node.cpp	/^std::shared_ptr<const Operator> ChainNode::SoleOp() const {$/;"	f	class:oneflow::ChainNode	signature:() const
oneflow::ChainNode::SoleOp	graph/chain_node.h	/^  std::shared_ptr<const Operator> SoleOp() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::TypeName	graph/chain_node.h	/^  virtual const char* TypeName() const = 0;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::VisualStr	graph/chain_node.cpp	/^std::string ChainNode::VisualStr() const {$/;"	f	class:oneflow::ChainNode	signature:() const
oneflow::ChainNode::VisualStr	graph/chain_node.h	/^  std::string VisualStr() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::data_output_lbns	graph/chain_node.h	/^  const HashSet<std::string>& data_output_lbns() const {$/;"	f	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::data_output_lbns_	graph/chain_node.h	/^  HashSet<std::string> data_output_lbns_;$/;"	m	class:oneflow::ChainNode	access:private
oneflow::ChainNode::mut_op_vec	graph/chain_node.h	/^  std::vector<std::shared_ptr<const Operator>>& mut_op_vec() { return op_vec_; }$/;"	f	class:oneflow::ChainNode	access:public	signature:()
oneflow::ChainNode::mut_parallel_desc	graph/chain_node.cpp	/^std::shared_ptr<const ParallelDesc>& ChainNode::mut_parallel_desc() {$/;"	f	class:oneflow::ChainNode	signature:()
oneflow::ChainNode::mut_parallel_desc	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc>& mut_parallel_desc();$/;"	p	class:oneflow::ChainNode	access:public	signature:()
oneflow::ChainNode::op_vec	graph/chain_node.cpp	/^const std::vector<std::shared_ptr<const Operator>>& ChainNode::op_vec() const {$/;"	f	class:oneflow::ChainNode	signature:() const
oneflow::ChainNode::op_vec	graph/chain_node.h	/^  const std::vector<std::shared_ptr<const Operator>>& op_vec() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::op_vec_	graph/chain_node.h	/^  std::vector<std::shared_ptr<const Operator>> op_vec_;$/;"	m	class:oneflow::ChainNode	access:private
oneflow::ChainNode::parallel_desc	graph/chain_node.cpp	/^std::shared_ptr<const ParallelDesc> ChainNode::parallel_desc() const {$/;"	f	class:oneflow::ChainNode	signature:() const
oneflow::ChainNode::parallel_desc	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
oneflow::ChainNode::parallel_desc_	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc_;$/;"	m	class:oneflow::ChainNode	access:private
oneflow::ChainNode::set_data_output_lbns	graph/chain_node.h	/^  virtual void set_data_output_lbns() {}$/;"	f	class:oneflow::ChainNode	access:public	signature:()
oneflow::ChainNode::~ChainNode	graph/chain_node.h	/^  virtual ~ChainNode() = default;$/;"	p	class:oneflow::ChainNode	access:public	signature:()
oneflow::Channel::CloseReceiveEnd	common/channel.h	/^void Channel<T>::CloseReceiveEnd() {$/;"	f	class:oneflow::Channel	signature:()
oneflow::Channel::CloseSendEnd	common/channel.h	/^void Channel<T>::CloseSendEnd() {$/;"	f	class:oneflow::Channel	signature:()
oneflow::Channel::Receive	common/channel.h	/^int Channel<T>::Receive(T* item) {$/;"	f	class:oneflow::Channel	signature:(T* item)
oneflow::Channel::Send	common/channel.h	/^int Channel<T>::Send(const T& item) {$/;"	f	class:oneflow::Channel	signature:(const T& item)
oneflow::CleanPath	common/str_util.cpp	/^std::string CleanPath(const std::string& unclean_path) {$/;"	f	namespace:oneflow	signature:(const std::string& unclean_path)
oneflow::CleanPath	common/str_util.h	/^std::string CleanPath(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
oneflow::CloneKernel::BackwardDataContent	kernel/clone_kernel.cpp	/^void CloneKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::CloneKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::CloneKernel::Forward	kernel/clone_kernel.cpp	/^void CloneKernel<device_type, T>::Forward($/;"	f	class:oneflow::CloneKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::CloneOp::GetSpecialConf	operator/clone_op.cpp	/^const PbMessage& CloneOp::GetSpecialConf() const {$/;"	f	class:oneflow::CloneOp	signature:() const
oneflow::CloneOp::InferBlobDescs	operator/clone_op.cpp	/^void CloneOp::InferBlobDescs($/;"	f	class:oneflow::CloneOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::CloneOp::InitFromOpConf	operator/clone_op.cpp	/^void CloneOp::InitFromOpConf() {$/;"	f	class:oneflow::CloneOp	signature:()
oneflow::CloseStdoutAndStderr	common/util.cpp	/^void CloseStdoutAndStderr() {$/;"	f	namespace:oneflow	signature:()
oneflow::CloseStdoutAndStderr	common/util.h	/^void CloseStdoutAndStderr();$/;"	p	namespace:oneflow	signature:()
oneflow::CommNet	comm_network/comm_network.h	/^class CommNet {$/;"	c	namespace:oneflow
oneflow::CommNet::AddReadCallBack	comm_network/comm_network.h	/^  virtual void AddReadCallBack(void* actor_read_id, void* read_id,$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, void* read_id, std::function<void()> callback)
oneflow::CommNet::AddReadCallBackDone	comm_network/comm_network.h	/^  virtual void AddReadCallBackDone(void* actor_read_id, void* read_id) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, void* read_id)
oneflow::CommNet::CommNet	comm_network/comm_network.h	/^  CommNet() = default;$/;"	p	class:oneflow::CommNet	access:protected	signature:()
oneflow::CommNet::DeleteActorReadId	comm_network/comm_network.h	/^  virtual void DeleteActorReadId(void* actor_read_id) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id)
oneflow::CommNet::NewActorReadId	comm_network/comm_network.h	/^  virtual void* NewActorReadId() = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:()
oneflow::CommNet::OF_DISALLOW_COPY_AND_MOVE	comm_network/comm_network.h	/^  OF_DISALLOW_COPY_AND_MOVE(CommNet);$/;"	p	class:oneflow::CommNet	access:public	signature:(CommNet)
oneflow::CommNet::Read	comm_network/comm_network.h	/^  virtual void* Read(void* actor_read_id, int64_t src_machine_id,$/;"	p	class:oneflow::CommNet	access:public	signature:(void* actor_read_id, int64_t src_machine_id, const void* src_token, const void* dst_token)
oneflow::CommNet::RegisterMemory	comm_network/comm_network.h	/^  virtual const void* RegisterMemory(void* dptr, size_t byte_size) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(void* dptr, size_t byte_size)
oneflow::CommNet::RegisterMemoryDone	comm_network/comm_network.h	/^  virtual void RegisterMemoryDone() = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:()
oneflow::CommNet::SendActorMsg	comm_network/comm_network.h	/^  virtual void SendActorMsg(int64_t dst_machine_id, const ActorMsg& msg) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(int64_t dst_machine_id, const ActorMsg& msg)
oneflow::CommNet::Singleton	comm_network/comm_network.h	/^  static CommNet* Singleton() { return comm_network_ptr_; }$/;"	f	class:oneflow::CommNet	access:public	signature:()
oneflow::CommNet::UnRegisterMemory	comm_network/comm_network.h	/^  virtual void UnRegisterMemory(const void* token) = 0;$/;"	p	class:oneflow::CommNet	access:public	signature:(const void* token)
oneflow::CommNet::comm_network_ptr_	comm_network/comm_network.cpp	/^CommNet* CommNet::comm_network_ptr_;$/;"	m	class:oneflow::CommNet	file:
oneflow::CommNet::comm_network_ptr_	comm_network/comm_network.h	/^  static CommNet* comm_network_ptr_;$/;"	m	class:oneflow::CommNet	access:private
oneflow::CommNet::set_comm_network_ptr	comm_network/comm_network.h	/^  static void set_comm_network_ptr(CommNet* val) { comm_network_ptr_ = val; }$/;"	f	class:oneflow::CommNet	access:protected	signature:(CommNet* val)
oneflow::CommNet::~CommNet	comm_network/comm_network.h	/^  virtual ~CommNet() = default;$/;"	p	class:oneflow::CommNet	access:public	signature:()
oneflow::CompActor	actor/compute_actor.h	/^class CompActor : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
oneflow::CompActor::CompActor	actor/compute_actor.h	/^  CompActor() = default;$/;"	p	class:oneflow::CompActor	access:protected	signature:()
oneflow::CompActor::OF_DISALLOW_COPY_AND_MOVE	actor/compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CompActor);$/;"	p	class:oneflow::CompActor	access:public	signature:(CompActor)
oneflow::CompActor::VirtualCompActorInit	actor/compute_actor.h	/^  virtual void VirtualCompActorInit(const TaskProto& task_proto) {}$/;"	f	class:oneflow::CompActor	access:protected	signature:(const TaskProto& task_proto)
oneflow::CompActor::~CompActor	actor/compute_actor.h	/^  virtual ~CompActor() = default;$/;"	p	class:oneflow::CompActor	access:public	signature:()
oneflow::CompTaskNode	graph/compute_task_node.h	/^class CompTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
oneflow::CompTaskNode::CompTaskNode	graph/compute_task_node.h	/^  CompTaskNode() = default;$/;"	p	class:oneflow::CompTaskNode	access:public	signature:()
oneflow::CompTaskNode::FixThrdId	graph/compute_task_node.h	/^  virtual void FixThrdId() {}$/;"	f	class:oneflow::CompTaskNode	access:public	signature:()
oneflow::CompTaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CompTaskNode);$/;"	p	class:oneflow::CompTaskNode	access:public	signature:(CompTaskNode)
oneflow::CompTaskNode::ToProto	graph/compute_task_node.cpp	/^void CompTaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::CompTaskNode	signature:(TaskProto* task_proto)
oneflow::CompTaskNode::chain_node	graph/compute_task_node.h	/^  const ChainNode* chain_node() const { return chain_node_; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:() const
oneflow::CompTaskNode::chain_node_	graph/compute_task_node.h	/^  const ChainNode* chain_node_;$/;"	m	class:oneflow::CompTaskNode	access:private
oneflow::CompTaskNode::mut_parallel_ctx	graph/compute_task_node.h	/^  ParallelContext* mut_parallel_ctx() { return &parallel_ctx_; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:()
oneflow::CompTaskNode::override	graph/compute_task_node.h	/^  virtual void ToProto(TaskProto*) override;$/;"	m	class:oneflow::CompTaskNode	access:public
oneflow::CompTaskNode::parallel_ctx_	graph/compute_task_node.h	/^  ParallelContext parallel_ctx_;$/;"	m	class:oneflow::CompTaskNode	access:private
oneflow::CompTaskNode::parallel_id	graph/compute_task_node.h	/^  int64_t parallel_id() const { return parallel_ctx_.parallel_id(); }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:() const
oneflow::CompTaskNode::set_chain_node	graph/compute_task_node.h	/^  void set_chain_node(const ChainNode* val) { chain_node_ = val; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:(const ChainNode* val)
oneflow::CompTaskNode::~CompTaskNode	graph/compute_task_node.h	/^  virtual ~CompTaskNode() = default;$/;"	p	class:oneflow::CompTaskNode	access:public	signature:()
oneflow::Compiler::Compile	job/compiler.cpp	/^Plan Compiler::Compile() {$/;"	f	class:oneflow::Compiler	signature:()
oneflow::Compiler::DoCompile	job/compiler.cpp	/^Plan Compiler::DoCompile() {$/;"	f	class:oneflow::Compiler	signature:()
oneflow::ComputePackedBlobDesc	register/blob_desc.cpp	/^BlobDesc ComputePackedBlobDesc(std::function<const BlobDesc*()> NextBlobDesc) {$/;"	f	namespace:oneflow	signature:(std::function<const BlobDesc*()> NextBlobDesc)
oneflow::ComputePackedBlobDesc	register/blob_desc.h	/^BlobDesc ComputePackedBlobDesc(std::function<const BlobDesc*()> NextBlobDesc);$/;"	p	namespace:oneflow	signature:(std::function<const BlobDesc*()> NextBlobDesc)
oneflow::ConcatKernel::BackwardDataContent	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::BackwardDataContent($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConcatKernel::ConcatKernelWork	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ConcatKernelWork($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, const std::string& obn, const PbRpf<std::string>& ibns, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConcatKernel::ForwardDataContent	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ForwardDataContent($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConcatKernel::ForwardDataId	kernel/concat_kernel.cpp	/^void ConcatKernel<device_type>::ForwardDataId($/;"	f	class:oneflow::ConcatKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConcatOp::GetSpecialConf	operator/concat_op.cpp	/^const PbMessage& ConcatOp::GetSpecialConf() const {$/;"	f	class:oneflow::ConcatOp	signature:() const
oneflow::ConcatOp::InferBlobDescs	operator/concat_op.cpp	/^void ConcatOp::InferBlobDescs($/;"	f	class:oneflow::ConcatOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::ConcatOp::InitFromOpConf	operator/concat_op.cpp	/^void ConcatOp::InitFromOpConf() {$/;"	f	class:oneflow::ConcatOp	signature:()
oneflow::ConcatOp::VirtualGenKernelConf	operator/concat_op.cpp	/^void ConcatOp::VirtualGenKernelConf($/;"	f	class:oneflow::ConcatOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::Connect	graph/node.h	/^void Connect(NodeType* src_node, EdgeType* edge, NodeType* dst_node) {$/;"	f	namespace:oneflow	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
oneflow::ConstructKernel	kernel/kernel.cpp	/^std::unique_ptr<const Kernel> ConstructKernel($/;"	f	namespace:oneflow	signature:( DeviceType device_type, const ParallelContext* parallel_ctx, const KernelConf& conf)
oneflow::ConstructKernel	kernel/kernel.h	/^std::unique_ptr<const Kernel> ConstructKernel(DeviceType,$/;"	p	namespace:oneflow	signature:(DeviceType, const ParallelContext*, const KernelConf&)
oneflow::ConstructModelUpdateOp	graph/chain_graph.cpp	/^std::shared_ptr<const Operator> ConstructModelUpdateOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::ConstructOp	operator/operator.cpp	/^std::shared_ptr<Operator> ConstructOp(const OperatorConf& op_conf) {$/;"	f	namespace:oneflow	signature:(const OperatorConf& op_conf)
oneflow::ConstructOp	operator/operator.h	/^std::shared_ptr<Operator> ConstructOp(const OperatorConf&);$/;"	p	namespace:oneflow	signature:(const OperatorConf&)
oneflow::ConvolutionKernel::BackwardDataContent	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::ComputeBiasDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeBiasDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::ComputeInputDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeInputDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::ComputeWeightDiff	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ComputeWeightDiff($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::ForwardDataContent	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::InitModelBlobsWithDir	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelBlobsWithDir($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::InitModelBlobsWithRandomSeed	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionKernel::InitModelTmpBlobs	kernel/convolution_kernel.cpp	/^void ConvolutionKernel<device_type, T>::InitModelTmpBlobs($/;"	f	class:oneflow::ConvolutionKernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ConvolutionOp::GetSpecialConf	operator/convolution_op.cpp	/^const PbMessage& ConvolutionOp::GetSpecialConf() const {$/;"	f	class:oneflow::ConvolutionOp	signature:() const
oneflow::ConvolutionOp::InferBlobDescs	operator/convolution_op.cpp	/^void ConvolutionOp::InferBlobDescs($/;"	f	class:oneflow::ConvolutionOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::ConvolutionOp::InitFromOpConf	operator/convolution_op.cpp	/^void ConvolutionOp::InitFromOpConf() {$/;"	f	class:oneflow::ConvolutionOp	signature:()
oneflow::CopyCommNetActor::Act	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::Act() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
oneflow::CopyCommNetActor::AsyncReturnAllReadableRegst	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::AsyncReturnAllReadableRegst() { UNEXPECTED_RUN(); }$/;"	f	class:oneflow::CopyCommNetActor	signature:()
oneflow::CopyCommNetActor::HandlerNormal	actor/copy_comm_net_actor.cpp	/^int CopyCommNetActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const ActorMsg& msg)
oneflow::CopyCommNetActor::InitDeviceCtx	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::InitDeviceCtx(const ThreadCtx&) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const ThreadCtx&)
oneflow::CopyCommNetActor::IsReadAlwaysUnReadyFromNow	actor/copy_comm_net_actor.cpp	/^bool CopyCommNetActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
oneflow::CopyCommNetActor::IsReadReady	actor/copy_comm_net_actor.cpp	/^bool CopyCommNetActor::IsReadReady() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
oneflow::CopyCommNetActor::VirtualActorInit	actor/copy_comm_net_actor.cpp	/^void CopyCommNetActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::CopyCommNetActor	signature:(const TaskProto& task_proto)
oneflow::CopyCommNetActor::~CopyCommNetActor	actor/copy_comm_net_actor.cpp	/^CopyCommNetActor::~CopyCommNetActor() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
oneflow::CopyCommNetOp::GetSpecialConf	operator/copy_comm_net_op.cpp	/^const PbMessage& CopyCommNetOp::GetSpecialConf() const {$/;"	f	class:oneflow::CopyCommNetOp	signature:() const
oneflow::CopyCommNetOp::InitFromOpConf	operator/copy_comm_net_op.cpp	/^void CopyCommNetOp::InitFromOpConf() {$/;"	f	class:oneflow::CopyCommNetOp	signature:()
oneflow::CopyCommNetOp::ibn2lbn	operator/copy_comm_net_op.cpp	/^std::string CopyCommNetOp::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::CopyCommNetOp	signature:(const std::string& input_bn) const
oneflow::CopyCommNetOp::obn2lbn	operator/copy_comm_net_op.cpp	/^std::string CopyCommNetOp::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::CopyCommNetOp	signature:(const std::string& output_bn) const
oneflow::CopyCommNetTaskNode::Init	graph/copy_task_node.cpp	/^void CopyCommNetTaskNode::Init(int64_t machine_id) {$/;"	f	class:oneflow::CopyCommNetTaskNode	signature:(int64_t machine_id)
oneflow::CopyCommNetTaskNode::NewCopyOpConf	graph/copy_task_node.cpp	/^OperatorConf CopyCommNetTaskNode::NewCopyOpConf() {$/;"	f	class:oneflow::CopyCommNetTaskNode	signature:()
oneflow::CopyHdActor::Act	actor/copy_hd_actor.cpp	/^void CopyHdActor::Act() {$/;"	f	class:oneflow::CopyHdActor	signature:()
oneflow::CopyHdActor::AsyncReturnAllReadableRegst	actor/copy_hd_actor.cpp	/^void CopyHdActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::CopyHdActor	signature:()
oneflow::CopyHdActor::HandlerNormal	actor/copy_hd_actor.cpp	/^int CopyHdActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::CopyHdActor	signature:(const ActorMsg& msg)
oneflow::CopyHdActor::InitDeviceCtx	actor/copy_hd_actor.cpp	/^void CopyHdActor::InitDeviceCtx(const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::CopyHdActor	signature:(const ThreadCtx& thread_ctx)
oneflow::CopyHdActor::IsReadAlwaysUnReadyFromNow	actor/copy_hd_actor.cpp	/^bool CopyHdActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::CopyHdActor	signature:()
oneflow::CopyHdActor::VirtualActorInit	actor/copy_hd_actor.cpp	/^void CopyHdActor::VirtualActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::CopyHdActor	signature:(const TaskProto& task_proto)
oneflow::CopyHdKernel::Forward	kernel/copy_hd_kernel.cpp	/^void CopyHdKernel::Forward($/;"	f	class:oneflow::CopyHdKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::CopyHdKernel::VirtualKernelInit	kernel/copy_hd_kernel.cpp	/^void CopyHdKernel::VirtualKernelInit(const ParallelContext*) {$/;"	f	class:oneflow::CopyHdKernel	signature:(const ParallelContext*)
oneflow::CopyHdOp::GetSpecialConf	operator/copy_hd_op.cpp	/^const PbMessage& CopyHdOp::GetSpecialConf() const {$/;"	f	class:oneflow::CopyHdOp	signature:() const
oneflow::CopyHdOp::InitFromOpConf	operator/copy_hd_op.cpp	/^void CopyHdOp::InitFromOpConf() {$/;"	f	class:oneflow::CopyHdOp	signature:()
oneflow::CopyHdTaskNode::Init	graph/copy_task_node.cpp	/^void CopyHdTaskNode::Init(const CompTaskNode* comp_task,$/;"	f	class:oneflow::CopyHdTaskNode	signature:(const CompTaskNode* comp_task, CopyHdOpConf::Type copy_type)
oneflow::CopyHdTaskNode::NewCopyOpConf	graph/copy_task_node.cpp	/^OperatorConf CopyHdTaskNode::NewCopyOpConf() {$/;"	f	class:oneflow::CopyHdTaskNode	signature:()
oneflow::CopyTaskNode	graph/copy_task_node.h	/^class CopyTaskNode : public TaskNode {$/;"	c	namespace:oneflow	inherits:TaskNode
oneflow::CopyTaskNode::BuildExecGphAndRegst	graph/copy_task_node.cpp	/^void CopyTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
oneflow::CopyTaskNode::ConsumeAllRegsts	graph/copy_task_node.cpp	/^void CopyTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
oneflow::CopyTaskNode::CopyTaskNode	graph/copy_task_node.h	/^  CopyTaskNode() = default;$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:()
oneflow::CopyTaskNode::NewCopyOpConf	graph/copy_task_node.h	/^  virtual OperatorConf NewCopyOpConf() = 0;$/;"	p	class:oneflow::CopyTaskNode	access:protected	signature:()
oneflow::CopyTaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyTaskNode);$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:(CopyTaskNode)
oneflow::CopyTaskNode::ProduceAllRegstsAndBindEdges	graph/copy_task_node.cpp	/^void CopyTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::CopyTaskNode	signature:()
oneflow::CopyTaskNode::override	graph/copy_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
oneflow::CopyTaskNode::override	graph/copy_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
oneflow::CopyTaskNode::override	graph/copy_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
oneflow::CopyTaskNode::~CopyTaskNode	graph/copy_task_node.h	/^  virtual ~CopyTaskNode() = default;$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:()
oneflow::CpuThread::CpuThread	thread/cpu_thread.cpp	/^CpuThread::CpuThread(int64_t thrd_id) {$/;"	f	class:oneflow::CpuThread	signature:(int64_t thrd_id)
oneflow::CtrlCallIf	control/ctrl_call.h	/^class CtrlCallIf {$/;"	c	namespace:oneflow
oneflow::CtrlCallIf::CtrlCallIf	control/ctrl_call.h	/^  CtrlCallIf() = default;$/;"	p	class:oneflow::CtrlCallIf	access:protected	signature:()
oneflow::CtrlCallIf::OF_DISALLOW_COPY_AND_MOVE	control/ctrl_call.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlCallIf);$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:(CtrlCallIf)
oneflow::CtrlCallIf::Process	control/ctrl_call.h	/^  virtual void Process() = 0;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
oneflow::CtrlCallIf::SendResponse	control/ctrl_call.h	/^  virtual void SendResponse() = 0;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
oneflow::CtrlCallIf::~CtrlCallIf	control/ctrl_call.h	/^  virtual ~CtrlCallIf() = default;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
oneflow::CtrlClient::Barrier	control/ctrl_client.cpp	/^void CtrlClient::Barrier(const std::string& barrier_name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& barrier_name)
oneflow::CtrlClient::Barrier	control/ctrl_client.cpp	/^void CtrlClient::Barrier(const std::string& barrier_name, int32_t barrier_num) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& barrier_name, int32_t barrier_num)
oneflow::CtrlClient::Clear	control/ctrl_client.cpp	/^void CtrlClient::Clear() {$/;"	f	class:oneflow::CtrlClient	signature:()
oneflow::CtrlClient::ClearKV	control/ctrl_client.cpp	/^void CtrlClient::ClearKV(const std::string& k) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k)
oneflow::CtrlClient::CtrlClient	control/ctrl_client.cpp	/^CtrlClient::CtrlClient() {$/;"	f	class:oneflow::CtrlClient	signature:()
oneflow::CtrlClient::GetResponsibleStub	control/ctrl_client.cpp	/^CtrlService::Stub* CtrlClient::GetResponsibleStub(const std::string& key) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& key)
oneflow::CtrlClient::GetThisStub	control/ctrl_client.cpp	/^CtrlService::Stub* CtrlClient::GetThisStub() {$/;"	f	class:oneflow::CtrlClient	signature:()
oneflow::CtrlClient::LoadServer	control/ctrl_client.cpp	/^void CtrlClient::LoadServer(const std::string& server_addr,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& server_addr, CtrlService::Stub* stub)
oneflow::CtrlClient::NotifyDone	control/ctrl_client.cpp	/^void CtrlClient::NotifyDone(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
oneflow::CtrlClient::PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k, PbMessage* msg) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, PbMessage* msg)
oneflow::CtrlClient::PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k, std::string* v) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::string* v)
oneflow::CtrlClient::PullKV	control/ctrl_client.cpp	/^void CtrlClient::PullKV(const std::string& k,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::function<void(const std::string&)> VGetter)
oneflow::CtrlClient::PushActEvent	control/ctrl_client.cpp	/^void CtrlClient::PushActEvent(const ActEvent& act_event) {$/;"	f	class:oneflow::CtrlClient	signature:(const ActEvent& act_event)
oneflow::CtrlClient::PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k, const PbMessage& msg) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, const PbMessage& msg)
oneflow::CtrlClient::PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k, const std::string& v) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, const std::string& v)
oneflow::CtrlClient::PushKV	control/ctrl_client.cpp	/^void CtrlClient::PushKV(const std::string& k,$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& k, std::function<void(std::string*)> VSetter)
oneflow::CtrlClient::TryLock	control/ctrl_client.cpp	/^TryLockResult CtrlClient::TryLock(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
oneflow::CtrlClient::WaitUntilDone	control/ctrl_client.cpp	/^void CtrlClient::WaitUntilDone(const std::string& name) {$/;"	f	class:oneflow::CtrlClient	signature:(const std::string& name)
oneflow::CtrlMethod	control/ctrl_service.h	/^enum class CtrlMethod {$/;"	c	namespace:oneflow
oneflow::CtrlServer::BarrierHandler	control/ctrl_server.cpp	/^void CtrlServer::BarrierHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<BarrierRequest, BarrierResponse>* call)
oneflow::CtrlServer::ClearHandler	control/ctrl_server.cpp	/^void CtrlServer::ClearHandler(CtrlCall<ClearRequest, ClearResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<ClearRequest, ClearResponse>* call)
oneflow::CtrlServer::ClearKVHandler	control/ctrl_server.cpp	/^void CtrlServer::ClearKVHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<ClearKVRequest, ClearKVResponse>* call)
oneflow::CtrlServer::CtrlServer	control/ctrl_server.cpp	/^CtrlServer::CtrlServer(const std::string& server_addr) {$/;"	f	class:oneflow::CtrlServer	signature:(const std::string& server_addr)
oneflow::CtrlServer::HandleRpcs	control/ctrl_server.cpp	/^void CtrlServer::HandleRpcs() {$/;"	f	class:oneflow::CtrlServer	signature:()
oneflow::CtrlServer::LoadServerHandler	control/ctrl_server.cpp	/^void CtrlServer::LoadServerHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<LoadServerRequest, LoadServerResponse>* call)
oneflow::CtrlServer::NotifyDoneHandler	control/ctrl_server.cpp	/^void CtrlServer::NotifyDoneHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<NotifyDoneRequest, NotifyDoneResponse>* call)
oneflow::CtrlServer::PullKVHandler	control/ctrl_server.cpp	/^void CtrlServer::PullKVHandler(CtrlCall<PullKVRequest, PullKVResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<PullKVRequest, PullKVResponse>* call)
oneflow::CtrlServer::PushActEventHandler	control/ctrl_server.cpp	/^void CtrlServer::PushActEventHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<PushActEventRequest, PushActEventResponse>* call)
oneflow::CtrlServer::PushKVHandler	control/ctrl_server.cpp	/^void CtrlServer::PushKVHandler(CtrlCall<PushKVRequest, PushKVResponse>* call) {$/;"	f	class:oneflow::CtrlServer	signature:(CtrlCall<PushKVRequest, PushKVResponse>* call)
oneflow::CtrlServer::TryLockHandler	control/ctrl_server.cpp	/^void CtrlServer::TryLockHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<TryLockRequest, TryLockResponse>* call)
oneflow::CtrlServer::WaitUntilDoneHandler	control/ctrl_server.cpp	/^void CtrlServer::WaitUntilDoneHandler($/;"	f	class:oneflow::CtrlServer	signature:( CtrlCall<WaitUntilDoneRequest, WaitUntilDoneResponse>* call)
oneflow::CtrlServer::~CtrlServer	control/ctrl_server.cpp	/^CtrlServer::~CtrlServer() {$/;"	f	class:oneflow::CtrlServer	signature:()
oneflow::CtrlService::AsyncService::AsyncService	control/ctrl_service.cpp	/^CtrlService::AsyncService::AsyncService() {$/;"	f	class:oneflow::CtrlService::AsyncService	signature:()
oneflow::CtrlService::NewStub	control/ctrl_service.cpp	/^std::unique_ptr<CtrlService::Stub> CtrlService::NewStub($/;"	f	class:oneflow::CtrlService	signature:( const std::string& addr)
oneflow::CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cublasStatus_t error) {$/;"	f	namespace:oneflow	signature:(cublasStatus_t error)
oneflow::CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cudaError_t error) {$/;"	f	namespace:oneflow	signature:(cudaError_t error)
oneflow::CudaCheck	device/cuda_util.cpp	/^void CudaCheck(cudnnStatus_t error) {$/;"	f	namespace:oneflow	signature:(cudnnStatus_t error)
oneflow::CudaCheck	device/cuda_util.cpp	/^void CudaCheck(curandStatus_t error) {$/;"	f	namespace:oneflow	signature:(curandStatus_t error)
oneflow::CudaCheck	device/cuda_util.h	/^void CudaCheck(T error);$/;"	p	namespace:oneflow	signature:(T error)
oneflow::CudaDeviceCtx::AddCallBack	device/cuda_device_context.cpp	/^void CudaDeviceCtx::AddCallBack(std::function<void()> callback_stack) const {$/;"	f	class:oneflow::CudaDeviceCtx	signature:(std::function<void()> callback_stack) const
oneflow::CudaStreamHandle::cublas_handle	device/cuda_stream_handle.cpp	/^const cublasHandle_t* CudaStreamHandle::cublas_handle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
oneflow::CudaStreamHandle::cuda_stream	device/cuda_stream_handle.cpp	/^const cudaStream_t* CudaStreamHandle::cuda_stream() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
oneflow::CudaStreamHandle::cudnn_handle	device/cuda_stream_handle.cpp	/^const cudnnHandle_t* CudaStreamHandle::cudnn_handle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
oneflow::CudaStreamHandle::~CudaStreamHandle	device/cuda_stream_handle.cpp	/^CudaStreamHandle::~CudaStreamHandle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
oneflow::CyclicPersistentInStream::AddNForCurFilePos	persistence/cyclic_persistent_in_stream.cpp	/^void CyclicPersistentInStream::AddNForCurFilePos(uint64_t n) {$/;"	f	class:oneflow::CyclicPersistentInStream	signature:(uint64_t n)
oneflow::CyclicPersistentInStream::CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.cpp	/^CyclicPersistentInStream::CyclicPersistentInStream(fs::FileSystem* fs,$/;"	f	class:oneflow::CyclicPersistentInStream	signature:(fs::FileSystem* fs, const std::string& file_path)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(bool, Bool);$/;"	p	namespace:oneflow	signature:(bool, Bool)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(const PbMessage&, Message);$/;"	p	namespace:oneflow	signature:(const PbMessage&, Message)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(int32_t, Int32);$/;"	p	namespace:oneflow	signature:(int32_t, Int32)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(int64_t, Int64);$/;"	p	namespace:oneflow	signature:(int64_t, Int64)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(std::string, String);$/;"	p	namespace:oneflow	signature:(std::string, String)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(uint32_t, UInt32);$/;"	p	namespace:oneflow	signature:(uint32_t, UInt32)
oneflow::DECLARE_GET_VAL_FROM_PBMESSAGE	common/protobuf.h	/^DECLARE_GET_VAL_FROM_PBMESSAGE(uint64_t, UInt64);$/;"	p	namespace:oneflow	signature:(uint64_t, UInt64)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndClone)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndDataSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndDataSplit)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, AddAndModelSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, AddAndModelSplit)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, DataConcatAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, DataConcatAndClone)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, DataConcatAndModelSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, DataConcatAndModelSplit)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, ModelConcatAndClone) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, ModelConcatAndClone)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(BoxingTaskNode, ModelConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(BoxingTaskNode, ModelConcatAndDataSplit)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(InBoxingTaskNode, DataConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(InBoxingTaskNode, DataConcatAndDataSplit)
oneflow::DEFINE_BLD_BOXING_OP_CONF_METHOD	graph/boxing_task_node.cpp	/^DEFINE_BLD_BOXING_OP_CONF_METHOD(OutBoxingTaskNode, DataConcatAndDataSplit) {$/;"	f	namespace:oneflow	signature:(OutBoxingTaskNode, DataConcatAndDataSplit)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(bool, Bool);$/;"	p	namespace:oneflow	file:	signature:(bool, Bool)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(const PbMessage&, Message);$/;"	p	namespace:oneflow	file:	signature:(const PbMessage&, Message)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(int32_t, Int32);$/;"	p	namespace:oneflow	file:	signature:(int32_t, Int32)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(int64_t, Int64);$/;"	p	namespace:oneflow	file:	signature:(int64_t, Int64)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(std::string, String);$/;"	p	namespace:oneflow	file:	signature:(std::string, String)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(uint32_t, UInt32);$/;"	p	namespace:oneflow	file:	signature:(uint32_t, UInt32)
oneflow::DEFINE_GET_VAL_FROM_PBMESSAGE	common/protobuf.cpp	/^DEFINE_GET_VAL_FROM_PBMESSAGE(uint64_t, UInt64);$/;"	p	namespace:oneflow	file:	signature:(uint64_t, UInt64)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(int, strtol);$/;"	p	namespace:oneflow	file:	signature:(int, strtol)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(long long, strtoll);$/;"	p	namespace:oneflow	file:	signature:(long long, strtoll)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(long, strtol);$/;"	p	namespace:oneflow	file:	signature:(long, strtol)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(short, strtol);$/;"	p	namespace:oneflow	file:	signature:(short, strtol)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(signed char, strtol);$/;"	p	namespace:oneflow	file:	signature:(signed char, strtol)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned char, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned char, strtoul)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned int, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned int, strtoul)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned long long, strtoull);$/;"	p	namespace:oneflow	file:	signature:(unsigned long long, strtoull)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned long, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned long, strtoul)
oneflow::DEFINE_ONEFLOW_STR2INT_CAST	common/util.cpp	/^DEFINE_ONEFLOW_STR2INT_CAST(unsigned short, strtoul);$/;"	p	namespace:oneflow	file:	signature:(unsigned short, strtoul)
oneflow::DataLoaderKernel::Forward	kernel/data_loader_kernel.cpp	/^void DataLoaderKernel<T>::Forward($/;"	f	class:oneflow::DataLoaderKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::DataLoaderKernel::VirtualKernelInit	kernel/data_loader_kernel.cpp	/^void DataLoaderKernel<T>::VirtualKernelInit($/;"	f	class:oneflow::DataLoaderKernel	signature:( const ParallelContext* parallel_ctx)
oneflow::DataLoaderOp::GetSpecialConf	operator/data_loader_op.cpp	/^const PbMessage& DataLoaderOp::GetSpecialConf() const {$/;"	f	class:oneflow::DataLoaderOp	signature:() const
oneflow::DataLoaderOp::InferBlobDescs	operator/data_loader_op.cpp	/^void DataLoaderOp::InferBlobDescs($/;"	f	class:oneflow::DataLoaderOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::DataLoaderOp::InitFromOpConf	operator/data_loader_op.cpp	/^void DataLoaderOp::InitFromOpConf() {$/;"	f	class:oneflow::DataLoaderOp	signature:()
oneflow::DeviceCtx	device/device_context.h	/^class DeviceCtx {$/;"	c	namespace:oneflow
oneflow::DeviceCtx::AddCallBack	device/device_context.h	/^  virtual void AddCallBack(std::function<void()>) const = 0;$/;"	p	class:oneflow::DeviceCtx	access:public	signature:(std::function<void()>) const
oneflow::DeviceCtx::DeviceCtx	device/device_context.h	/^  DeviceCtx()$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:()
oneflow::DeviceCtx::cublas_handle	device/device_context.h	/^  const cublasHandle_t& cublas_handle() const { return *cublas_handle_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
oneflow::DeviceCtx::cublas_handle_	device/device_context.h	/^  const cublasHandle_t* cublas_handle_;$/;"	m	class:oneflow::DeviceCtx	access:private
oneflow::DeviceCtx::cuda_stream	device/device_context.h	/^  const cudaStream_t& cuda_stream() const { return *cuda_stream_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
oneflow::DeviceCtx::cuda_stream_	device/device_context.h	/^  const cudaStream_t* cuda_stream_;$/;"	m	class:oneflow::DeviceCtx	access:private
oneflow::DeviceCtx::cudnn_handle	device/device_context.h	/^  const cudnnHandle_t& cudnn_handle() const { return *cudnn_handle_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
oneflow::DeviceCtx::cudnn_handle_	device/device_context.h	/^  const cudnnHandle_t* cudnn_handle_;$/;"	m	class:oneflow::DeviceCtx	access:private
oneflow::DeviceCtx::set_cublas_handle	device/device_context.h	/^  void set_cublas_handle(const cublasHandle_t* val) { cublas_handle_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cublasHandle_t* val)
oneflow::DeviceCtx::set_cuda_stream	device/device_context.h	/^  void set_cuda_stream(const cudaStream_t* val) { cuda_stream_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cudaStream_t* val)
oneflow::DeviceCtx::set_cudnn_handle	device/device_context.h	/^  void set_cudnn_handle(const cudnnHandle_t* val) { cudnn_handle_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cudnnHandle_t* val)
oneflow::DeviceCtx::set_work_stream_id	device/device_context.h	/^  void set_work_stream_id(int64_t val) { work_stream_id_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(int64_t val)
oneflow::DeviceCtx::work_stream_id	device/device_context.h	/^  int64_t work_stream_id() const { return work_stream_id_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
oneflow::DeviceCtx::work_stream_id_	device/device_context.h	/^  int64_t work_stream_id_;$/;"	m	class:oneflow::DeviceCtx	access:private
oneflow::DeviceCtx::~DeviceCtx	device/device_context.h	/^  virtual ~DeviceCtx() = default;$/;"	p	class:oneflow::DeviceCtx	access:public	signature:()
oneflow::Dirname	common/str_util.cpp	/^std::string Dirname(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
oneflow::Dirname	common/str_util.h	/^std::string Dirname(const std::string& path);$/;"	p	namespace:oneflow	signature:(const std::string& path)
oneflow::DisConnect	graph/node.h	/^void DisConnect(EdgeType* edge) {$/;"	f	namespace:oneflow	signature:(EdgeType* edge)
oneflow::Edge	graph/node.h	/^class Edge {$/;"	c	namespace:oneflow
oneflow::Edge::Connect	graph/node.h	/^  friend void Connect<NodeType, EdgeType>(NodeType* src_node, EdgeType* edge,$/;"	p	class:oneflow::Edge	access:friend	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
oneflow::Edge::DisConnect	graph/node.h	/^  friend void DisConnect<EdgeType>(EdgeType* edge);$/;"	p	class:oneflow::Edge	access:friend	signature:(EdgeType* edge)
oneflow::Edge::Edge	graph/node.h	/^  Edge() {$/;"	f	class:oneflow::Edge	access:public	signature:()
oneflow::Edge::OF_DISALLOW_COPY_AND_MOVE	graph/node.h	/^  OF_DISALLOW_COPY_AND_MOVE(Edge);$/;"	p	class:oneflow::Edge	access:public	signature:(Edge)
oneflow::Edge::VisualStr	graph/node.h	/^  virtual std::string VisualStr() const { return ""; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
oneflow::Edge::dst_node	graph/node.h	/^  NodeType* dst_node() const { return dst_node_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
oneflow::Edge::dst_node_	graph/node.h	/^  NodeType* dst_node_;$/;"	m	class:oneflow::Edge	access:private
oneflow::Edge::edge_id	graph/node.h	/^  int64_t edge_id() const { return edge_id_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
oneflow::Edge::edge_id_	graph/node.h	/^  int64_t edge_id_;$/;"	m	class:oneflow::Edge	access:private
oneflow::Edge::src_node	graph/node.h	/^  NodeType* src_node() const { return src_node_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
oneflow::Edge::src_node_	graph/node.h	/^  NodeType* src_node_;$/;"	m	class:oneflow::Edge	access:private
oneflow::Edge::~Edge	graph/node.h	/^  virtual ~Edge() = default;$/;"	p	class:oneflow::Edge	access:public	signature:()
oneflow::EpollCommNet::AddReadCallBack	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::AddReadCallBack(void* actor_read_id, void* read_id,$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, void* read_id, std::function<void()> callback)
oneflow::EpollCommNet::AddReadCallBackDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::AddReadCallBackDone(void* actor_read_id, void* read_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, void* read_id)
oneflow::EpollCommNet::DeleteActorReadId	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::DeleteActorReadId(void* actor_read_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id)
oneflow::EpollCommNet::EpollCommNet	comm_network/epoll/epoll_comm_network.cpp	/^EpollCommNet::EpollCommNet() {$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EpollCommNet::FinishOneReadContext	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::FinishOneReadContext(ActorReadContext* actor_read_ctx,$/;"	f	class:oneflow::EpollCommNet	signature:(ActorReadContext* actor_read_ctx, ReadContext* read_ctx)
oneflow::EpollCommNet::GetSocketHelper	comm_network/epoll/epoll_comm_network.cpp	/^SocketHelper* EpollCommNet::GetSocketHelper(int64_t machine_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t machine_id)
oneflow::EpollCommNet::IncreaseDoneCnt	comm_network/epoll/epoll_comm_network.cpp	/^int8_t EpollCommNet::IncreaseDoneCnt(ReadContext* read_ctx) {$/;"	f	class:oneflow::EpollCommNet	signature:(ReadContext* read_ctx)
oneflow::EpollCommNet::Init	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::Init() {$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EpollCommNet::InitSockets	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::InitSockets() {$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EpollCommNet::NewActorReadId	comm_network/epoll/epoll_comm_network.cpp	/^void* EpollCommNet::NewActorReadId() { return new ActorReadContext; }$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EpollCommNet::Read	comm_network/epoll/epoll_comm_network.cpp	/^void* EpollCommNet::Read(void* actor_read_id, int64_t src_machine_id,$/;"	f	class:oneflow::EpollCommNet	signature:(void* actor_read_id, int64_t src_machine_id, const void* src_token, const void* dst_token)
oneflow::EpollCommNet::ReadDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::ReadDone(void* read_done_id) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* read_done_id)
oneflow::EpollCommNet::RegisterMemory	comm_network/epoll/epoll_comm_network.cpp	/^const void* EpollCommNet::RegisterMemory(void* mem_ptr, size_t byte_size) {$/;"	f	class:oneflow::EpollCommNet	signature:(void* mem_ptr, size_t byte_size)
oneflow::EpollCommNet::RegisterMemoryDone	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::RegisterMemoryDone() {$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EpollCommNet::SendActorMsg	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::SendActorMsg(int64_t dst_machine_id,$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t dst_machine_id, const ActorMsg& actor_msg)
oneflow::EpollCommNet::SendSocketMsg	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::SendSocketMsg(int64_t dst_machine_id, const SocketMsg& msg) {$/;"	f	class:oneflow::EpollCommNet	signature:(int64_t dst_machine_id, const SocketMsg& msg)
oneflow::EpollCommNet::UnRegisterMemory	comm_network/epoll/epoll_comm_network.cpp	/^void EpollCommNet::UnRegisterMemory(const void* token) {$/;"	f	class:oneflow::EpollCommNet	signature:(const void* token)
oneflow::EpollCommNet::~EpollCommNet	comm_network/epoll/epoll_comm_network.cpp	/^EpollCommNet::~EpollCommNet() {$/;"	f	class:oneflow::EpollCommNet	signature:()
oneflow::EraseIf	common/util.h	/^void EraseIf(HashMap<K, V>* hash_map,$/;"	f	namespace:oneflow	signature:(HashMap<K, V>* hash_map, std::function<bool(typename HashMap<K, V>::iterator)> cond)
oneflow::ExecGraph::ToExecSequence	graph/exec_graph.cpp	/^void ExecGraph::ToExecSequence(bool is_forward,$/;"	f	class:oneflow::ExecGraph	signature:(bool is_forward, const ParallelContext* parallel_ctx, ExecSequence* ret) const
oneflow::ExecNode	graph/exec_graph.h	/^class ExecNode;$/;"	x
oneflow::ExecNode::BindBnInOpAndRegst	graph/exec_graph.cpp	/^void ExecNode::BindBnInOpAndRegst(const std::string& bn_in_op,$/;"	f	class:oneflow::ExecNode	signature:(const std::string& bn_in_op, std::weak_ptr<RegstDesc> regst)
oneflow::ExecNode::GetBlobDesc4BnInOp	graph/exec_graph.cpp	/^BlobDesc* ExecNode::GetBlobDesc4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::ExecNode	signature:(const std::string& bn_in_op) const
oneflow::ExecNode::GetBlobDesc4BnInOpFunc	graph/exec_graph.cpp	/^std::function<BlobDesc*(const std::string&)> ExecNode::GetBlobDesc4BnInOpFunc()$/;"	f	class:oneflow::ExecNode	signature:() const
oneflow::ExecNode::ToProto	graph/exec_graph.cpp	/^void ExecNode::ToProto(bool is_forward, const ParallelContext* parallel_ctx,$/;"	f	class:oneflow::ExecNode	signature:(bool is_forward, const ParallelContext* parallel_ctx, ExecNodeProto* ret) const
oneflow::FindIntersectant	common/range.cpp	/^Range FindIntersectant(const Range& lhs, const Range& rhs) {$/;"	f	namespace:oneflow	signature:(const Range& lhs, const Range& rhs)
oneflow::FindIntersectant	common/range.h	/^Range FindIntersectant(const Range& lhs, const Range& rhs);$/;"	p	namespace:oneflow	signature:(const Range& lhs, const Range& rhs)
oneflow::FindLbnsBetween	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetween(const ChainNode* in_chain,$/;"	f	namespace:oneflow	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::FindLbnsBetween	graph/chain_node.h	/^std::vector<std::string> FindLbnsBetween(const ChainNode* in_chain,$/;"	p	namespace:oneflow	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::ForwardChainNode::FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> ForwardChainNode::FindLbnsFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> ForwardChainNode::FindLbnsFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd ForwardChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd ForwardChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode*) const
oneflow::ForwardChainNode::GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd ForwardChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::ForwardChainNode	signature:( const ChainNode* node) const
oneflow::ForwardChainNode::set_data_output_lbns	graph/chain_node.cpp	/^void ForwardChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::ForwardChainNode	signature:()
oneflow::ForwardCompActor::Act	actor/forward_compute_actor.cpp	/^void ForwardCompActor::Act() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::AsyncReturnAllReadableRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::AsyncReturnModelRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::AsyncReturnModelRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::HandlerInitModel	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerInitModel(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
oneflow::ForwardCompActor::HandlerInitModelTmp	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerInitModelTmp(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
oneflow::ForwardCompActor::HandlerNormal	actor/forward_compute_actor.cpp	/^int ForwardCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const ActorMsg& msg)
oneflow::ForwardCompActor::IsReadAlwaysUnReadyFromNow	actor/forward_compute_actor.cpp	/^bool ForwardCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::IsReadReady	actor/forward_compute_actor.cpp	/^bool ForwardCompActor::IsReadReady() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::SwitchToHandlerInitModelTmpOrNormal	actor/forward_compute_actor.cpp	/^void ForwardCompActor::SwitchToHandlerInitModelTmpOrNormal() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::TryAsyncReturnModelRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::TryAsyncReturnModelRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::TryAsyncReturnModelTmpRegst	actor/forward_compute_actor.cpp	/^void ForwardCompActor::TryAsyncReturnModelTmpRegst() {$/;"	f	class:oneflow::ForwardCompActor	signature:()
oneflow::ForwardCompActor::UpdateModelRegstPtr	actor/forward_compute_actor.cpp	/^void ForwardCompActor::UpdateModelRegstPtr(Regst* regst) {$/;"	f	class:oneflow::ForwardCompActor	signature:(Regst* regst)
oneflow::ForwardCompActor::VirtualCompActorInit	actor/forward_compute_actor.cpp	/^void ForwardCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::ForwardCompActor	signature:(const TaskProto& task_proto)
oneflow::ForwardCompTaskNode::BuildActivationRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildActivationRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::BuildExecGphAndRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::BuildExecGphStructAndBindInRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildExecGphStructAndBindInRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::BuildModelAndTmpRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildModelAndTmpRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::BuildOutRegst	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::BuildOutRegst() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::ConsumeAllRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::IsReadyForBuild	graph/forward_compute_task_node.cpp	/^bool ForwardCompTaskNode::IsReadyForBuild() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::LockRegsts	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::LockRegsts() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::ForwardCompTaskNode::ProduceAllRegstsAndBindEdges	graph/forward_compute_task_node.cpp	/^void ForwardCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::ForwardCompTaskNode	signature:()
oneflow::GenDiffBn	operator/operator.cpp	/^std::string GenDiffBn(const std::string& bn) { return bn + "_diff"; }$/;"	f	namespace:oneflow	signature:(const std::string& bn)
oneflow::GenDiffBn	operator/operator.h	/^std::string GenDiffBn(const std::string& bn);$/;"	p	namespace:oneflow	signature:(const std::string& bn)
oneflow::GenUnDiffBn	operator/operator.cpp	/^std::string GenUnDiffBn(const std::string& diff_bn) {$/;"	f	namespace:oneflow	signature:(const std::string& diff_bn)
oneflow::GenUnDiffBn	operator/operator.h	/^std::string GenUnDiffBn(const std::string& diff_bn);$/;"	p	namespace:oneflow	signature:(const std::string& diff_bn)
oneflow::GetBnInOpFromLbn	operator/operator.cpp	/^std::string GetBnInOpFromLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
oneflow::GetBnInOpFromLbn	operator/operator.h	/^std::string GetBnInOpFromLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
oneflow::GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind;$/;"	x
oneflow::GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind<DeviceType::kCPU> {$/;"	s	namespace:oneflow
oneflow::GetCudaMemcpyKind	kernel/kernel_util.h	/^struct GetCudaMemcpyKind<DeviceType::kGPU> {$/;"	s	namespace:oneflow
oneflow::GetCudaMemcpyKind::val	kernel/kernel_util.h	/^  static const cudaMemcpyKind val = cudaMemcpyKind::cudaMemcpyDeviceToDevice;$/;"	m	struct:oneflow::GetCudaMemcpyKind	access:public
oneflow::GetCudaMemcpyKind::val	kernel/kernel_util.h	/^  static const cudaMemcpyKind val = cudaMemcpyKind::cudaMemcpyHostToHost;$/;"	m	struct:oneflow::GetCudaMemcpyKind	access:public
oneflow::GetCurTime	common/util.h	/^inline double GetCurTime() {$/;"	f	namespace:oneflow	signature:()
oneflow::GetCwd	common/process_state.h	/^inline std::string GetCwd() {$/;"	f	namespace:oneflow	signature:()
oneflow::GetDataType	common/data_type.h	/^struct GetDataType;$/;"	x
oneflow::GetDataType	common/data_type.h	/^struct GetDataType<void> {$/;"	s	namespace:oneflow
oneflow::GetDataType::val	common/data_type.cpp	/^const DataType GetDataType<void>::val = DataType::kChar;$/;"	m	class:oneflow::GetDataType	file:
oneflow::GetDataType::val	common/data_type.h	/^  static const DataType val;$/;"	m	struct:oneflow::GetDataType	access:public
oneflow::GetHashKey	common/str_util.h	/^std::string GetHashKey(const T&... args) {$/;"	f	namespace:oneflow	signature:(const T&.... args)
oneflow::GetLastPieceIdForModelVersionId	actor/compute_actor.h	/^inline int64_t GetLastPieceIdForModelVersionId(int64_t model_version_id) {$/;"	f	namespace:oneflow	signature:(int64_t model_version_id)
oneflow::GetOpNameFromLbn	operator/operator.cpp	/^std::string GetOpNameFromLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
oneflow::GetOpNameFromLbn	operator/operator.h	/^std::string GetOpNameFromLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
oneflow::GetPartIdAndPartNumFromParallelCtx	job/parallel_desc.cpp	/^std::tuple<int32_t, int32_t> GetPartIdAndPartNumFromParallelCtx($/;"	f	namespace:oneflow	signature:( const ParallelContext* parallel_ctx)
oneflow::GetPartIdAndPartNumFromParallelCtx	job/parallel_desc.h	/^std::tuple<int32_t, int32_t> GetPartIdAndPartNumFromParallelCtx($/;"	p	namespace:oneflow	signature:( const ParallelContext* parallel_ctx)
oneflow::GetSizeOf	common/data_type.h	/^struct GetSizeOf;$/;"	x
oneflow::GetSizeOfDataType	common/data_type.h	/^inline size_t GetSizeOfDataType(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
oneflow::GetTestPoolingOp	operator/pooling_op_test.cpp	/^std::shared_ptr<Operator> GetTestPoolingOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::GlobalFS	persistence/file_system.cpp	/^fs::FileSystem* GlobalFS() {$/;"	f	namespace:oneflow	signature:()
oneflow::GlobalFS	persistence/file_system.h	/^fs::FileSystem* GlobalFS();$/;"	p	namespace:oneflow	signature:()
oneflow::GpuThread::GpuThread	thread/gpu_thread.cpp	/^GpuThread::GpuThread(int64_t thrd_id, int64_t dev_id) {$/;"	f	class:oneflow::GpuThread	signature:(int64_t thrd_id, int64_t dev_id)
oneflow::Graph	graph/graph.h	/^class Graph {$/;"	c	namespace:oneflow
oneflow::Graph::AddAllocatedEdge	graph/graph.h	/^  void AddAllocatedEdge(EdgeType*);$/;"	p	class:oneflow::Graph	access:public	signature:(EdgeType*)
oneflow::Graph::AddAllocatedEdge	graph/graph.h	/^void Graph<NodeType, EdgeType>::AddAllocatedEdge(EdgeType* edge) {$/;"	f	class:oneflow::Graph	signature:(EdgeType* edge)
oneflow::Graph::AddAllocatedNode	graph/graph.h	/^  void AddAllocatedNode(NodeType*);$/;"	p	class:oneflow::Graph	access:public	signature:(NodeType*)
oneflow::Graph::AddAllocatedNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::AddAllocatedNode(NodeType* node) {$/;"	f	class:oneflow::Graph	signature:(NodeType* node)
oneflow::Graph::ForEachEdge	graph/graph.h	/^  void ForEachEdge(std::function<void(EdgeType*)> EdgeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(EdgeType*)> EdgeHandler) const
oneflow::Graph::ForEachEdge	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachEdge($/;"	f	class:oneflow::Graph	signature:( std::function<void(EdgeType*)> EdgeHandler) const
oneflow::Graph::ForEachNode	graph/graph.h	/^  void ForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::ForEachNode	graph/graph.h	/^  void ForEachNode(std::function<void(NodeType*)> NodeHandler,$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler, std::function<bool(NodeType*)> IsNodeReady) const
oneflow::Graph::ForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::ForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler, std::function<bool(NodeType*)> IsNodeReady) const
oneflow::Graph::Graph	graph/graph.h	/^  Graph() = default;$/;"	p	class:oneflow::Graph	access:public	signature:()
oneflow::Graph::NewEdge	graph/graph.h	/^  EdgeType* NewEdge();$/;"	p	class:oneflow::Graph	access:public	signature:()
oneflow::Graph::NewEdge	graph/graph.h	/^EdgeType* Graph<NodeType, EdgeType>::NewEdge() {$/;"	f	class:oneflow::Graph	signature:()
oneflow::Graph::NewNode	graph/graph.h	/^  DerivedNodeType* NewNode();$/;"	p	class:oneflow::Graph	access:public	signature:()
oneflow::Graph::NewNode	graph/graph.h	/^DerivedNodeType* Graph<NodeType, EdgeType>::NewNode() {$/;"	f	class:oneflow::Graph	signature:()
oneflow::Graph::OF_DISALLOW_COPY_AND_MOVE	graph/graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(Graph);$/;"	p	class:oneflow::Graph	access:public	signature:(Graph)
oneflow::Graph::ReverseTopoForEachNode	graph/graph.h	/^  void ReverseTopoForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::ReverseTopoForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::ReverseTopoForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::SoleNode	graph/graph.h	/^  NodeType* SoleNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::SoleNode	graph/graph.h	/^NodeType* Graph<NodeType, EdgeType>::SoleNode() const {$/;"	f	class:oneflow::Graph	signature:() const
oneflow::Graph::SoleSinkNode	graph/graph.h	/^  NodeType* SoleSinkNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::SoleSourceNode	graph/graph.h	/^  NodeType* SoleSourceNode() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::ToDotWithAutoFilePath	graph/graph.h	/^  void ToDotWithAutoFilePath();$/;"	p	class:oneflow::Graph	access:public	signature:()
oneflow::Graph::ToDotWithAutoFilePath	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithAutoFilePath() {$/;"	f	class:oneflow::Graph	signature:()
oneflow::Graph::ToDotWithFilePath	graph/graph.h	/^  void ToDotWithFilePath(const std::string& file_path);$/;"	p	class:oneflow::Graph	access:public	signature:(const std::string& file_path)
oneflow::Graph::ToDotWithFilePath	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithFilePath($/;"	f	class:oneflow::Graph	signature:( const std::string& file_path)
oneflow::Graph::ToDotWithStream	graph/graph.h	/^  void ToDotWithStream(StreamT& out_stream);$/;"	p	class:oneflow::Graph	access:public	signature:(StreamT& out_stream)
oneflow::Graph::ToDotWithStream	graph/graph.h	/^void Graph<NodeType, EdgeType>::ToDotWithStream(StreamT& out_stream) {$/;"	f	class:oneflow::Graph	signature:(StreamT& out_stream)
oneflow::Graph::TopoForEachNode	graph/graph.h	/^  void TopoForEachNode(std::function<void(NodeType*)> NodeHandler) const;$/;"	p	class:oneflow::Graph	access:public	signature:(std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::TopoForEachNode	graph/graph.h	/^void Graph<NodeType, EdgeType>::TopoForEachNode($/;"	f	class:oneflow::Graph	signature:( std::function<void(NodeType*)> NodeHandler) const
oneflow::Graph::TypeName	graph/graph.h	/^  virtual const char* TypeName() const { return ""; }$/;"	f	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::edge_num	graph/graph.h	/^  size_t edge_num() const { return edges_.size(); }$/;"	f	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::edges_	graph/graph.h	/^  std::vector<std::unique_ptr<EdgeType>> edges_;$/;"	m	class:oneflow::Graph	access:private
oneflow::Graph::node_num	graph/graph.h	/^  size_t node_num() const { return nodes_.size(); }$/;"	f	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::nodes_	graph/graph.h	/^  std::vector<std::unique_ptr<NodeType>> nodes_;$/;"	m	class:oneflow::Graph	access:private
oneflow::Graph::sink_nodes	graph/graph.h	/^  const std::unordered_set<NodeType*>& sink_nodes() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::source_nodes	graph/graph.h	/^  const std::unordered_set<NodeType*>& source_nodes() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
oneflow::Graph::~Graph	graph/graph.h	/^  virtual ~Graph() = default;$/;"	p	class:oneflow::Graph	access:public	signature:()
oneflow::HasBlobDescWithDataId	operator/operator.cpp	/^static bool HasBlobDescWithDataId($/;"	f	namespace:oneflow	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const std::vector<std::string>& bn_in_ops)
oneflow::HashMap2PbMap	common/protobuf.h	/^google::protobuf::Map<K, V> HashMap2PbMap(const HashMap<K, V>& hash_map) {$/;"	f	namespace:oneflow	signature:(const HashMap<K, V>& hash_map)
oneflow::IDMgr::AllocateBoxingThrdId	job/id_manager.cpp	/^int64_t IDMgr::AllocateBoxingThrdId(int64_t machine_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id)
oneflow::IDMgr::AllocatePersistenceThrdId	job/id_manager.cpp	/^int64_t IDMgr::AllocatePersistenceThrdId(int64_t machine_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id)
oneflow::IDMgr::CommNetThrdId	job/id_manager.cpp	/^int64_t IDMgr::CommNetThrdId() const {$/;"	f	class:oneflow::IDMgr	signature:() const
oneflow::IDMgr::GetDeviceTypeFromActorId	job/id_manager.cpp	/^DeviceType IDMgr::GetDeviceTypeFromActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
oneflow::IDMgr::GetDeviceTypeFromThrdId	job/id_manager.cpp	/^DeviceType IDMgr::GetDeviceTypeFromThrdId(int64_t thrd_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t thrd_id) const
oneflow::IDMgr::GetMachineThrdId	job/id_manager.cpp	/^int64_t IDMgr::GetMachineThrdId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::IDMgr::GetReservedWorkStreamId	job/id_manager.cpp	/^int64_t IDMgr::GetReservedWorkStreamId(int64_t machine_id, int64_t thrd_id,$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id, int64_t reserved_id)
oneflow::IDMgr::IDMgr	job/id_manager.cpp	/^IDMgr::IDMgr() {$/;"	f	class:oneflow::IDMgr	signature:()
oneflow::IDMgr::MachineID4MachineName	job/id_manager.cpp	/^int64_t IDMgr::MachineID4MachineName(const std::string& machine_name) const {$/;"	f	class:oneflow::IDMgr	signature:(const std::string& machine_name) const
oneflow::IDMgr::MachineId4ActorId	job/id_manager.cpp	/^int64_t IDMgr::MachineId4ActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
oneflow::IDMgr::MachineName4MachineId	job/id_manager.cpp	/^const std::string& IDMgr::MachineName4MachineId(int64_t machine_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id) const
oneflow::IDMgr::NewTaskId	job/id_manager.cpp	/^int64_t IDMgr::NewTaskId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::IDMgr::NewWorkStreamId	job/id_manager.cpp	/^int64_t IDMgr::NewWorkStreamId(int64_t machine_id, int64_t thrd_id) {$/;"	f	class:oneflow::IDMgr	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::IDMgr::ThrdId4ActorId	job/id_manager.cpp	/^int64_t IDMgr::ThrdId4ActorId(int64_t actor_id) const {$/;"	f	class:oneflow::IDMgr	signature:(int64_t actor_id) const
oneflow::IOEventPoller::AddFd	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFd(int fd, std::function<void()> read_handler,$/;"	f	class:oneflow::IOEventPoller	signature:(int fd, std::function<void()> read_handler, std::function<void()> write_handler)
oneflow::IOEventPoller::AddFd	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFd(int fd, std::function<void()>* read_handler,$/;"	f	class:oneflow::IOEventPoller	signature:(int fd, std::function<void()>* read_handler, std::function<void()>* write_handler)
oneflow::IOEventPoller::AddFdWithOnlyReadHandler	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::AddFdWithOnlyReadHandler($/;"	f	class:oneflow::IOEventPoller	signature:( int fd, std::function<void()> read_handler)
oneflow::IOEventPoller::EpollLoop	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::EpollLoop() {$/;"	f	class:oneflow::IOEventPoller	signature:()
oneflow::IOEventPoller::IOEventPoller	comm_network/epoll/io_event_poller.cpp	/^IOEventPoller::IOEventPoller() {$/;"	f	class:oneflow::IOEventPoller	signature:()
oneflow::IOEventPoller::Start	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::Start() {$/;"	f	class:oneflow::IOEventPoller	signature:()
oneflow::IOEventPoller::Stop	comm_network/epoll/io_event_poller.cpp	/^void IOEventPoller::Stop() {$/;"	f	class:oneflow::IOEventPoller	signature:()
oneflow::IOEventPoller::max_event_num_	comm_network/epoll/io_event_poller.cpp	/^const int IOEventPoller::max_event_num_ = 32;$/;"	m	class:oneflow::IOEventPoller	file:
oneflow::IOEventPoller::~IOEventPoller	comm_network/epoll/io_event_poller.cpp	/^IOEventPoller::~IOEventPoller() {$/;"	f	class:oneflow::IOEventPoller	signature:()
oneflow::Improver::Improve	job/improver.cpp	/^Plan Improver::Improve(const Plan& naive_plan,$/;"	f	class:oneflow::Improver	signature:(const Plan& naive_plan, const std::string& act_event_filepath)
oneflow::InnerProductKernel::BackwardDataContent	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::InnerProductKernel::ForwardDataContent	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::InnerProductKernel::InitModelBlobsWithDir	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelBlobsWithDir($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::InnerProductKernel::InitModelBlobsWithRandomSeed	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::InnerProductKernel::InitModelTmpBlobs	kernel/innerproduct_kernel.cpp	/^void InnerProductKernel<device_type, T>::InitModelTmpBlobs($/;"	f	class:oneflow::InnerProductKernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::InnerProductOp::GetSpecialConf	operator/innerproduct_op.cpp	/^const PbMessage& InnerProductOp::GetSpecialConf() const {$/;"	f	class:oneflow::InnerProductOp	signature:() const
oneflow::InnerProductOp::InferBlobDescs	operator/innerproduct_op.cpp	/^void InnerProductOp::InferBlobDescs($/;"	f	class:oneflow::InnerProductOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::InnerProductOp::InitFromOpConf	operator/innerproduct_op.cpp	/^void InnerProductOp::InitFromOpConf() {$/;"	f	class:oneflow::InnerProductOp	signature:()
oneflow::IsAbsolutePath	common/str_util.h	/^inline bool IsAbsolutePath(const std::string& path) {$/;"	f	namespace:oneflow	signature:(const std::string& path)
oneflow::IsDataParallelOneToOneBoxing	graph/task_graph.cpp	/^static bool IsDataParallelOneToOneBoxing(const ChainNode* src_chain,$/;"	f	namespace:oneflow	signature:(const ChainNode* src_chain, const ChainNode* dst_chain)
oneflow::IsFloatingPoint	common/data_type.cpp	/^bool IsFloatingPoint(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
oneflow::IsFloatingPoint	common/data_type.h	/^bool IsFloatingPoint(DataType data_type);$/;"	p	namespace:oneflow	signature:(DataType data_type)
oneflow::IsIntegral	common/data_type.cpp	/^bool IsIntegral(DataType data_type) {$/;"	f	namespace:oneflow	signature:(DataType data_type)
oneflow::IsIntegral	common/data_type.h	/^bool IsIntegral(DataType data_type);$/;"	p	namespace:oneflow	signature:(DataType data_type)
oneflow::JobDesc::BatchSize	job/job_desc.cpp	/^int32_t JobDesc::BatchSize() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::BoxingWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::BoxingWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::CommNetWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::CommNetWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::DefaultFillConf	job/job_desc.cpp	/^const FillConf* JobDesc::DefaultFillConf() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::JobDesc	job/job_desc.cpp	/^JobDesc::JobDesc(const JobConf& conf) {$/;"	f	class:oneflow::JobDesc	signature:(const JobConf& conf)
oneflow::JobDesc::MdLoadSnapshotPath	job/job_desc.cpp	/^const std::string& JobDesc::MdLoadSnapshotPath() {$/;"	f	class:oneflow::JobDesc	signature:()
oneflow::JobDesc::MdSaveSnapshotsPath	job/job_desc.cpp	/^const std::string& JobDesc::MdSaveSnapshotsPath() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::NumOfBatchesInSnapshot	job/job_desc.cpp	/^int32_t JobDesc::NumOfBatchesInSnapshot() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::NumOfPiecesInBatch	job/job_desc.cpp	/^int32_t JobDesc::NumOfPiecesInBatch() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::ParallelPieceSize	job/job_desc.cpp	/^int32_t JobDesc::ParallelPieceSize() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::PersistenceWorkerNum	job/job_desc.cpp	/^int32_t JobDesc::PersistenceWorkerNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::PieceNumOfPrintLoss	job/job_desc.cpp	/^int32_t JobDesc::PieceNumOfPrintLoss() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::SizeOfOneDataId	job/job_desc.cpp	/^size_t JobDesc::SizeOfOneDataId() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::Staleness	job/job_desc.cpp	/^int32_t JobDesc::Staleness() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::TotalBatchNum	job/job_desc.cpp	/^int64_t JobDesc::TotalBatchNum() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JobDesc::piece_num_of_experiment_phase	job/job_desc.cpp	/^int64_t JobDesc::piece_num_of_experiment_phase() const {$/;"	f	class:oneflow::JobDesc	signature:() const
oneflow::JoinPath	common/str_util.h	/^std::string JoinPath(const T&... args) {$/;"	f	namespace:oneflow	signature:(const T&.... args)
oneflow::Kernel	kernel/kernel.h	/^class Kernel {$/;"	c	namespace:oneflow
oneflow::Kernel::Backward	kernel/kernel.cpp	/^void Kernel::Backward($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Backward	kernel/kernel.h	/^  virtual void Backward($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::BackwardDataContent	kernel/kernel.h	/^  virtual void BackwardDataContent($/;"	f	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::BackwardDataId	kernel/kernel.h	/^  virtual void BackwardDataId($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Forward	kernel/kernel.cpp	/^void Kernel::Forward($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Forward	kernel/kernel.h	/^  virtual void Forward($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::ForwardDataContent	kernel/kernel.h	/^  virtual void ForwardDataContent($/;"	f	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::ForwardDataId	kernel/kernel.h	/^  virtual void ForwardDataId($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Init	kernel/kernel.cpp	/^void Kernel::Init(const ParallelContext* parallel_ctx,$/;"	f	class:oneflow::Kernel	signature:(const ParallelContext* parallel_ctx, const KernelConf& kernel_conf)
oneflow::Kernel::Init	kernel/kernel.h	/^  void Init(const ParallelContext*, const KernelConf&);$/;"	p	class:oneflow::Kernel	access:public	signature:(const ParallelContext*, const KernelConf&)
oneflow::Kernel::InitModelBlobs	kernel/kernel.cpp	/^void Kernel::InitModelBlobs($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, const Snapshot* snapshot, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelBlobs	kernel/kernel.h	/^  void InitModelBlobs($/;"	p	class:oneflow::Kernel	access:public	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, const Snapshot*, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelBlobsWithDir	kernel/kernel.cpp	/^void Kernel::InitModelBlobsWithDir($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelBlobsWithDir	kernel/kernel.h	/^  virtual void InitModelBlobsWithDir($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, int32_t part_id, int32_t part_num, const std::string& model_load_dir, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelBlobsWithRandomSeed	kernel/kernel.cpp	/^void Kernel::InitModelBlobsWithRandomSeed($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelBlobsWithRandomSeed	kernel/kernel.h	/^  virtual void InitModelBlobsWithRandomSeed($/;"	p	class:oneflow::Kernel	access:protected	signature:( const KernelCtx& ctx, std::mt19937 random_seed_gen, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelTmpBlobs	kernel/kernel.cpp	/^void Kernel::InitModelTmpBlobs($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::InitModelTmpBlobs	kernel/kernel.h	/^  virtual void InitModelTmpBlobs($/;"	p	class:oneflow::Kernel	access:public	signature:( const KernelCtx& ctx, const ParallelContext* parallel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Kernel	kernel/kernel.h	/^  Kernel() = default;$/;"	p	class:oneflow::Kernel	access:protected	signature:()
oneflow::Kernel::Launch	kernel/kernel.cpp	/^void Kernel::Launch($/;"	f	class:oneflow::Kernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Launch	kernel/kernel.h	/^  void Launch(const KernelCtx& ctx,$/;"	p	class:oneflow::Kernel	access:public	signature:(const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::Kernel::Lbn4BnInOp	kernel/kernel.cpp	/^const std::string& Kernel::Lbn4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::Kernel	signature:(const std::string& bn_in_op) const
oneflow::Kernel::Lbn4BnInOp	kernel/kernel.h	/^  const std::string& Lbn4BnInOp(const std::string& bn_in_op) const;$/;"	p	class:oneflow::Kernel	access:public	signature:(const std::string& bn_in_op) const
oneflow::Kernel::OF_DISALLOW_COPY_AND_MOVE	kernel/kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(Kernel);$/;"	p	class:oneflow::Kernel	access:public	signature:(Kernel)
oneflow::Kernel::VirtualKernelInit	kernel/kernel.h	/^  virtual void VirtualKernelInit(const ParallelContext*) {}$/;"	f	class:oneflow::Kernel	access:protected	signature:(const ParallelContext*)
oneflow::Kernel::kernel_conf	kernel/kernel.h	/^  const KernelConf& kernel_conf() const { return kernel_conf_; }$/;"	f	class:oneflow::Kernel	access:protected	signature:() const
oneflow::Kernel::kernel_conf_	kernel/kernel.h	/^  KernelConf kernel_conf_;$/;"	m	class:oneflow::Kernel	access:private
oneflow::Kernel::op_conf	kernel/kernel.h	/^  const OperatorConf& op_conf() const { return kernel_conf_.op_conf(); }$/;"	f	class:oneflow::Kernel	access:protected	signature:() const
oneflow::Kernel::~Kernel	kernel/kernel.h	/^  virtual ~Kernel() = default;$/;"	p	class:oneflow::Kernel	access:public	signature:()
oneflow::KernelCtx	kernel/kernel_context.h	/^struct KernelCtx {$/;"	s	namespace:oneflow
oneflow::KernelCtx::KernelCtx	kernel/kernel_context.h	/^  KernelCtx() : device_ctx(nullptr), other(nullptr) {}$/;"	f	struct:oneflow::KernelCtx	access:public	signature:()
oneflow::KernelCtx::device_ctx	kernel/kernel_context.h	/^  DeviceCtx* device_ctx;$/;"	m	struct:oneflow::KernelCtx	access:public
oneflow::KernelCtx::other	kernel/kernel_context.h	/^  void* other;$/;"	m	struct:oneflow::KernelCtx	access:public
oneflow::KernelIf	kernel/kernel.cpp	/^template class KernelIf<DeviceType::kCPU>;$/;"	x	file:
oneflow::KernelIf	kernel/kernel.cpp	/^template class KernelIf<DeviceType::kGPU>;$/;"	x	file:
oneflow::KernelIf	kernel/kernel.h	/^class KernelIf : public Kernel {$/;"	c	namespace:oneflow	inherits:Kernel
oneflow::KernelIf::BackwardDataId	kernel/kernel.cpp	/^void KernelIf<device_type>::BackwardDataId($/;"	f	class:oneflow::KernelIf	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::KernelIf::CopyDataIdToAllOb	kernel/kernel.cpp	/^void KernelIf<device_type>::CopyDataIdToAllOb($/;"	f	class:oneflow::KernelIf	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const Blob* blob) const
oneflow::KernelIf::CopyDataIdToAllOb	kernel/kernel.h	/^  void CopyDataIdToAllOb(DeviceCtx* ctx,$/;"	p	class:oneflow::KernelIf	access:protected	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const Blob* blob) const
oneflow::KernelIf::ForwardDataId	kernel/kernel.cpp	/^void KernelIf<device_type>::ForwardDataId($/;"	f	class:oneflow::KernelIf	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::KernelIf::KernelIf	kernel/kernel.h	/^  KernelIf() = default;$/;"	p	class:oneflow::KernelIf	access:protected	signature:()
oneflow::KernelIf::OF_DISALLOW_COPY_AND_MOVE	kernel/kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(KernelIf);$/;"	p	class:oneflow::KernelIf	access:public	signature:(KernelIf)
oneflow::KernelIf::override	kernel/kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::KernelIf	access:protected
oneflow::KernelIf::~KernelIf	kernel/kernel.h	/^  virtual ~KernelIf() = default;$/;"	p	class:oneflow::KernelIf	access:public	signature:()
oneflow::LocalFS	persistence/file_system.cpp	/^fs::FileSystem* LocalFS() {$/;"	f	namespace:oneflow	signature:()
oneflow::LogDir	common/util.h	/^inline const std::string& LogDir() {$/;"	f	namespace:oneflow	signature:()
oneflow::LogicalEdge	graph/logical_graph.h	/^class LogicalEdge;$/;"	x
oneflow::LogicalGraph::AddCloneNodes	graph/logical_graph.cpp	/^void LogicalGraph::AddCloneNodes($/;"	f	class:oneflow::LogicalGraph	signature:( const HashMap<LogicalEdge*, std::string>& edge2lbn, const HashMap<LogicalEdge*, std::string>& edge2ibn)
oneflow::LogicalGraph::AddOneCloneNode	graph/logical_graph.cpp	/^void LogicalGraph::AddOneCloneNode($/;"	f	class:oneflow::LogicalGraph	signature:( const CloneInfo& clone_info, const HashMap<LogicalEdge*, std::string>& edge2ibn)
oneflow::LogicalGraph::CollectCloneInfos	graph/logical_graph.cpp	/^void LogicalGraph::CollectCloneInfos($/;"	f	class:oneflow::LogicalGraph	signature:( std::vector<CloneInfo>* clone_infos, const HashMap<LogicalEdge*, std::string>& edge2lbn)
oneflow::LogicalGraph::FillNodeWithParallelDesc	graph/logical_graph.cpp	/^void LogicalGraph::FillNodeWithParallelDesc() {$/;"	f	class:oneflow::LogicalGraph	signature:()
oneflow::LogicalGraph::GetProducerOp	graph/logical_graph.cpp	/^std::shared_ptr<const Operator> LogicalGraph::GetProducerOp($/;"	f	class:oneflow::LogicalGraph	signature:( const std::string& lbn)
oneflow::LogicalGraph::LogicalGraph	graph/logical_graph.cpp	/^LogicalGraph::LogicalGraph() {$/;"	f	class:oneflow::LogicalGraph	signature:()
oneflow::LogicalGraph::NaiveBuildGraphStruct	graph/logical_graph.cpp	/^void LogicalGraph::NaiveBuildGraphStruct($/;"	f	class:oneflow::LogicalGraph	signature:( HashMap<LogicalEdge*, std::string>* edge2lbn, HashMap<LogicalEdge*, std::string>* edge2ibn)
oneflow::LogicalGraph::SetProducerOp	graph/logical_graph.cpp	/^void LogicalGraph::SetProducerOp(const std::string& lbn,$/;"	f	class:oneflow::LogicalGraph	signature:(const std::string& lbn, std::weak_ptr<const Operator> op)
oneflow::LossAccChainNode::GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd LossAccChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::LossAccChainNode	signature:( const ChainNode*) const
oneflow::LossChainNode::FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> LossChainNode::FindLbnsFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossChainNode::FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> LossChainNode::FindLbnsFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossChainNode::GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossChainNode::GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossChainNode::GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd LossChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossChainNode::GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd LossChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::LossChainNode	signature:( const ChainNode* node) const
oneflow::LossCompTaskNode::BuildExecGphAndRegst	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
oneflow::LossCompTaskNode::ConsumeAllRegsts	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
oneflow::LossCompTaskNode::ProduceAllRegstsAndBindEdges	graph/loss_compute_task_node.cpp	/^void LossCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::LossCompTaskNode	signature:()
oneflow::LossPrintChainNode::FindLbnsFromLossAcc	graph/chain_node.cpp	/^std::vector<std::string> LossPrintChainNode::FindLbnsFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
oneflow::LossPrintChainNode::GetMthdForBldBoxingOpConfFromLossAcc	graph/chain_node.cpp	/^BldBoxingOpConfMthd LossPrintChainNode::GetMthdForBldBoxingOpConfFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
oneflow::LossPrintChainNode::GetMthdForBldSubTskGphFromLossAcc	graph/chain_node.cpp	/^BldSubTskGphMthd LossPrintChainNode::GetMthdForBldSubTskGphFromLossAcc($/;"	f	class:oneflow::LossPrintChainNode	signature:( const ChainNode*) const
oneflow::LossPrintKernel::Forward	kernel/loss_print_kernel.cpp	/^void LossPrintKernel<T>::Forward($/;"	f	class:oneflow::LossPrintKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::LossPrintOp::GetSpecialConf	operator/loss_print_op.cpp	/^const PbMessage& LossPrintOp::GetSpecialConf() const {$/;"	f	class:oneflow::LossPrintOp	signature:() const
oneflow::LossPrintOp::InitFromOpConf	operator/loss_print_op.cpp	/^void LossPrintOp::InitFromOpConf() {$/;"	f	class:oneflow::LossPrintOp	signature:()
oneflow::MachineCtx::GetCtrlAddr	job/machine_context.cpp	/^std::string MachineCtx::GetCtrlAddr(int64_t machine_id) const {$/;"	f	class:oneflow::MachineCtx	signature:(int64_t machine_id) const
oneflow::MachineCtx::MachineCtx	job/machine_context.cpp	/^MachineCtx::MachineCtx(const std::string& this_mchn_name) {$/;"	f	class:oneflow::MachineCtx	signature:(const std::string& this_mchn_name)
oneflow::MdDiffAccChainNode::GetMthdForBldSubTskGphFromBackward	graph/chain_node.cpp	/^BldSubTskGphMthd MdDiffAccChainNode::GetMthdForBldSubTskGphFromBackward($/;"	f	class:oneflow::MdDiffAccChainNode	signature:( const ChainNode*) const
oneflow::MdSaveChainNode::GetMthdForBldSubTskGphFromMdUpdt	graph/chain_node.cpp	/^BldSubTskGphMthd MdSaveChainNode::GetMthdForBldSubTskGphFromMdUpdt($/;"	f	class:oneflow::MdSaveChainNode	signature:( const ChainNode*) const
oneflow::MdSaveCompActor::GenSinkKernelCtx	actor/model_save_compute_actor.cpp	/^KernelCtx MdSaveCompActor::GenSinkKernelCtx() {$/;"	f	class:oneflow::MdSaveCompActor	signature:()
oneflow::MdSaveCompActor::VirtualSinkCompActorInit	actor/model_save_compute_actor.cpp	/^void MdSaveCompActor::VirtualSinkCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::MdSaveCompActor	signature:(const TaskProto& task_proto)
oneflow::MdUpdateKernel	kernel/model_update_kernel.h	/^class MdUpdateKernel : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::MdUpdateKernel::MdUpdateKernel	kernel/model_update_kernel.h	/^  MdUpdateKernel() = default;$/;"	p	class:oneflow::MdUpdateKernel	access:protected	signature:()
oneflow::MdUpdateKernel::OF_DISALLOW_COPY_AND_MOVE	kernel/model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdateKernel);$/;"	p	class:oneflow::MdUpdateKernel	access:public	signature:(MdUpdateKernel)
oneflow::MdUpdateKernel::UpdateModel	kernel/model_update_kernel.h	/^  virtual void UpdateModel($/;"	p	class:oneflow::MdUpdateKernel	access:protected	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::MdUpdateKernel::~MdUpdateKernel	kernel/model_update_kernel.h	/^  ~MdUpdateKernel() = default;$/;"	p	class:oneflow::MdUpdateKernel	access:public	signature:()
oneflow::MdUpdtChainNode::FindLbnsFromMdDiffAcc	graph/chain_node.cpp	/^std::vector<std::string> MdUpdtChainNode::FindLbnsFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
oneflow::MdUpdtChainNode::FixCompTaskNode	graph/chain_node.cpp	/^void MdUpdtChainNode::FixCompTaskNode(CompTaskNode* node) const {$/;"	f	class:oneflow::MdUpdtChainNode	signature:(CompTaskNode* node) const
oneflow::MdUpdtChainNode::GetMthdForBldBoxingOpConfFromMdDiffAcc	graph/chain_node.cpp	/^BldBoxingOpConfMthd MdUpdtChainNode::GetMthdForBldBoxingOpConfFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
oneflow::MdUpdtChainNode::GetMthdForBldSubTskGphFromMdDiffAcc	graph/chain_node.cpp	/^BldSubTskGphMthd MdUpdtChainNode::GetMthdForBldSubTskGphFromMdDiffAcc($/;"	f	class:oneflow::MdUpdtChainNode	signature:( const ChainNode*) const
oneflow::MdUpdtCompActor::Act	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::Act() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
oneflow::MdUpdtCompActor::AsyncReturnAllReadableRegst	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::AsyncReturnAllReadableRegst() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
oneflow::MdUpdtCompActor::HandlerInitModelAndModelTmp	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerInitModelAndModelTmp(const ActorMsg& msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& msg)
oneflow::MdUpdtCompActor::HandlerNormal	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerNormal(const ActorMsg& actor_msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& actor_msg)
oneflow::MdUpdtCompActor::HandlerSendInitialModel	actor/model_update_compute_actor.cpp	/^int MdUpdtCompActor::HandlerSendInitialModel(const ActorMsg& actor_msg) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const ActorMsg& actor_msg)
oneflow::MdUpdtCompActor::InitRegstBySendToFw	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::InitRegstBySendToFw(int64_t regst_desc_id) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(int64_t regst_desc_id)
oneflow::MdUpdtCompActor::IsReadAlwaysUnReadyFromNow	actor/model_update_compute_actor.cpp	/^bool MdUpdtCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
oneflow::MdUpdtCompActor::IsWriteReady	actor/model_update_compute_actor.cpp	/^bool MdUpdtCompActor::IsWriteReady() {$/;"	f	class:oneflow::MdUpdtCompActor	signature:()
oneflow::MdUpdtCompActor::VirtualCompActorInit	actor/model_update_compute_actor.cpp	/^void MdUpdtCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::MdUpdtCompActor	signature:(const TaskProto& task_proto)
oneflow::MdUpdtCompTaskNode::BuildExecGphAndRegst	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
oneflow::MdUpdtCompTaskNode::ConsumeAllRegsts	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
oneflow::MdUpdtCompTaskNode::IsReadyForBuild	graph/model_update_compute_task_node.cpp	/^bool MdUpdtCompTaskNode::IsReadyForBuild() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
oneflow::MdUpdtCompTaskNode::LockRegsts	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::LockRegsts() { GetProducedRegst("data_tmp")->Lock(); }$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
oneflow::MdUpdtCompTaskNode::ProduceAllRegstsAndBindEdges	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:()
oneflow::MdUpdtCompTaskNode::ToProto	graph/model_update_compute_task_node.cpp	/^void MdUpdtCompTaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::MdUpdtCompTaskNode	signature:(TaskProto* task_proto)
oneflow::Memcpy	kernel/kernel_util.cpp	/^void Memcpy<DeviceType::kCPU>(DeviceCtx* ctx, void* dst, const void* src,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, void* dst, const void* src, size_t sz, cudaMemcpyKind kind)
oneflow::Memcpy	kernel/kernel_util.h	/^void Memcpy(DeviceCtx*, void* dst, const void* src, size_t sz,$/;"	p	namespace:oneflow	signature:(DeviceCtx*, void* dst, const void* src, size_t sz, cudaMemcpyKind kind = GetCudaMemcpyKind<device_type>::val)
oneflow::MemoryAllocator::Allocate	memory/memory_allocator.cpp	/^std::tuple<char*, const void*, std::function<void()>> MemoryAllocator::Allocate($/;"	f	class:oneflow::MemoryAllocator	signature:( MemoryCase mem_case, std::size_t size)
oneflow::MemoryAllocator::Deallocate	memory/memory_allocator.cpp	/^void MemoryAllocator::Deallocate(char* dptr, const void* comm_net_token,$/;"	f	class:oneflow::MemoryAllocator	signature:(char* dptr, const void* comm_net_token, MemoryCase mem_case)
oneflow::Memset	kernel/kernel_util.cpp	/^void Memset<DeviceType::kCPU>(DeviceCtx* ctx, void* dst, const char value,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, void* dst, const char value, size_t sz)
oneflow::Memset	kernel/kernel_util.h	/^void Memset(DeviceCtx*, void* dst, const char value, size_t sz);$/;"	p	namespace:oneflow	signature:(DeviceCtx*, void* dst, const char value, size_t sz)
oneflow::ModelSaveKernel::Forward	kernel/model_save_kernel.cpp	/^void ModelSaveKernel::Forward($/;"	f	class:oneflow::ModelSaveKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ModelSaveKernel::VirtualKernelInit	kernel/model_save_kernel.cpp	/^void ModelSaveKernel::VirtualKernelInit(const ParallelContext* parallel_ctx) {$/;"	f	class:oneflow::ModelSaveKernel	signature:(const ParallelContext* parallel_ctx)
oneflow::ModelSaveOp::GetSpecialConf	operator/model_save_op.cpp	/^const PbMessage& ModelSaveOp::GetSpecialConf() const {$/;"	f	class:oneflow::ModelSaveOp	signature:() const
oneflow::ModelSaveOp::InitFromOpConf	operator/model_save_op.cpp	/^void ModelSaveOp::InitFromOpConf() {$/;"	f	class:oneflow::ModelSaveOp	signature:()
oneflow::ModelUpdtOp	operator/model_update_op.h	/^class ModelUpdtOp : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::ModelUpdtOp::InferBlobDescs	operator/model_update_op.h	/^  virtual void InferBlobDescs($/;"	f	class:oneflow::ModelUpdtOp	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx)
oneflow::ModelUpdtOp::ModelUpdtOp	operator/model_update_op.h	/^  ModelUpdtOp() = default;$/;"	p	class:oneflow::ModelUpdtOp	access:protected	signature:()
oneflow::ModelUpdtOp::OF_DISALLOW_COPY_AND_MOVE	operator/model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelUpdtOp);$/;"	p	class:oneflow::ModelUpdtOp	access:public	signature:(ModelUpdtOp)
oneflow::ModelUpdtOp::~ModelUpdtOp	operator/model_update_op.h	/^  virtual ~ModelUpdtOp() = default;$/;"	p	class:oneflow::ModelUpdtOp	access:public	signature:()
oneflow::MomentumMdUpdateKernel::Forward	kernel/momentum_model_update_kernel.cpp	/^void MomentumMdUpdateKernel<device_type, T>::Forward($/;"	f	class:oneflow::MomentumMdUpdateKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::MomentumModelUpdateOp::GetSpecialConf	operator/momentum_model_update_op.cpp	/^const PbMessage& MomentumModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::MomentumModelUpdateOp	signature:() const
oneflow::MomentumModelUpdateOp::InferBlobDescs	operator/momentum_model_update_op.cpp	/^void MomentumModelUpdateOp::InferBlobDescs($/;"	f	class:oneflow::MomentumModelUpdateOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx)
oneflow::MomentumModelUpdateOp::InitFromOpConf	operator/momentum_model_update_op.cpp	/^void MomentumModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::MomentumModelUpdateOp	signature:()
oneflow::MultinomialLogisticLossKernel::ForwardDataContent	kernel/multinomial_logistic_loss_kernel.cpp	/^    ForwardDataContent($/;"	f	class:oneflow::MultinomialLogisticLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::MultinomialLogisticLossKernel::ForwardDataId	kernel/multinomial_logistic_loss_kernel.cpp	/^    ForwardDataId(const KernelCtx& ctx,$/;"	f	class:oneflow::MultinomialLogisticLossKernel	signature:(const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::MultinomialLogisticLossOp::GetSpecialConf	operator/multinomial_logistic_loss_op.cpp	/^const PbMessage& MultinomialLogisticLossOp::GetSpecialConf() const {$/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:() const
oneflow::MultinomialLogisticLossOp::InferBlobDescs	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::InferBlobDescs($/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::MultinomialLogisticLossOp::InitFromOpConf	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::InitFromOpConf() {$/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:()
oneflow::MultinomialLogisticLossOp::VirtualGenKernelConf	operator/multinomial_logistic_loss_op.cpp	/^void MultinomialLogisticLossOp::VirtualGenKernelConf($/;"	f	class:oneflow::MultinomialLogisticLossOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::NewActor	actor/actor.cpp	/^std::unique_ptr<Actor> NewActor(const TaskProto& task_proto,$/;"	f	namespace:oneflow	signature:(const TaskProto& task_proto, const ThreadCtx& thread_ctx)
oneflow::NewActor	actor/actor.h	/^std::unique_ptr<Actor> NewActor(const TaskProto&, const ThreadCtx&);$/;"	p	namespace:oneflow	signature:(const TaskProto&, const ThreadCtx&)
oneflow::NewEdgeId	graph/node.cpp	/^int64_t NewEdgeId() {$/;"	f	namespace:oneflow	signature:()
oneflow::NewEdgeId	graph/node.h	/^int64_t NewEdgeId();$/;"	p	namespace:oneflow	signature:()
oneflow::NewNodeId	graph/node.cpp	/^int64_t NewNodeId() {$/;"	f	namespace:oneflow	signature:()
oneflow::NewNodeId	graph/node.h	/^int64_t NewNodeId();$/;"	p	namespace:oneflow	signature:()
oneflow::NewRandomSeed	common/util.h	/^inline uint32_t NewRandomSeed() {$/;"	f	namespace:oneflow	signature:()
oneflow::NewUniqueId	common/util.h	/^inline std::string NewUniqueId() {$/;"	f	namespace:oneflow	signature:()
oneflow::Node	graph/node.h	/^class Node {$/;"	c	namespace:oneflow
oneflow::Node::Connect	graph/node.h	/^  friend void Connect<NodeType, EdgeType>(NodeType* src_node, EdgeType* edge,$/;"	p	class:oneflow::Node	access:friend	signature:(NodeType* src_node, EdgeType* edge, NodeType* dst_node)
oneflow::Node::DisConnect	graph/node.h	/^  friend void DisConnect<EdgeType>(EdgeType* edge);$/;"	p	class:oneflow::Node	access:friend	signature:(EdgeType* edge)
oneflow::Node::DisconnectAllEdges	graph/node.h	/^  void DisconnectAllEdges() {$/;"	f	class:oneflow::Node	access:public	signature:()
oneflow::Node::ForEachNodeOnInEdge	graph/node.h	/^  void ForEachNodeOnInEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
oneflow::Node::ForEachNodeOnInOutEdge	graph/node.h	/^  void ForEachNodeOnInOutEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
oneflow::Node::ForEachNodeOnOutEdge	graph/node.h	/^  void ForEachNodeOnOutEdge(std::function<void(NodeType*)> Handler) const {$/;"	f	class:oneflow::Node	access:public	signature:(std::function<void(NodeType*)> Handler) const
oneflow::Node::Node	graph/node.h	/^  Node() { node_id_ = NewNodeId(); }$/;"	f	class:oneflow::Node	access:public	signature:()
oneflow::Node::OF_DISALLOW_COPY_AND_MOVE	graph/node.h	/^  OF_DISALLOW_COPY_AND_MOVE(Node);$/;"	p	class:oneflow::Node	access:public	signature:(Node)
oneflow::Node::SoleInEdge	graph/node.h	/^  EdgeType* SoleInEdge() const {$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::SoleOutEdge	graph/node.h	/^  EdgeType* SoleOutEdge() const {$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::VisualStr	graph/node.h	/^  virtual std::string VisualStr() const { return ""; }$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::in_edges	graph/node.h	/^  const std::unordered_set<EdgeType*>& in_edges() const { return in_edges_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::in_edges_	graph/node.h	/^  HashSet<EdgeType*> in_edges_;$/;"	m	class:oneflow::Node	access:private
oneflow::Node::node_id	graph/node.h	/^  int64_t node_id() const { return node_id_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::node_id_	graph/node.h	/^  int64_t node_id_;$/;"	m	class:oneflow::Node	access:private
oneflow::Node::node_id_str	graph/node.h	/^  std::string node_id_str() const { return std::to_string(node_id_); }$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::out_edges	graph/node.h	/^  const std::unordered_set<EdgeType*>& out_edges() const { return out_edges_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
oneflow::Node::out_edges_	graph/node.h	/^  HashSet<EdgeType*> out_edges_;$/;"	m	class:oneflow::Node	access:private
oneflow::Node::~Node	graph/node.h	/^  virtual ~Node() = default;$/;"	p	class:oneflow::Node	access:public	signature:()
oneflow::NormalMdUpdateKernel::UpdateModel	kernel/normal_model_update_kernel.cpp	/^void NormalMdUpdateKernel<device_type, T>::UpdateModel($/;"	f	class:oneflow::NormalMdUpdateKernel	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::NormalModelUpdateOp::GetSpecialConf	operator/normal_model_update_op.cpp	/^const PbMessage& NormalModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::NormalModelUpdateOp	signature:() const
oneflow::NormalModelUpdateOp::InitFromOpConf	operator/normal_model_update_op.cpp	/^void NormalModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::NormalModelUpdateOp	signature:()
oneflow::OF_DECLARE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.h	/^OF_DECLARE_ENUM_TO_OSTREAM_FUNC(ActorCmd);$/;"	p	namespace:oneflow	signature:(ActorCmd)
oneflow::OF_DECLARE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.h	/^OF_DECLARE_ENUM_TO_OSTREAM_FUNC(ActorMsgType);$/;"	p	namespace:oneflow	signature:(ActorMsgType)
oneflow::OF_DEFINE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.cpp	/^OF_DEFINE_ENUM_TO_OSTREAM_FUNC(ActorCmd);$/;"	p	namespace:oneflow	file:	signature:(ActorCmd)
oneflow::OF_DEFINE_ENUM_TO_OSTREAM_FUNC	actor/actor_message.cpp	/^OF_DEFINE_ENUM_TO_OSTREAM_FUNC(ActorMsgType);$/;"	p	namespace:oneflow	file:	signature:(ActorMsgType)
oneflow::OF_PP_FOR_EACH_TUPLE	common/data_type.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_GET_DATA_TYPE_VAL, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_GET_DATA_TYPE_VAL, ALL_DATA_TYPE_SEQ)
oneflow::OF_PP_FOR_EACH_TUPLE	common/data_type.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_GET_SIZE_OF_VAL, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_GET_SIZE_OF_VAL, ALL_DATA_TYPE_SEQ)
oneflow::OF_PP_FOR_EACH_TUPLE	common/data_type.h	/^OF_PP_FOR_EACH_TUPLE(DECLARE_GET_DATA_TYPE, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	signature:(DECLARE_GET_DATA_TYPE, ALL_DATA_TYPE_SEQ)
oneflow::OF_PP_FOR_EACH_TUPLE	common/data_type.h	/^OF_PP_FOR_EACH_TUPLE(DECLARE_GET_SIZE_OF, ALL_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	signature:(DECLARE_GET_SIZE_OF, ALL_DATA_TYPE_SEQ)
oneflow::OF_PP_FOR_EACH_TUPLE	kernel/kernel_util.cpp	/^OF_PP_FOR_EACH_TUPLE(DEFINE_INT_KERNEL_UTIL, INT_DATA_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(DEFINE_INT_KERNEL_UTIL, INT_DATA_TYPE_SEQ)
oneflow::OF_PP_FOR_EACH_TUPLE	register/blob.cpp	/^OF_PP_FOR_EACH_TUPLE(INSTANTIATE_BLOB_FUNC, DEVICE_TYPE_SEQ);$/;"	p	namespace:oneflow	file:	signature:(INSTANTIATE_BLOB_FUNC, DEVICE_TYPE_SEQ)
oneflow::Oneflow::Oneflow	job/oneflow.cpp	/^Oneflow::Oneflow(const JobConf& job_conf, const std::string& this_mchn_name) {$/;"	f	class:oneflow::Oneflow	signature:(const JobConf& job_conf, const std::string& this_mchn_name)
oneflow::OpRegister	operator/operator.h	/^struct OpRegister {$/;"	s	namespace:oneflow
oneflow::OpRegister::OpRegister	operator/operator.h	/^  OpRegister() {$/;"	f	struct:oneflow::OpRegister	access:public	signature:()
oneflow::OpTypeCase2Creator	operator/operator.cpp	/^static HashMap<int, std::function<Operator*()>>& OpTypeCase2Creator() {$/;"	f	namespace:oneflow	signature:()
oneflow::Operator	operator/operator.h	/^class Operator {$/;"	c	namespace:oneflow
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(data_tmp_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(data_tmp_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(input_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(input_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(input_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(input_diff_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_diff_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(model_tmp_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(model_tmp_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(output_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(output_bns)
oneflow::Operator::DEFINE_BLOB_NAMES_GETTER	operator/operator.h	/^  DEFINE_BLOB_NAMES_GETTER(output_diff_bns);$/;"	p	class:oneflow::Operator	access:public	signature:(output_diff_bns)
oneflow::Operator::DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(bool, Bool);$/;"	p	class:oneflow::Operator	access:public	signature:(bool, Bool)
oneflow::Operator::DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(const PbMessage&, Message);$/;"	p	class:oneflow::Operator	access:public	signature:(const PbMessage&, Message)
oneflow::Operator::DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(int32_t, Int32);$/;"	p	class:oneflow::Operator	access:public	signature:(int32_t, Int32)
oneflow::Operator::DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(int64_t, Int64);$/;"	p	class:oneflow::Operator	access:public	signature:(int64_t, Int64)
oneflow::Operator::DEFINE_GET_VAL_FROM_SPECIAL_CONF	operator/operator.h	/^  DEFINE_GET_VAL_FROM_SPECIAL_CONF(std::string, String);$/;"	p	class:oneflow::Operator	access:public	signature:(std::string, String)
oneflow::Operator::EnrollDataTmpBn	operator/operator.cpp	/^void Operator::EnrollDataTmpBn(const std::string& dtbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& dtbn)
oneflow::Operator::EnrollDataTmpBn	operator/operator.h	/^  void EnrollDataTmpBn(const std::string& dtbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& dtbn)
oneflow::Operator::EnrollInputBn	operator/operator.cpp	/^void Operator::EnrollInputBn(const std::string& ibn, bool has_diff) {$/;"	f	class:oneflow::Operator	signature:(const std::string& ibn, bool has_diff)
oneflow::Operator::EnrollInputBn	operator/operator.h	/^  void EnrollInputBn(const std::string& ibn) { EnrollInputBn(ibn, true); }$/;"	f	class:oneflow::Operator	access:protected	signature:(const std::string& ibn)
oneflow::Operator::EnrollInputBn	operator/operator.h	/^  void EnrollInputBn(const std::string& ibn, bool has_diff);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& ibn, bool has_diff)
oneflow::Operator::EnrollModelBn	operator/operator.cpp	/^void Operator::EnrollModelBn(const std::string& mbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& mbn)
oneflow::Operator::EnrollModelBn	operator/operator.h	/^  void EnrollModelBn(const std::string& mbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& mbn)
oneflow::Operator::EnrollModelTmpBn	operator/operator.cpp	/^void Operator::EnrollModelTmpBn(const std::string& mtbn) {$/;"	f	class:oneflow::Operator	signature:(const std::string& mtbn)
oneflow::Operator::EnrollModelTmpBn	operator/operator.h	/^  void EnrollModelTmpBn(const std::string& mtbn);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& mtbn)
oneflow::Operator::EnrollOutputBn	operator/operator.cpp	/^void Operator::EnrollOutputBn(const std::string& obn, bool has_diff) {$/;"	f	class:oneflow::Operator	signature:(const std::string& obn, bool has_diff)
oneflow::Operator::EnrollOutputBn	operator/operator.h	/^  void EnrollOutputBn(const std::string& obn) { EnrollOutputBn(obn, true); }$/;"	f	class:oneflow::Operator	access:protected	signature:(const std::string& obn)
oneflow::Operator::EnrollOutputBn	operator/operator.h	/^  void EnrollOutputBn(const std::string& obn, bool has_diff);$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& obn, bool has_diff)
oneflow::Operator::FixParallelDesc	operator/operator.cpp	/^void Operator::FixParallelDesc(ParallelDesc* pr_desc) const {$/;"	f	class:oneflow::Operator	signature:(ParallelDesc* pr_desc) const
oneflow::Operator::FixParallelDesc	operator/operator.h	/^  void FixParallelDesc(ParallelDesc* pr_desc) const;$/;"	p	class:oneflow::Operator	access:public	signature:(ParallelDesc* pr_desc) const
oneflow::Operator::GenKernelConf	operator/operator.cpp	/^void Operator::GenKernelConf($/;"	f	class:oneflow::Operator	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, bool is_forward, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::Operator::GenKernelConf	operator/operator.h	/^  void GenKernelConf($/;"	p	class:oneflow::Operator	access:public	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, bool is_forward, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::Operator::GetMsgFromSpecialConf	operator/operator.h	/^  const T& GetMsgFromSpecialConf(const std::string& field_name) const {$/;"	f	class:oneflow::Operator	access:public	signature:(const std::string& field_name) const
oneflow::Operator::GetSpecialConf	operator/operator.h	/^  virtual const PbMessage& GetSpecialConf() const = 0;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::InferBlobDescs	operator/operator.h	/^  virtual void InferBlobDescs($/;"	f	class:oneflow::Operator	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::Operator::InitFromOpConf	operator/operator.cpp	/^void Operator::InitFromOpConf(const OperatorConf& op_conf) {$/;"	f	class:oneflow::Operator	signature:(const OperatorConf& op_conf)
oneflow::Operator::InitFromOpConf	operator/operator.h	/^  virtual void InitFromOpConf() = 0;$/;"	p	class:oneflow::Operator	access:public	signature:()
oneflow::Operator::InitFromOpConf	operator/operator.h	/^  void InitFromOpConf(const OperatorConf& op_conf);$/;"	p	class:oneflow::Operator	access:public	signature:(const OperatorConf& op_conf)
oneflow::Operator::IsDataLoaderOp	operator/operator.h	/^  virtual bool IsDataLoaderOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::IsElemWiseOp	operator/operator.h	/^  virtual bool IsElemWiseOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::IsLossOp	operator/operator.h	/^  virtual bool IsLossOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::IsPrintOp	operator/operator.h	/^  virtual bool IsPrintOp() const { return false; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::Lbn4BnInOp	operator/operator.cpp	/^const std::string& Operator::Lbn4BnInOp(const std::string& bn_in_op) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op) const
oneflow::Operator::Lbn4BnInOp	operator/operator.h	/^  const std::string& Lbn4BnInOp(const std::string& bn_in_op) const;$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op) const
oneflow::Operator::MaxModelSplitNum	operator/operator.h	/^  virtual int32_t MaxModelSplitNum() const { return -1; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::ModelSplitAxis	operator/operator.h	/^  virtual int32_t ModelSplitAxis() const { return -1; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::ModifyLbn4BnInOp	operator/operator.cpp	/^void Operator::ModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op, const std::string& lbn)
oneflow::Operator::ModifyLbn4BnInOp	operator/operator.h	/^  void ModifyLbn4BnInOp(const std::string& bn_in_op, const std::string& lbn);$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op, const std::string& lbn)
oneflow::Operator::OF_DISALLOW_COPY_AND_MOVE	operator/operator.h	/^  OF_DISALLOW_COPY_AND_MOVE(Operator);$/;"	p	class:oneflow::Operator	access:public	signature:(Operator)
oneflow::Operator::Operator	operator/operator.h	/^  Operator() = default;$/;"	p	class:oneflow::Operator	access:public	signature:()
oneflow::Operator::SoleDtbn	operator/operator.cpp	/^const std::string& Operator::SoleDtbn() const {$/;"	f	class:oneflow::Operator	signature:() const
oneflow::Operator::SoleDtbn	operator/operator.h	/^  const std::string& SoleDtbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::SoleIbn	operator/operator.cpp	/^const std::string& Operator::SoleIbn() const {$/;"	f	class:oneflow::Operator	signature:() const
oneflow::Operator::SoleIbn	operator/operator.h	/^  const std::string& SoleIbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::SoleIdbn	operator/operator.cpp	/^const std::string& Operator::SoleIdbn() const {$/;"	f	class:oneflow::Operator	signature:() const
oneflow::Operator::SoleIdbn	operator/operator.h	/^  const std::string& SoleIdbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::SoleObn	operator/operator.cpp	/^const std::string& Operator::SoleObn() const {$/;"	f	class:oneflow::Operator	signature:() const
oneflow::Operator::SoleObn	operator/operator.h	/^  const std::string& SoleObn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::SoleOdbn	operator/operator.cpp	/^const std::string& Operator::SoleOdbn() const {$/;"	f	class:oneflow::Operator	signature:() const
oneflow::Operator::SoleOdbn	operator/operator.h	/^  const std::string& SoleOdbn() const;$/;"	p	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::TryModifyLbn4BnInOp	operator/operator.cpp	/^int8_t Operator::TryModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	f	class:oneflow::Operator	signature:(const std::string& bn_in_op, const std::string& lbn)
oneflow::Operator::TryModifyLbn4BnInOp	operator/operator.h	/^  int8_t TryModifyLbn4BnInOp(const std::string& bn_in_op,$/;"	p	class:oneflow::Operator	access:public	signature:(const std::string& bn_in_op, const std::string& lbn)
oneflow::Operator::VirtualFixParallelDesc	operator/operator.h	/^  virtual void VirtualFixParallelDesc(ParallelDesc* pr_desc) const {}$/;"	f	class:oneflow::Operator	access:protected	signature:(ParallelDesc* pr_desc) const
oneflow::Operator::VirtualGenKernelConf	operator/operator.h	/^  virtual void VirtualGenKernelConf($/;"	f	class:oneflow::Operator	access:protected	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::Operator::bn_in_op2lbn_	operator/operator.h	/^  HashMap<std::string, std::string> bn_in_op2lbn_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::data_tmp_bns_	operator/operator.h	/^  std::vector<std::string> data_tmp_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::dtbn2lbn	operator/operator.cpp	/^std::string Operator::dtbn2lbn(const std::string& data_tmp_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& data_tmp_bn) const
oneflow::Operator::dtbn2lbn	operator/operator.h	/^  std::string dtbn2lbn(const std::string& data_tmp_bn) const;$/;"	p	class:oneflow::Operator	access:private	signature:(const std::string& data_tmp_bn) const
oneflow::Operator::ibn2lbn	operator/operator.cpp	/^std::string Operator::ibn2lbn(const std::string& input_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& input_bn) const
oneflow::Operator::ibn2lbn	operator/operator.h	/^  virtual std::string ibn2lbn(const std::string& input_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& input_bn) const
oneflow::Operator::input_bns_	operator/operator.h	/^  std::vector<std::string> input_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::input_diff_bns_	operator/operator.h	/^  std::vector<std::string> input_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::mbn2lbn	operator/operator.cpp	/^std::string Operator::mbn2lbn(const std::string& model_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& model_bn) const
oneflow::Operator::mbn2lbn	operator/operator.h	/^  virtual std::string mbn2lbn(const std::string& model_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& model_bn) const
oneflow::Operator::model_bns_	operator/operator.h	/^  std::vector<std::string> model_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::model_diff_bns_	operator/operator.h	/^  std::vector<std::string> model_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::model_tmp_bns_	operator/operator.h	/^  std::vector<std::string> model_tmp_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::mtbn2lbn	operator/operator.cpp	/^std::string Operator::mtbn2lbn(const std::string& model_tmp_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& model_tmp_bn) const
oneflow::Operator::mtbn2lbn	operator/operator.h	/^  virtual std::string mtbn2lbn(const std::string& model_tmp_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& model_tmp_bn) const
oneflow::Operator::mut_op_conf	operator/operator.h	/^  OperatorConf& mut_op_conf() { return op_conf_; }$/;"	f	class:oneflow::Operator	access:protected	signature:()
oneflow::Operator::obn2lbn	operator/operator.cpp	/^std::string Operator::obn2lbn(const std::string& output_bn) const {$/;"	f	class:oneflow::Operator	signature:(const std::string& output_bn) const
oneflow::Operator::obn2lbn	operator/operator.h	/^  virtual std::string obn2lbn(const std::string& output_bn) const;$/;"	p	class:oneflow::Operator	access:protected	signature:(const std::string& output_bn) const
oneflow::Operator::op_conf	operator/operator.h	/^  const OperatorConf& op_conf() const { return op_conf_; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::op_conf_	operator/operator.h	/^  OperatorConf op_conf_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::op_name	operator/operator.h	/^  const std::string& op_name() const { return op_conf_.name(); }$/;"	f	class:oneflow::Operator	access:public	signature:() const
oneflow::Operator::output_bns_	operator/operator.h	/^  std::vector<std::string> output_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::output_diff_bns_	operator/operator.h	/^  std::vector<std::string> output_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
oneflow::Operator::~Operator	operator/operator.h	/^  virtual ~Operator() = default;$/;"	p	class:oneflow::Operator	access:public	signature:()
oneflow::ParallelDesc	job/parallel_desc.h	/^class ParallelDesc {$/;"	c	namespace:oneflow
oneflow::ParallelDesc::ClearUp	job/parallel_desc.cpp	/^void ParallelDesc::ClearUp() {$/;"	f	class:oneflow::ParallelDesc	signature:()
oneflow::ParallelDesc::ClearUp	job/parallel_desc.h	/^  void ClearUp();$/;"	p	class:oneflow::ParallelDesc	access:private	signature:()
oneflow::ParallelDesc::Equal	job/parallel_desc.cpp	/^bool ParallelDesc::Equal(const ParallelDesc& rhs) const {$/;"	f	class:oneflow::ParallelDesc	signature:(const ParallelDesc& rhs) const
oneflow::ParallelDesc::Equal	job/parallel_desc.h	/^  bool Equal(const ParallelDesc& rhs) const;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const ParallelDesc& rhs) const
oneflow::ParallelDesc::Equal	job/parallel_desc.h	/^  bool Equal(const ParallelDesc* rhs) const { return Equal(*rhs); }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(const ParallelDesc* rhs) const
oneflow::ParallelDesc::ParallelDesc	job/parallel_desc.cpp	/^ParallelDesc::ParallelDesc(const ParallelConf& user_conf) {$/;"	f	class:oneflow::ParallelDesc	signature:(const ParallelConf& user_conf)
oneflow::ParallelDesc::ParallelDesc	job/parallel_desc.h	/^  ParallelDesc() = delete;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:()
oneflow::ParallelDesc::ParallelDesc	job/parallel_desc.h	/^  ParallelDesc(const ParallelConf& user_conf);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const ParallelConf& user_conf)
oneflow::ParallelDesc::RemoveInvalidDevice	job/parallel_desc.cpp	/^void ParallelDesc::RemoveInvalidDevice(const std::string& op_name) {$/;"	f	class:oneflow::ParallelDesc	signature:(const std::string& op_name)
oneflow::ParallelDesc::RemoveInvalidDevice	job/parallel_desc.h	/^  void RemoveInvalidDevice() { RemoveInvalidDevice(""); }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:()
oneflow::ParallelDesc::RemoveInvalidDevice	job/parallel_desc.h	/^  void RemoveInvalidDevice(const std::string& op_name);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const std::string& op_name)
oneflow::ParallelDesc::RemoveNeedlessDevice	job/parallel_desc.cpp	/^void ParallelDesc::RemoveNeedlessDevice(const std::string& op_name,$/;"	f	class:oneflow::ParallelDesc	signature:(const std::string& op_name, int32_t max_device_num)
oneflow::ParallelDesc::RemoveNeedlessDevice	job/parallel_desc.h	/^  void RemoveNeedlessDevice(const std::string& op_name, int32_t max_device_num);$/;"	p	class:oneflow::ParallelDesc	access:public	signature:(const std::string& op_name, int32_t max_device_num)
oneflow::ParallelDesc::RemoveNeedlessDevice	job/parallel_desc.h	/^  void RemoveNeedlessDevice(int32_t max_device_num) {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(int32_t max_device_num)
oneflow::ParallelDesc::machine_id2sorted_dev_phy_ids_	job/parallel_desc.h	/^  HashMap<int64_t, std::vector<int64_t>> machine_id2sorted_dev_phy_ids_;$/;"	m	class:oneflow::ParallelDesc	access:private
oneflow::ParallelDesc::parallel_num	job/parallel_desc.h	/^  int64_t parallel_num() const { return parallel_num_; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
oneflow::ParallelDesc::parallel_num_	job/parallel_desc.h	/^  int64_t parallel_num_;$/;"	m	class:oneflow::ParallelDesc	access:private
oneflow::ParallelDesc::policy	job/parallel_desc.h	/^  ParallelPolicy policy() const { return policy_; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
oneflow::ParallelDesc::policy_	job/parallel_desc.h	/^  ParallelPolicy policy_;$/;"	m	class:oneflow::ParallelDesc	access:private
oneflow::ParallelDesc::set_policy	job/parallel_desc.h	/^  void set_policy(ParallelPolicy val) { policy_ = val; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(ParallelPolicy val)
oneflow::ParallelDesc::sorted_dev_phy_ids	job/parallel_desc.h	/^  const std::vector<int64_t>& sorted_dev_phy_ids(int64_t machine_id) const {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(int64_t machine_id) const
oneflow::ParallelDesc::sorted_machine_ids	job/parallel_desc.h	/^  const std::vector<int64_t>& sorted_machine_ids() const {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
oneflow::ParallelDesc::sorted_machine_ids_	job/parallel_desc.h	/^  std::vector<int64_t> sorted_machine_ids_;$/;"	m	class:oneflow::ParallelDesc	access:private
oneflow::ParallelDesc::~ParallelDesc	job/parallel_desc.h	/^  ~ParallelDesc() = default;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:()
oneflow::ParseLbn	operator/operator.cpp	/^std::pair<std::string, std::string> ParseLbn(const std::string& lbn) {$/;"	f	namespace:oneflow	signature:(const std::string& lbn)
oneflow::ParseLbn	operator/operator.h	/^std::pair<std::string, std::string> ParseLbn(const std::string& lbn);$/;"	p	namespace:oneflow	signature:(const std::string& lbn)
oneflow::ParseProtoFromTextFile	common/protobuf.cpp	/^void ParseProtoFromTextFile(const std::string& file_path, PbMessage* proto) {$/;"	f	namespace:oneflow	signature:(const std::string& file_path, PbMessage* proto)
oneflow::ParseProtoFromTextFile	common/protobuf.h	/^void ParseProtoFromTextFile(const std::string& file_path, PbMessage* proto);$/;"	p	namespace:oneflow	signature:(const std::string& file_path, PbMessage* proto)
oneflow::PbMap2HashMap	common/protobuf.h	/^HashMap<K, V> PbMap2HashMap(const google::protobuf::Map<K, V>& pb_map) {$/;"	f	namespace:oneflow	signature:(const google::protobuf::Map<K, V>& pb_map)
oneflow::PbRf2StdVec	common/protobuf.h	/^inline std::vector<T> PbRf2StdVec(const PbRf<T>& rf) {$/;"	f	namespace:oneflow	signature:(const PbRf<T>& rf)
oneflow::PbRpf2StdVec	common/protobuf.h	/^inline std::vector<T> PbRpf2StdVec(const PbRpf<T>& rpf) {$/;"	f	namespace:oneflow	signature:(const PbRpf<T>& rpf)
oneflow::PersistentInStream	persistence/persistent_in_stream.h	/^class PersistentInStream {$/;"	c	namespace:oneflow
oneflow::PersistentInStream::AddNForCurFilePos	persistence/persistent_in_stream.h	/^  virtual void AddNForCurFilePos(uint64_t n) { cur_file_pos_ += n; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:(uint64_t n)
oneflow::PersistentInStream::IsEof	persistence/persistent_in_stream.cpp	/^bool PersistentInStream::IsEof() const {$/;"	f	class:oneflow::PersistentInStream	signature:() const
oneflow::PersistentInStream::IsEof	persistence/persistent_in_stream.h	/^  bool IsEof() const;$/;"	p	class:oneflow::PersistentInStream	access:private	signature:() const
oneflow::PersistentInStream::OF_DISALLOW_COPY_AND_MOVE	persistence/persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(PersistentInStream);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(PersistentInStream)
oneflow::PersistentInStream::PersistentInStream	persistence/persistent_in_stream.cpp	/^PersistentInStream::PersistentInStream(fs::FileSystem* fs,$/;"	f	class:oneflow::PersistentInStream	signature:(fs::FileSystem* fs, const std::string& file_path, uint64_t offset)
oneflow::PersistentInStream::PersistentInStream	persistence/persistent_in_stream.h	/^  PersistentInStream() = delete;$/;"	p	class:oneflow::PersistentInStream	access:public	signature:()
oneflow::PersistentInStream::PersistentInStream	persistence/persistent_in_stream.h	/^  PersistentInStream(fs::FileSystem*, const std::string& file_path,$/;"	p	class:oneflow::PersistentInStream	access:protected	signature:(fs::FileSystem*, const std::string& file_path, uint64_t offset)
oneflow::PersistentInStream::Read	persistence/persistent_in_stream.cpp	/^int32_t PersistentInStream::Read(char* s, size_t n) {$/;"	f	class:oneflow::PersistentInStream	signature:(char* s, size_t n)
oneflow::PersistentInStream::Read	persistence/persistent_in_stream.h	/^  int32_t Read(char* s, size_t n);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(char* s, size_t n)
oneflow::PersistentInStream::ReadLine	persistence/persistent_in_stream.cpp	/^int32_t PersistentInStream::ReadLine(std::string* line) {$/;"	f	class:oneflow::PersistentInStream	signature:(std::string* line)
oneflow::PersistentInStream::ReadLine	persistence/persistent_in_stream.h	/^  int32_t ReadLine(std::string* line);$/;"	p	class:oneflow::PersistentInStream	access:public	signature:(std::string* line)
oneflow::PersistentInStream::UpdateBuffer	persistence/persistent_in_stream.cpp	/^void PersistentInStream::UpdateBuffer() {$/;"	f	class:oneflow::PersistentInStream	signature:()
oneflow::PersistentInStream::UpdateBuffer	persistence/persistent_in_stream.h	/^  void UpdateBuffer();$/;"	p	class:oneflow::PersistentInStream	access:private	signature:()
oneflow::PersistentInStream::buffer_	persistence/persistent_in_stream.h	/^  char* buffer_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::buffer_size_	persistence/persistent_in_stream.cpp	/^const uint64_t PersistentInStream::buffer_size_ = 128 * 1024 * 1024;$/;"	m	class:oneflow::PersistentInStream	file:
oneflow::PersistentInStream::buffer_size_	persistence/persistent_in_stream.h	/^  static const uint64_t buffer_size_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::cur_buf_begin_	persistence/persistent_in_stream.h	/^  char* cur_buf_begin_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::cur_buf_end_	persistence/persistent_in_stream.h	/^  char* cur_buf_end_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::cur_file_pos	persistence/persistent_in_stream.h	/^  uint64_t cur_file_pos() const { return cur_file_pos_; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:() const
oneflow::PersistentInStream::cur_file_pos_	persistence/persistent_in_stream.h	/^  uint64_t cur_file_pos_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::file_	persistence/persistent_in_stream.h	/^  std::unique_ptr<fs::RandomAccessFile> file_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::file_size	persistence/persistent_in_stream.h	/^  uint64_t file_size() const { return file_size_; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:() const
oneflow::PersistentInStream::file_size_	persistence/persistent_in_stream.h	/^  uint64_t file_size_;$/;"	m	class:oneflow::PersistentInStream	access:private
oneflow::PersistentInStream::set_cur_file_pos	persistence/persistent_in_stream.h	/^  void set_cur_file_pos(uint64_t val) { cur_file_pos_ = val; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:(uint64_t val)
oneflow::PersistentInStream::~PersistentInStream	persistence/persistent_in_stream.cpp	/^PersistentInStream::~PersistentInStream() { delete[] buffer_; }$/;"	f	class:oneflow::PersistentInStream	signature:()
oneflow::PersistentInStream::~PersistentInStream	persistence/persistent_in_stream.h	/^  virtual ~PersistentInStream();$/;"	p	class:oneflow::PersistentInStream	access:public	signature:()
oneflow::PersistentOutStream::Flush	persistence/persistent_out_stream.cpp	/^void PersistentOutStream::Flush() { file_->Flush(); }$/;"	f	class:oneflow::PersistentOutStream	signature:()
oneflow::PersistentOutStream::PersistentOutStream	persistence/persistent_out_stream.cpp	/^PersistentOutStream::PersistentOutStream(fs::FileSystem* fs,$/;"	f	class:oneflow::PersistentOutStream	signature:(fs::FileSystem* fs, const std::string& file_path)
oneflow::PersistentOutStream::Write	persistence/persistent_out_stream.cpp	/^PersistentOutStream& PersistentOutStream::Write(const char* s, size_t n) {$/;"	f	class:oneflow::PersistentOutStream	signature:(const char* s, size_t n)
oneflow::PersistentOutStream::~PersistentOutStream	persistence/persistent_out_stream.cpp	/^PersistentOutStream::~PersistentOutStream() { file_->Close(); }$/;"	f	class:oneflow::PersistentOutStream	signature:()
oneflow::PieceStatus::GetIntoNextStatus	register/blob.cpp	/^int PieceStatus::GetIntoNextStatus() {$/;"	f	class:oneflow::PieceStatus	signature:()
oneflow::PieceStatus::IsLast	register/blob.cpp	/^bool PieceStatus::IsLast() const {$/;"	f	class:oneflow::PieceStatus	signature:() const
oneflow::PieceStatus::IsNextColOf	register/blob.cpp	/^bool PieceStatus::IsNextColOf(const PieceStatus& pre) const {$/;"	f	class:oneflow::PieceStatus	signature:(const PieceStatus& pre) const
oneflow::PoolingKernel::BackwardDataContent	kernel/pooling_kernel.cpp	/^void PoolingKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::PoolingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::PoolingKernel::ForwardDataContent	kernel/pooling_kernel.cpp	/^void PoolingKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::PoolingKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::PoolingKernelUtil	kernel/pooling_kernel.h	/^class PoolingKernelUtil {$/;"	c	namespace:oneflow
oneflow::PoolingKernelUtil::OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernelUtil);$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(PoolingKernelUtil)
oneflow::PoolingKernelUtil::PoolingBackward	kernel/pooling_kernel.h	/^  static void PoolingBackward(const KernelCtx&, const Blob*, const Blob*, Blob*,$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(const KernelCtx&, const Blob*, const Blob*, Blob*, const PoolingOpConf&)
oneflow::PoolingKernelUtil::PoolingForward	kernel/pooling_kernel.h	/^  static void PoolingForward(const KernelCtx&, const Blob*, Blob*, Blob*,$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:(const KernelCtx&, const Blob*, Blob*, Blob*, const PoolingOpConf&)
oneflow::PoolingKernelUtil::PoolingKernelUtil	kernel/pooling_kernel.h	/^  PoolingKernelUtil() = delete;$/;"	p	class:oneflow::PoolingKernelUtil	access:public	signature:()
oneflow::PoolingOp::GetSpecialConf	operator/pooling_op.cpp	/^const PbMessage& PoolingOp::GetSpecialConf() const {$/;"	f	class:oneflow::PoolingOp	signature:() const
oneflow::PoolingOp::InferBlobDescs	operator/pooling_op.cpp	/^void PoolingOp::InferBlobDescs($/;"	f	class:oneflow::PoolingOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::PoolingOp::InitFromOpConf	operator/pooling_op.cpp	/^void PoolingOp::InitFromOpConf() {$/;"	f	class:oneflow::PoolingOp	signature:()
oneflow::PrintChainNode::FindLbnsFromForward	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::FindLbnsFromLoss	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::FindLbnsFromSource	graph/chain_node.cpp	/^std::vector<std::string> PrintChainNode::FindLbnsFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldBoxingOpConfFromForward	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldBoxingOpConfFromLoss	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldBoxingOpConfFromSource	graph/chain_node.cpp	/^BldBoxingOpConfMthd PrintChainNode::GetMthdForBldBoxingOpConfFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldSubTskGphFromForward	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromForward($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldSubTskGphFromLoss	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromLoss($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintChainNode::GetMthdForBldSubTskGphFromSource	graph/chain_node.cpp	/^BldSubTskGphMthd PrintChainNode::GetMthdForBldSubTskGphFromSource($/;"	f	class:oneflow::PrintChainNode	signature:( const ChainNode* node) const
oneflow::PrintKernel::Forward	kernel/print_kernel.cpp	/^void PrintKernel::Forward($/;"	f	class:oneflow::PrintKernel	signature:( const KernelCtx& kernel_ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::PrintKernel::VirtualKernelInit	kernel/print_kernel.cpp	/^void PrintKernel::VirtualKernelInit(const ParallelContext* parallel_ctx) {$/;"	f	class:oneflow::PrintKernel	signature:(const ParallelContext* parallel_ctx)
oneflow::PrintOp::GetSpecialConf	operator/print_op.cpp	/^const PbMessage& PrintOp::GetSpecialConf() const {$/;"	f	class:oneflow::PrintOp	signature:() const
oneflow::PrintOp::InitFromOpConf	operator/print_op.cpp	/^void PrintOp::InitFromOpConf() {$/;"	f	class:oneflow::PrintOp	signature:()
oneflow::PrintProtoToTextFile	common/protobuf.cpp	/^void PrintProtoToTextFile(const PbMessage& proto,$/;"	f	namespace:oneflow	signature:(const PbMessage& proto, const std::string& file_path)
oneflow::PrintProtoToTextFile	common/protobuf.h	/^void PrintProtoToTextFile(const PbMessage& proto, const std::string& file_path);$/;"	p	namespace:oneflow	signature:(const PbMessage& proto, const std::string& file_path)
oneflow::REGISTER_ACTOR	actor/backward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kBackward, BackwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBackward, BackwardCompActor)
oneflow::REGISTER_ACTOR	actor/boxing_actor.cpp	/^REGISTER_ACTOR(TaskType::kBoxing, BoxingActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBoxing, BoxingActor)
oneflow::REGISTER_ACTOR	actor/copy_comm_net_actor.cpp	/^REGISTER_ACTOR(TaskType::kCopyCommNet, CopyCommNetActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kCopyCommNet, CopyCommNetActor)
oneflow::REGISTER_ACTOR	actor/copy_hd_actor.cpp	/^REGISTER_ACTOR(TaskType::kCopyHd, CopyHdActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kCopyHd, CopyHdActor)
oneflow::REGISTER_ACTOR	actor/forward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kForward, ForwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kForward, ForwardCompActor)
oneflow::REGISTER_ACTOR	actor/forward_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLoss, ForwardCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLoss, ForwardCompActor)
oneflow::REGISTER_ACTOR	actor/loss_accumulate_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLossAcc, LossAccCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLossAcc, LossAccCompActor)
oneflow::REGISTER_ACTOR	actor/loss_print_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kLossPrint, LossPrintCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kLossPrint, LossPrintCompActor)
oneflow::REGISTER_ACTOR	actor/model_diff_accumulate_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdDiffAcc, MdDiffAccCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdDiffAcc, MdDiffAccCompActor)
oneflow::REGISTER_ACTOR	actor/model_save_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdSave, MdSaveCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdSave, MdSaveCompActor)
oneflow::REGISTER_ACTOR	actor/model_update_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kMdUpdt, MdUpdtCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kMdUpdt, MdUpdtCompActor)
oneflow::REGISTER_ACTOR	actor/print_compute_actor.cpp	/^REGISTER_ACTOR(TaskType::kPrint, PrintCompActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kPrint, PrintCompActor)
oneflow::REGISTER_ACTOR	actor/rnn_boxing_actor.cpp	/^REGISTER_ACTOR(TaskType::kBoxing, BoxingActor);$/;"	p	namespace:oneflow	file:	signature:(TaskType::kBoxing, BoxingActor)
oneflow::REGISTER_ACTOR	actor/source_compute_actor.cpp	/^REGISTER_ACTOR(kSource, SourceCompActor);$/;"	p	namespace:oneflow	file:	signature:(kSource, SourceCompActor)
oneflow::REGISTER_OP	operator/accumulate_op.cpp	/^REGISTER_OP(OperatorConf::kAccumulateConf, AccumulateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kAccumulateConf, AccumulateOp)
oneflow::REGISTER_OP	operator/boxing_op.cpp	/^REGISTER_OP(OperatorConf::kBoxingConf, BoxingOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kBoxingConf, BoxingOp)
oneflow::REGISTER_OP	operator/clone_op.cpp	/^REGISTER_OP(OperatorConf::kCloneConf, CloneOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCloneConf, CloneOp)
oneflow::REGISTER_OP	operator/concat_op.cpp	/^REGISTER_OP(OperatorConf::kConcatConf, ConcatOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConcatConf, ConcatOp)
oneflow::REGISTER_OP	operator/convolution_op.cpp	/^REGISTER_OP(OperatorConf::kConvolutionConf, ConvolutionOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kConvolutionConf, ConvolutionOp)
oneflow::REGISTER_OP	operator/copy_comm_net_op.cpp	/^REGISTER_OP(OperatorConf::kCopyCommNetConf, CopyCommNetOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyCommNetConf, CopyCommNetOp)
oneflow::REGISTER_OP	operator/copy_hd_op.cpp	/^REGISTER_OP(OperatorConf::kCopyHdConf, CopyHdOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kCopyHdConf, CopyHdOp)
oneflow::REGISTER_OP	operator/data_loader_op.cpp	/^REGISTER_OP(OperatorConf::kDataLoaderConf, DataLoaderOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kDataLoaderConf, DataLoaderOp)
oneflow::REGISTER_OP	operator/innerproduct_op.cpp	/^REGISTER_OP(OperatorConf::kInnerproductConf, InnerProductOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kInnerproductConf, InnerProductOp)
oneflow::REGISTER_OP	operator/loss_print_op.cpp	/^REGISTER_OP(OperatorConf::kLossPrintConf, LossPrintOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kLossPrintConf, LossPrintOp)
oneflow::REGISTER_OP	operator/model_save_op.cpp	/^REGISTER_OP(OperatorConf::kModelSaveConf, ModelSaveOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kModelSaveConf, ModelSaveOp)
oneflow::REGISTER_OP	operator/momentum_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kMomentumMdupdtConf, MomentumModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMomentumMdupdtConf, MomentumModelUpdateOp)
oneflow::REGISTER_OP	operator/multinomial_logistic_loss_op.cpp	/^REGISTER_OP(OperatorConf::kMultinomialLogisticLossConf,$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kMultinomialLogisticLossConf, MultinomialLogisticLossOp)
oneflow::REGISTER_OP	operator/normal_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kNormalMdupdtConf, NormalModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kNormalMdupdtConf, NormalModelUpdateOp)
oneflow::REGISTER_OP	operator/pooling_op.cpp	/^REGISTER_OP(OperatorConf::kPoolingConf, PoolingOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPoolingConf, PoolingOp)
oneflow::REGISTER_OP	operator/print_op.cpp	/^REGISTER_OP(OperatorConf::kPrintConf, PrintOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kPrintConf, PrintOp)
oneflow::REGISTER_OP	operator/relu_op.cpp	/^REGISTER_OP(OperatorConf::kReluConf, ReluOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kReluConf, ReluOp)
oneflow::REGISTER_OP	operator/rmsprop_model_update_op.cpp	/^REGISTER_OP(OperatorConf::kRmspropMdupdtConf, RMSPropModelUpdateOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kRmspropMdupdtConf, RMSPropModelUpdateOp)
oneflow::REGISTER_OP	operator/softmax_loss_op.cpp	/^REGISTER_OP(OperatorConf::kSoftmaxLossConf, SoftmaxLossOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxLossConf, SoftmaxLossOp)
oneflow::REGISTER_OP	operator/softmax_op.cpp	/^REGISTER_OP(OperatorConf::kSoftmaxConf, SoftmaxOp);$/;"	p	namespace:oneflow	file:	signature:(OperatorConf::kSoftmaxConf, SoftmaxOp)
oneflow::RMSPropMdUpdateKernel::UpdateModel	kernel/rmsprop_model_update_kernel.cpp	/^void RMSPropMdUpdateKernel<device_type, T>::UpdateModel($/;"	f	class:oneflow::RMSPropMdUpdateKernel	signature:( DeviceCtx* ctx, const Blob* pre_model_blob, int64_t next_model_vid, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::RMSPropModelUpdateOp::GetSpecialConf	operator/rmsprop_model_update_op.cpp	/^const PbMessage& RMSPropModelUpdateOp::GetSpecialConf() const {$/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:() const
oneflow::RMSPropModelUpdateOp::InferBlobDescs	operator/rmsprop_model_update_op.cpp	/^void RMSPropModelUpdateOp::InferBlobDescs($/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::RMSPropModelUpdateOp::InitFromOpConf	operator/rmsprop_model_update_op.cpp	/^void RMSPropModelUpdateOp::InitFromOpConf() {$/;"	f	class:oneflow::RMSPropModelUpdateOp	signature:()
oneflow::RedirectStdoutAndStderrToGlogDir	common/util.cpp	/^void RedirectStdoutAndStderrToGlogDir() {$/;"	f	namespace:oneflow	signature:()
oneflow::RedirectStdoutAndStderrToGlogDir	common/util.h	/^void RedirectStdoutAndStderrToGlogDir();$/;"	p	namespace:oneflow	signature:()
oneflow::Regst::GetBlobByLbn	register/register.cpp	/^Blob* Regst::GetBlobByLbn(const std::string& lbn) {$/;"	f	class:oneflow::Regst	signature:(const std::string& lbn)
oneflow::Regst::Regst	register/register.cpp	/^Regst::Regst() {$/;"	f	class:oneflow::Regst	signature:()
oneflow::Regst::consumers_actor_id	register/register.cpp	/^const std::vector<int64_t>& Regst::consumers_actor_id() const {$/;"	f	class:oneflow::Regst	signature:() const
oneflow::RegstDesc::AddConsumer	register/register_desc.cpp	/^void RegstDesc::AddConsumer(const TaskNode* new_consumer) {$/;"	f	class:oneflow::RegstDesc	signature:(const TaskNode* new_consumer)
oneflow::RegstDesc::AddLbn	register/register_desc.cpp	/^BlobDesc* RegstDesc::AddLbn(const std::string& lbn) {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn)
oneflow::RegstDesc::CompPackedBlobDesc	register/register_desc.cpp	/^BlobDesc RegstDesc::CompPackedBlobDesc() const {$/;"	f	class:oneflow::RegstDesc	signature:() const
oneflow::RegstDesc::CopyBlobDescFrom	register/register_desc.cpp	/^void RegstDesc::CopyBlobDescFrom(const RegstDesc* rhs) {$/;"	f	class:oneflow::RegstDesc	signature:(const RegstDesc* rhs)
oneflow::RegstDesc::CopyBlobDescWithoutAddLbn	register/register_desc.cpp	/^void RegstDesc::CopyBlobDescWithoutAddLbn(const RegstDesc* rhs) {$/;"	f	class:oneflow::RegstDesc	signature:(const RegstDesc* rhs)
oneflow::RegstDesc::EraseZeroSizeBlob	register/register_desc.cpp	/^void RegstDesc::EraseZeroSizeBlob() {$/;"	f	class:oneflow::RegstDesc	signature:()
oneflow::RegstDesc::ForEachLbn	register/register_desc.cpp	/^void RegstDesc::ForEachLbn(std::function<void(const std::string&)> func) const {$/;"	f	class:oneflow::RegstDesc	signature:(std::function<void(const std::string&)> func) const
oneflow::RegstDesc::GetBlobDesc	register/register_desc.cpp	/^const BlobDesc* RegstDesc::GetBlobDesc(const std::string& lbn) const {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn) const
oneflow::RegstDesc::InferMemCase	register/register_desc.cpp	/^void RegstDesc::InferMemCase() {$/;"	f	class:oneflow::RegstDesc	signature:()
oneflow::RegstDesc::Lock	register/register_desc.cpp	/^void RegstDesc::Lock() {$/;"	f	class:oneflow::RegstDesc	signature:()
oneflow::RegstDesc::MutBlobDesc	register/register_desc.cpp	/^BlobDesc* RegstDesc::MutBlobDesc(const std::string& lbn) {$/;"	f	class:oneflow::RegstDesc	signature:(const std::string& lbn)
oneflow::RegstDesc::RegstDesc	register/register_desc.cpp	/^RegstDesc::RegstDesc() {$/;"	f	class:oneflow::RegstDesc	signature:()
oneflow::RegstDesc::ToProto	register/register_desc.cpp	/^void RegstDesc::ToProto(RegstDescProto* ret) const {$/;"	f	class:oneflow::RegstDesc	signature:(RegstDescProto* ret) const
oneflow::RegstMgr::NewRegsts	register/register_manager.cpp	/^void RegstMgr::NewRegsts(const RegstDescProto& regst_desc_proto,$/;"	f	class:oneflow::RegstMgr	signature:(const RegstDescProto& regst_desc_proto, std::function<void(Regst*)> OneRegstDone)
oneflow::ReluKernel::BackwardDataContent	kernel/relu_kernel.cpp	/^void ReluKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::ReluKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ReluKernel::ForwardDataContent	kernel/relu_kernel.cpp	/^void ReluKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::ReluKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::ReluOp::GetSpecialConf	operator/relu_op.cpp	/^const PbMessage& ReluOp::GetSpecialConf() const {$/;"	f	class:oneflow::ReluOp	signature:() const
oneflow::ReluOp::InferBlobDescs	operator/relu_op.cpp	/^void ReluOp::InferBlobDescs($/;"	f	class:oneflow::ReluOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::ReluOp::InitFromOpConf	operator/relu_op.cpp	/^void ReluOp::InitFromOpConf() {$/;"	f	class:oneflow::ReluOp	signature:()
oneflow::RequestReadMsg	comm_network/epoll/socket_message.h	/^struct RequestReadMsg {$/;"	s	namespace:oneflow
oneflow::RequestReadMsg::dst_token	comm_network/epoll/socket_message.h	/^  const void* dst_token;$/;"	m	struct:oneflow::RequestReadMsg	access:public
oneflow::RequestReadMsg::read_done_id	comm_network/epoll/socket_message.h	/^  void* read_done_id;$/;"	m	struct:oneflow::RequestReadMsg	access:public
oneflow::RequestReadMsg::src_token	comm_network/epoll/socket_message.h	/^  const void* src_token;$/;"	m	struct:oneflow::RequestReadMsg	access:public
oneflow::RequestWriteMsg	comm_network/epoll/socket_message.h	/^struct RequestWriteMsg {$/;"	s	namespace:oneflow
oneflow::RequestWriteMsg::dst_machine_id	comm_network/epoll/socket_message.h	/^  int64_t dst_machine_id;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
oneflow::RequestWriteMsg::dst_token	comm_network/epoll/socket_message.h	/^  const void* dst_token;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
oneflow::RequestWriteMsg::read_done_id	comm_network/epoll/socket_message.h	/^  void* read_done_id;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
oneflow::RequestWriteMsg::src_token	comm_network/epoll/socket_message.h	/^  const void* src_token;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
oneflow::RtRegstDesc	register/runtime_register_desc.h	/^class RtRegstDesc {$/;"	c	namespace:oneflow
oneflow::RtRegstDesc::GetBlobDescFromLbn	register/runtime_register_desc.cpp	/^const BlobDesc* RtRegstDesc::GetBlobDescFromLbn(const std::string& lbn) const {$/;"	f	class:oneflow::RtRegstDesc	signature:(const std::string& lbn) const
oneflow::RtRegstDesc::GetBlobDescFromLbn	register/runtime_register_desc.h	/^  const BlobDesc* GetBlobDescFromLbn(const std::string& lbn) const;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(const std::string& lbn) const
oneflow::RtRegstDesc::OF_DISALLOW_COPY_AND_MOVE	register/runtime_register_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(RtRegstDesc);$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(RtRegstDesc)
oneflow::RtRegstDesc::RtRegstDesc	register/runtime_register_desc.cpp	/^RtRegstDesc::RtRegstDesc(const RegstDescProto& proto) {$/;"	f	class:oneflow::RtRegstDesc	signature:(const RegstDescProto& proto)
oneflow::RtRegstDesc::RtRegstDesc	register/runtime_register_desc.h	/^  RtRegstDesc() = delete;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:()
oneflow::RtRegstDesc::RtRegstDesc	register/runtime_register_desc.h	/^  RtRegstDesc(const RegstDescProto& regst_desc_proto);$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:(const RegstDescProto& regst_desc_proto)
oneflow::RtRegstDesc::consumers_actor_id	register/runtime_register_desc.h	/^  const std::vector<int64_t>& consumers_actor_id() const {$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::consumers_actor_id_	register/runtime_register_desc.h	/^  std::vector<int64_t> consumers_actor_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::lbn2blob_desc_	register/runtime_register_desc.h	/^  std::unordered_map<std::string, std::unique_ptr<BlobDesc>> lbn2blob_desc_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::mem_case	register/runtime_register_desc.h	/^  const MemoryCase& mem_case() const { return mem_case_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::mem_case_	register/runtime_register_desc.h	/^  MemoryCase mem_case_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::packed_blob_desc	register/runtime_register_desc.h	/^  const BlobDesc* packed_blob_desc() const { return &packed_blob_desc_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::packed_blob_desc_	register/runtime_register_desc.h	/^  BlobDesc packed_blob_desc_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::producer_actor_id	register/runtime_register_desc.h	/^  int64_t producer_actor_id() const { return producer_actor_id_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::producer_actor_id_	register/runtime_register_desc.h	/^  int64_t producer_actor_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::register_num	register/runtime_register_desc.h	/^  int64_t register_num() const { return register_num_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::register_num_	register/runtime_register_desc.h	/^  int64_t register_num_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::regst_desc_id	register/runtime_register_desc.h	/^  int64_t regst_desc_id() const { return regst_desc_id_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
oneflow::RtRegstDesc::regst_desc_id_	register/runtime_register_desc.h	/^  int64_t regst_desc_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
oneflow::RtRegstDesc::~RtRegstDesc	register/runtime_register_desc.h	/^  ~RtRegstDesc() = default;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:()
oneflow::Runtime::DeleteAllSingleton	job/runtime.cpp	/^void Runtime::DeleteAllSingleton() {$/;"	f	class:oneflow::Runtime	signature:()
oneflow::Runtime::NewAllSingleton	job/runtime.cpp	/^void Runtime::NewAllSingleton(const Plan& plan, bool is_experiment_phase) {$/;"	f	class:oneflow::Runtime	signature:(const Plan& plan, bool is_experiment_phase)
oneflow::Runtime::Runtime	job/runtime.cpp	/^Runtime::Runtime(const Plan& plan, bool is_experiment_phase) {$/;"	f	class:oneflow::Runtime	signature:(const Plan& plan, bool is_experiment_phase)
oneflow::RuntimeCtx::DecreaseCounter	job/runtime_context.cpp	/^void RuntimeCtx::DecreaseCounter(const std::string& name) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name)
oneflow::RuntimeCtx::NewCounter	job/runtime_context.cpp	/^void RuntimeCtx::NewCounter(const std::string& name, int64_t val) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name, int64_t val)
oneflow::RuntimeCtx::RuntimeCtx	job/runtime_context.cpp	/^RuntimeCtx::RuntimeCtx(int64_t total_piece_num, bool is_experiment_phase) {$/;"	f	class:oneflow::RuntimeCtx	signature:(int64_t total_piece_num, bool is_experiment_phase)
oneflow::RuntimeCtx::WaitUntilCntEqualZero	job/runtime_context.cpp	/^void RuntimeCtx::WaitUntilCntEqualZero(const std::string& name) {$/;"	f	class:oneflow::RuntimeCtx	signature:(const std::string& name)
oneflow::SetBoxSplitPart	graph/boxing_task_node.cpp	/^static void SetBoxSplitPart($/;"	f	namespace:oneflow	signature:( const std::vector<BoxingTaskNode::EdgeInfo>& sorted_edges, const BalancedSplitter& bs, BoxSplitConf* split_conf)
oneflow::SetHostPinnedMemoryAccordingToConsumers	register/register_desc.cpp	/^static void SetHostPinnedMemoryAccordingToConsumers($/;"	f	namespace:oneflow	signature:( const HashSet<const TaskNode*>& consumers, MemoryCase* mem_case)
oneflow::Shape::Count	common/shape.cpp	/^int64_t Shape::Count(int64_t begin_axis) const {$/;"	f	class:oneflow::Shape	signature:(int64_t begin_axis) const
oneflow::Shape::Count	common/shape.cpp	/^int64_t Shape::Count(int64_t begin_axis, int64_t end_axis) const {$/;"	f	class:oneflow::Shape	signature:(int64_t begin_axis, int64_t end_axis) const
oneflow::Shape::DebugStr	common/shape.cpp	/^std::string Shape::DebugStr() const {$/;"	f	class:oneflow::Shape	signature:() const
oneflow::Shape::SerializeWithTextFormat	common/shape.h	/^void Shape::SerializeWithTextFormat(StreamT& out_stream) const {$/;"	f	class:oneflow::Shape	signature:(StreamT& out_stream) const
oneflow::Shape::Set	common/shape.cpp	/^void Shape::Set(int64_t index, int64_t val) {$/;"	f	class:oneflow::Shape	signature:(int64_t index, int64_t val)
oneflow::Shape::Shape	common/shape.cpp	/^Shape::Shape(const ShapeProto& shape_proto) {$/;"	f	class:oneflow::Shape	signature:(const ShapeProto& shape_proto)
oneflow::Shape::Shape	common/shape.cpp	/^Shape::Shape(const std::vector<int64_t>& dim_vec) : dim_vec_(dim_vec) {$/;"	f	class:oneflow::Shape	signature:(const std::vector<int64_t>& dim_vec)
oneflow::Shape::ToProto	common/shape.cpp	/^void Shape::ToProto(ShapeProto* ret) const {$/;"	f	class:oneflow::Shape	signature:(ShapeProto* ret) const
oneflow::Shape::UpdateElemCnt	common/shape.cpp	/^void Shape::UpdateElemCnt() {$/;"	f	class:oneflow::Shape	signature:()
oneflow::Shape::operator ==	common/shape.cpp	/^bool Shape::operator==(const Shape& rhs) const {$/;"	f	class:oneflow::Shape	signature:(const Shape& rhs) const
oneflow::SinkCompActor	actor/sink_compute_actor.h	/^class SinkCompActor : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::SinkCompActor::Act	actor/sink_compute_actor.cpp	/^void SinkCompActor::Act() {$/;"	f	class:oneflow::SinkCompActor	signature:()
oneflow::SinkCompActor::AsyncReturnAllReadableRegst	actor/sink_compute_actor.cpp	/^void SinkCompActor::AsyncReturnAllReadableRegst() { UNEXPECTED_RUN(); }$/;"	f	class:oneflow::SinkCompActor	signature:()
oneflow::SinkCompActor::GenSinkKernelCtx	actor/sink_compute_actor.h	/^  virtual KernelCtx GenSinkKernelCtx() { return GenDefaultKernelCtx(); }$/;"	f	class:oneflow::SinkCompActor	access:protected	signature:()
oneflow::SinkCompActor::HandlerNormal	actor/sink_compute_actor.cpp	/^int SinkCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::SinkCompActor	signature:(const ActorMsg& msg)
oneflow::SinkCompActor::IsReadAlwaysUnReadyFromNow	actor/sink_compute_actor.cpp	/^bool SinkCompActor::IsReadAlwaysUnReadyFromNow() {$/;"	f	class:oneflow::SinkCompActor	signature:()
oneflow::SinkCompActor::OF_DISALLOW_COPY_AND_MOVE	actor/sink_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(SinkCompActor);$/;"	p	class:oneflow::SinkCompActor	access:public	signature:(SinkCompActor)
oneflow::SinkCompActor::SinkCompActor	actor/sink_compute_actor.h	/^  SinkCompActor() = default;$/;"	p	class:oneflow::SinkCompActor	access:public	signature:()
oneflow::SinkCompActor::VirtualCompActorInit	actor/sink_compute_actor.cpp	/^void SinkCompActor::VirtualCompActorInit(const TaskProto& proto) {$/;"	f	class:oneflow::SinkCompActor	signature:(const TaskProto& proto)
oneflow::SinkCompActor::VirtualSinkCompActorInit	actor/sink_compute_actor.h	/^  virtual void VirtualSinkCompActorInit(const TaskProto&) {}$/;"	f	class:oneflow::SinkCompActor	access:protected	signature:(const TaskProto&)
oneflow::SinkCompActor::in_regst_	actor/sink_compute_actor.h	/^  Regst* in_regst_;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::override	actor/sink_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::override	actor/sink_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::override	actor/sink_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::override	actor/sink_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::override	actor/sink_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::SinkCompActor	access:private
oneflow::SinkCompActor::~SinkCompActor	actor/sink_compute_actor.h	/^  virtual ~SinkCompActor() = default;$/;"	p	class:oneflow::SinkCompActor	access:public	signature:()
oneflow::SinkCompTaskNode	graph/sink_compute_task_node.h	/^class SinkCompTaskNode : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::SinkCompTaskNode::BuildExecGphAndRegst	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
oneflow::SinkCompTaskNode::ConsumeAllRegsts	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::ConsumeAllRegsts() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
oneflow::SinkCompTaskNode::FixThrdId	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::FixThrdId() {$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
oneflow::SinkCompTaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/sink_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(SinkCompTaskNode);$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:(SinkCompTaskNode)
oneflow::SinkCompTaskNode::ProduceAllRegstsAndBindEdges	graph/sink_compute_task_node.cpp	/^void SinkCompTaskNode::ProduceAllRegstsAndBindEdges() {}$/;"	f	class:oneflow::SinkCompTaskNode	signature:()
oneflow::SinkCompTaskNode::SinkCompTaskNode	graph/sink_compute_task_node.h	/^  SinkCompTaskNode() = default;$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:()
oneflow::SinkCompTaskNode::override	graph/sink_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
oneflow::SinkCompTaskNode::override	graph/sink_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
oneflow::SinkCompTaskNode::override	graph/sink_compute_task_node.h	/^  void FixThrdId() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
oneflow::SinkCompTaskNode::override	graph/sink_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
oneflow::SinkCompTaskNode::~SinkCompTaskNode	graph/sink_compute_task_node.h	/^  virtual ~SinkCompTaskNode() = default;$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:()
oneflow::Snapshot::ConcatLbnFile	persistence/snapshot.cpp	/^void Snapshot::ConcatLbnFile(const std::string& lbn, int32_t part_num,$/;"	f	class:oneflow::Snapshot	signature:(const std::string& lbn, int32_t part_num, const std::string& concat_file)
oneflow::Snapshot::GetDirFromOpName	persistence/snapshot.cpp	/^std::string Snapshot::GetDirFromOpName(const std::string& op_name) const {$/;"	f	class:oneflow::Snapshot	signature:(const std::string& op_name) const
oneflow::Snapshot::GetOutStream	persistence/snapshot.cpp	/^std::unique_ptr<PersistentOutStream> Snapshot::GetOutStream($/;"	f	class:oneflow::Snapshot	signature:( const std::string& lbn, int32_t part_id)
oneflow::Snapshot::OnePartDone	persistence/snapshot.cpp	/^void Snapshot::OnePartDone(const std::string& lbn, int32_t part_id,$/;"	f	class:oneflow::Snapshot	signature:(const std::string& lbn, int32_t part_id, int32_t part_num)
oneflow::Snapshot::Snapshot	persistence/snapshot.cpp	/^Snapshot::Snapshot(const std::string& snapshot_root_path) {$/;"	f	class:oneflow::Snapshot	signature:(const std::string& snapshot_root_path)
oneflow::SnapshotMgr	persistence/snapshot_manager.h	/^class SnapshotMgr {$/;"	c	namespace:oneflow
oneflow::SnapshotMgr::GetReadableSnapshot	persistence/snapshot_manager.h	/^  const Snapshot* GetReadableSnapshot() { return readable_snapshot_.get(); }$/;"	f	class:oneflow::SnapshotMgr	access:public	signature:()
oneflow::SnapshotMgr::GetWriteableSnapshot	persistence/snapshot_manager.cpp	/^Snapshot* SnapshotMgr::GetWriteableSnapshot(int64_t snapshot_id) {$/;"	f	class:oneflow::SnapshotMgr	signature:(int64_t snapshot_id)
oneflow::SnapshotMgr::GetWriteableSnapshot	persistence/snapshot_manager.h	/^  Snapshot* GetWriteableSnapshot(int64_t snapshot_id);$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:(int64_t snapshot_id)
oneflow::SnapshotMgr::OF_SINGLETON	persistence/snapshot_manager.h	/^  OF_SINGLETON(SnapshotMgr);$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:(SnapshotMgr)
oneflow::SnapshotMgr::SnapshotMgr	persistence/snapshot_manager.cpp	/^SnapshotMgr::SnapshotMgr(const Plan& plan) {$/;"	f	class:oneflow::SnapshotMgr	signature:(const Plan& plan)
oneflow::SnapshotMgr::SnapshotMgr	persistence/snapshot_manager.h	/^  SnapshotMgr() = delete;$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:()
oneflow::SnapshotMgr::SnapshotMgr	persistence/snapshot_manager.h	/^  SnapshotMgr(const Plan& plan);$/;"	p	class:oneflow::SnapshotMgr	access:private	signature:(const Plan& plan)
oneflow::SnapshotMgr::model_save_snapshots_path_	persistence/snapshot_manager.h	/^  std::string model_save_snapshots_path_;$/;"	m	class:oneflow::SnapshotMgr	access:private
oneflow::SnapshotMgr::readable_snapshot_	persistence/snapshot_manager.h	/^  std::unique_ptr<const Snapshot> readable_snapshot_;$/;"	m	class:oneflow::SnapshotMgr	access:private
oneflow::SnapshotMgr::snapshot_id2writeable_snapshot_	persistence/snapshot_manager.h	/^  HashMap<int64_t, std::unique_ptr<Snapshot>> snapshot_id2writeable_snapshot_;$/;"	m	class:oneflow::SnapshotMgr	access:private
oneflow::SnapshotMgr::total_mbn_num	persistence/snapshot_manager.h	/^  int64_t total_mbn_num() const { return total_mbn_num_; }$/;"	f	class:oneflow::SnapshotMgr	access:public	signature:() const
oneflow::SnapshotMgr::total_mbn_num_	persistence/snapshot_manager.h	/^  int64_t total_mbn_num_;$/;"	m	class:oneflow::SnapshotMgr	access:private
oneflow::SnapshotMgr::~SnapshotMgr	persistence/snapshot_manager.h	/^  ~SnapshotMgr() = default;$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:()
oneflow::SocketHelper::AsyncWrite	comm_network/epoll/socket_helper.cpp	/^void SocketHelper::AsyncWrite(const SocketMsg& msg) {$/;"	f	class:oneflow::SocketHelper	signature:(const SocketMsg& msg)
oneflow::SocketHelper::SocketHelper	comm_network/epoll/socket_helper.cpp	/^SocketHelper::SocketHelper(int sockfd, IOEventPoller* poller) {$/;"	f	class:oneflow::SocketHelper	signature:(int sockfd, IOEventPoller* poller)
oneflow::SocketHelper::~SocketHelper	comm_network/epoll/socket_helper.cpp	/^SocketHelper::~SocketHelper() {$/;"	f	class:oneflow::SocketHelper	signature:()
oneflow::SocketMemDesc	comm_network/epoll/socket_memory_desc.h	/^struct SocketMemDesc {$/;"	s	namespace:oneflow
oneflow::SocketMemDesc::byte_size	comm_network/epoll/socket_memory_desc.h	/^  size_t byte_size;$/;"	m	struct:oneflow::SocketMemDesc	access:public
oneflow::SocketMemDesc::mem_ptr	comm_network/epoll/socket_memory_desc.h	/^  void* mem_ptr;$/;"	m	struct:oneflow::SocketMemDesc	access:public
oneflow::SocketMsg	comm_network/epoll/socket_message.h	/^struct SocketMsg {$/;"	s	namespace:oneflow
oneflow::SocketMsg::msg_type	comm_network/epoll/socket_message.h	/^  SocketMsgType msg_type;$/;"	m	struct:oneflow::SocketMsg	access:public
oneflow::SocketMsgType	comm_network/epoll/socket_message.h	/^enum class SocketMsgType {$/;"	c	namespace:oneflow
oneflow::SocketReadHelper::DoCurRead	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::DoCurRead($/;"	f	class:oneflow::SocketReadHelper	signature:( void (SocketReadHelper::*set_cur_read_done)())
oneflow::SocketReadHelper::MsgBodyReadHandle	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::MsgBodyReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::MsgHeadReadHandle	comm_network/epoll/socket_read_helper.cpp	/^bool SocketReadHelper::MsgHeadReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::NotifyMeSocketReadable	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::NotifyMeSocketReadable() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::ReadUntilSocketNotReadable	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::ReadUntilSocketNotReadable() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SetStatusWhenActorMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenActorMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SetStatusWhenMsgBodyDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenMsgBodyDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SetStatusWhenMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SetStatusWhenRequestReadMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenRequestReadMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SetStatusWhenRequestWriteMsgHeadDone	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SetStatusWhenRequestWriteMsgHeadDone() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::SocketReadHelper	comm_network/epoll/socket_read_helper.cpp	/^SocketReadHelper::SocketReadHelper(int sockfd) {$/;"	f	class:oneflow::SocketReadHelper	signature:(int sockfd)
oneflow::SocketReadHelper::SwitchToMsgHeadReadHandle	comm_network/epoll/socket_read_helper.cpp	/^void SocketReadHelper::SwitchToMsgHeadReadHandle() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketReadHelper::~SocketReadHelper	comm_network/epoll/socket_read_helper.cpp	/^SocketReadHelper::~SocketReadHelper() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
oneflow::SocketWriteHelper::AsyncWrite	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::AsyncWrite(const SocketMsg& msg) {$/;"	f	class:oneflow::SocketWriteHelper	signature:(const SocketMsg& msg)
oneflow::SocketWriteHelper::DoCurWrite	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::DoCurWrite($/;"	f	class:oneflow::SocketWriteHelper	signature:( void (SocketWriteHelper::*set_cur_write_done)())
oneflow::SocketWriteHelper::InitMsgWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::InitMsgWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::MsgBodyWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::MsgBodyWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::MsgHeadWriteHandle	comm_network/epoll/socket_write_helper.cpp	/^bool SocketWriteHelper::MsgHeadWriteHandle() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::NotifyMeSocketWriteable	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::NotifyMeSocketWriteable() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::ProcessQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::ProcessQueueNotEmptyEvent() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SendQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SendQueueNotEmptyEvent() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SetStatusWhenActorMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenActorMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SetStatusWhenMsgBodyDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenMsgBodyDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SetStatusWhenMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SetStatusWhenRequestReadMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenRequestReadMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SetStatusWhenRequestWriteMsgHeadDone	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::SetStatusWhenRequestWriteMsgHeadDone() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::SocketWriteHelper	comm_network/epoll/socket_write_helper.cpp	/^SocketWriteHelper::SocketWriteHelper(int sockfd, IOEventPoller* poller) {$/;"	f	class:oneflow::SocketWriteHelper	signature:(int sockfd, IOEventPoller* poller)
oneflow::SocketWriteHelper::WriteUntilMsgQueueEmptyOrSocketNotWriteable	comm_network/epoll/socket_write_helper.cpp	/^void SocketWriteHelper::WriteUntilMsgQueueEmptyOrSocketNotWriteable() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SocketWriteHelper::~SocketWriteHelper	comm_network/epoll/socket_write_helper.cpp	/^SocketWriteHelper::~SocketWriteHelper() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
oneflow::SoftmaxComputeProb	kernel/softmax_kernel.h	/^void SoftmaxComputeProb(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	namespace:oneflow	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* in, T* tmp, T* prob)
oneflow::SoftmaxKernel::BackwardDataContent	kernel/softmax_kernel.cpp	/^void SoftmaxKernel<device_type, T>::BackwardDataContent($/;"	f	class:oneflow::SoftmaxKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::SoftmaxKernel::ForwardDataContent	kernel/softmax_kernel.cpp	/^void SoftmaxKernel<device_type, T>::ForwardDataContent($/;"	f	class:oneflow::SoftmaxKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::SoftmaxLossKernel::ForwardDataContent	kernel/softmax_loss_kernel.cpp	/^void SoftmaxLossKernel<device_type, PredType, LabelType>::ForwardDataContent($/;"	f	class:oneflow::SoftmaxLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::SoftmaxLossKernel::ForwardDataId	kernel/softmax_loss_kernel.cpp	/^void SoftmaxLossKernel<device_type, PredType, LabelType>::ForwardDataId($/;"	f	class:oneflow::SoftmaxLossKernel	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::SoftmaxLossOp::GetSpecialConf	operator/softmax_loss_op.cpp	/^const PbMessage& SoftmaxLossOp::GetSpecialConf() const {$/;"	f	class:oneflow::SoftmaxLossOp	signature:() const
oneflow::SoftmaxLossOp::InferBlobDescs	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::InferBlobDescs($/;"	f	class:oneflow::SoftmaxLossOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::SoftmaxLossOp::InitFromOpConf	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::InitFromOpConf() {$/;"	f	class:oneflow::SoftmaxLossOp	signature:()
oneflow::SoftmaxLossOp::VirtualGenKernelConf	operator/softmax_loss_op.cpp	/^void SoftmaxLossOp::VirtualGenKernelConf($/;"	f	class:oneflow::SoftmaxLossOp	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx, KernelConf* kernel_conf) const
oneflow::SoftmaxOp::GetSpecialConf	operator/softmax_op.cpp	/^const PbMessage& SoftmaxOp::GetSpecialConf() const {$/;"	f	class:oneflow::SoftmaxOp	signature:() const
oneflow::SoftmaxOp::InferBlobDescs	operator/softmax_op.cpp	/^void SoftmaxOp::InferBlobDescs($/;"	f	class:oneflow::SoftmaxOp	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::SoftmaxOp::InitFromOpConf	operator/softmax_op.cpp	/^void SoftmaxOp::InitFromOpConf() {$/;"	f	class:oneflow::SoftmaxOp	signature:()
oneflow::SortAndRemoveDuplication	common/util.h	/^void SortAndRemoveDuplication(std::vector<T>* vec) {$/;"	f	namespace:oneflow	signature:(std::vector<T>* vec)
oneflow::SortByParallelId	graph/compute_task_node.cpp	/^void SortByParallelId(std::vector<CompTaskNode*>* node_vec) {$/;"	f	namespace:oneflow	signature:(std::vector<CompTaskNode*>* node_vec)
oneflow::SortByParallelId	graph/compute_task_node.h	/^void SortByParallelId(std::vector<CompTaskNode*>* node_vec);$/;"	p	namespace:oneflow	signature:(std::vector<CompTaskNode*>* node_vec)
oneflow::SourceChainNode::set_data_output_lbns	graph/chain_node.cpp	/^void SourceChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::SourceChainNode	signature:()
oneflow::SourceCompActor::Act	actor/source_compute_actor.cpp	/^void SourceCompActor::Act() {$/;"	f	class:oneflow::SourceCompActor	signature:()
oneflow::SourceCompActor::HandlerNormal	actor/source_compute_actor.cpp	/^int SourceCompActor::HandlerNormal(const ActorMsg& msg) {$/;"	f	class:oneflow::SourceCompActor	signature:(const ActorMsg& msg)
oneflow::SourceCompActor::HandlerWaitToStart	actor/source_compute_actor.cpp	/^int SourceCompActor::HandlerWaitToStart(const ActorMsg& msg) {$/;"	f	class:oneflow::SourceCompActor	signature:(const ActorMsg& msg)
oneflow::SourceCompActor::IsReadReady	actor/source_compute_actor.cpp	/^bool SourceCompActor::IsReadReady() {$/;"	f	class:oneflow::SourceCompActor	signature:()
oneflow::SourceCompActor::VirtualCompActorInit	actor/source_compute_actor.cpp	/^void SourceCompActor::VirtualCompActorInit(const TaskProto& task_proto) {$/;"	f	class:oneflow::SourceCompActor	signature:(const TaskProto& task_proto)
oneflow::SourceCompTaskNode::BuildExecGphAndRegst	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::BuildExecGphAndRegst() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
oneflow::SourceCompTaskNode::ConsumeAllRegsts	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::ConsumeAllRegsts() {}$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
oneflow::SourceCompTaskNode::FixThrdId	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::FixThrdId() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
oneflow::SourceCompTaskNode::ProduceAllRegstsAndBindEdges	graph/source_compute_task_node.cpp	/^void SourceCompTaskNode::ProduceAllRegstsAndBindEdges() {$/;"	f	class:oneflow::SourceCompTaskNode	signature:()
oneflow::Split	common/str_util.cpp	/^void Split(const std::string& text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(std::string&&)> Func)
oneflow::Split	common/str_util.h	/^void Split(const std::string& text, const std::string& delims,$/;"	p	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(std::string&&)> Func)
oneflow::SplitAndParseAs	common/str_util.h	/^void SplitAndParseAs(const std::string& text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const std::string& text, const std::string& delims, std::function<void(T&&)> Func)
oneflow::StdVec2PbRf	common/protobuf.h	/^inline PbRf<T> StdVec2PbRf(const std::vector<T>& vec) {$/;"	f	namespace:oneflow	signature:(const std::vector<T>& vec)
oneflow::StdVec2PbRpf	common/protobuf.h	/^inline PbRpf<T> StdVec2PbRpf(const std::vector<T>& vec) {$/;"	f	namespace:oneflow	signature:(const std::vector<T>& vec)
oneflow::StrToToken	common/str_util.cpp	/^const char* StrToToken(const char* text, const std::string& delims,$/;"	f	namespace:oneflow	signature:(const char* text, const std::string& delims, std::string* token)
oneflow::StrToToken	common/str_util.h	/^const char* StrToToken(const char* text, const std::string& delims,$/;"	p	namespace:oneflow	signature:(const char* text, const std::string& delims, std::string* token)
oneflow::StringReplace	common/str_util.h	/^inline void StringReplace(std::string* str, char old_ch, char new_ch) {$/;"	f	namespace:oneflow	signature:(std::string* str, char old_ch, char new_ch)
oneflow::TEST	common/balanced_splitter_test.cpp	/^TEST(BalancedSplitter, split_20_to_6_part) {$/;"	f	namespace:oneflow	signature:(BalancedSplitter, split_20_to_6_part)
oneflow::TEST	common/balanced_splitter_test.cpp	/^TEST(BalancedSplitter, split_2_to_3_part) {$/;"	f	namespace:oneflow	signature:(BalancedSplitter, split_2_to_3_part)
oneflow::TEST	common/channel_test.cpp	/^TEST(Channel, 30sender40receiver) {$/;"	f	namespace:oneflow	signature:(Channel, 30sender40receiver)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP, concate) {$/;"	f	namespace:oneflow	signature:(PP, concate)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP, stringize) {$/;"	f	namespace:oneflow	signature:(PP, stringize)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, for_each_tuple) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, for_each_tuple)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_big_seq_size) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_big_seq_size)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_different_seq_product) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_different_seq_product)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_for_each)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_product) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_product)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_product_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_product_for_each)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, internal_seq_size) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, internal_seq_size)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, make_tuple_seq) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, make_tuple_seq)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_SEQ, seq_product_for_each) {$/;"	f	namespace:oneflow	signature:(PP_SEQ, seq_product_for_each)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_TUPLE, internal_is_tuple_empty) {$/;"	f	namespace:oneflow	signature:(PP_TUPLE, internal_is_tuple_empty)
oneflow::TEST	common/preprocessor_test.cpp	/^TEST(PP_TUPLE, internal_tuple_size) {$/;"	f	namespace:oneflow	signature:(PP_TUPLE, internal_tuple_size)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_machine_id_and_name) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_machine_id_and_name)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_regst_desc_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_regst_desc_id)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_special_thrd_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_special_thrd_id)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, compile_task_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, compile_task_id)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, runtime_machine_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, runtime_machine_id)
oneflow::TEST	job/id_manager_test.cpp	/^TEST(IDMgr, runtime_thrd_id) {$/;"	f	namespace:oneflow	signature:(IDMgr, runtime_thrd_id)
oneflow::TEST	kernel/accumulate_kernel_test.cpp	/^TEST(AccumulateKernel, accumulate) {$/;"	f	namespace:oneflow	signature:(AccumulateKernel, accumulate)
oneflow::TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_add_clone_box) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_add_clone_box)
oneflow::TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_concat_clone_box) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_concat_clone_box)
oneflow::TEST	kernel/boxing_kernel_test.cpp	/^TEST(BoxingKernel, boxing_concat_split_box_with_null) {$/;"	f	namespace:oneflow	signature:(BoxingKernel, boxing_concat_split_box_with_null)
oneflow::TEST	kernel/boxing_kernel_test.cpp	/^TEST(boxingKernel, boxing_concat_split_box) {$/;"	f	namespace:oneflow	signature:(boxingKernel, boxing_concat_split_box)
oneflow::TEST	kernel/clone_kernel_test.cpp	/^TEST(CloneKernel, clone) {$/;"	f	namespace:oneflow	signature:(CloneKernel, clone)
oneflow::TEST	kernel/concat_kernel_test.cpp	/^TEST(ConcatKernel, concat) {$/;"	f	namespace:oneflow	signature:(ConcatKernel, concat)
oneflow::TEST	kernel/copy_hd_kernel_test.cpp	/^TEST(CopyHdKernel, copy_d2h) {$/;"	f	namespace:oneflow	signature:(CopyHdKernel, copy_d2h)
oneflow::TEST	kernel/innerproduct_kernel_test.cpp	/^TEST(InnerProductKernel, FillModelConstant) {$/;"	f	namespace:oneflow	signature:(InnerProductKernel, FillModelConstant)
oneflow::TEST	kernel/innerproduct_kernel_test.cpp	/^TEST(InnerProductKernel, IpKernelFwAndBp) {$/;"	f	namespace:oneflow	signature:(InnerProductKernel, IpKernelFwAndBp)
oneflow::TEST	kernel/momentum_model_update_kernel_test.cpp	/^TEST(MomentumMdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(MomentumMdUpdateKernel, model_update)
oneflow::TEST	kernel/multinomial_logistic_loss_kernel_test.cpp	/^TEST(MultinomialLogisticLossKernel, multinomial_logistic_loss_kernel) {$/;"	f	namespace:oneflow	signature:(MultinomialLogisticLossKernel, multinomial_logistic_loss_kernel)
oneflow::TEST	kernel/normal_model_update_kernel_test.cpp	/^TEST(MdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(MdUpdateKernel, model_update)
oneflow::TEST	kernel/pooling_kernel_test.cpp	/^TEST(PoolingKernel, pooling) {$/;"	f	namespace:oneflow	signature:(PoolingKernel, pooling)
oneflow::TEST	kernel/relu_kernel_test.cpp	/^TEST(ReluKernel, relu) {$/;"	f	namespace:oneflow	signature:(ReluKernel, relu)
oneflow::TEST	kernel/rmsprop_model_update_kernel_test.cpp	/^TEST(RMSPropMdUpdateKernel, model_update) {$/;"	f	namespace:oneflow	signature:(RMSPropMdUpdateKernel, model_update)
oneflow::TEST	kernel/softmax_kernel_test.cpp	/^TEST(SoftmaxKernel, softmax) {$/;"	f	namespace:oneflow	signature:(SoftmaxKernel, softmax)
oneflow::TEST	kernel/softmax_loss_kernel_test.cpp	/^TEST(SoftmaxLossKernel, softmax_loss_kernel_fw_and_bp) {$/;"	f	namespace:oneflow	signature:(SoftmaxLossKernel, softmax_loss_kernel_fw_and_bp)
oneflow::TEST	operator/boxing_op_test.cpp	/^TEST(BoxingOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(BoxingOp, infer_blob_desc)
oneflow::TEST	operator/clone_op_test.cpp	/^TEST(CloneOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(CloneOp, infer_blob_desc)
oneflow::TEST	operator/concat_op_test.cpp	/^TEST(ConcatOp, concat_two_3x3) {$/;"	f	namespace:oneflow	signature:(ConcatOp, concat_two_3x3)
oneflow::TEST	operator/convolution_op_test.cpp	/^TEST(ConvolutionOp, dataparallel_convolution) {$/;"	f	namespace:oneflow	signature:(ConvolutionOp, dataparallel_convolution)
oneflow::TEST	operator/convolution_op_test.cpp	/^TEST(ConvolutionOp, modelparallel_convolution) {$/;"	f	namespace:oneflow	signature:(ConvolutionOp, modelparallel_convolution)
oneflow::TEST	operator/innerproduct_op_test.cpp	/^TEST(InnerProductOp, innerproduct) {$/;"	f	namespace:oneflow	signature:(InnerProductOp, innerproduct)
oneflow::TEST	operator/multinomial_logistic_loss_op_test.cpp	/^TEST(MultinomialLogisticLossOp, test_loss_op) {$/;"	f	namespace:oneflow	signature:(MultinomialLogisticLossOp, test_loss_op)
oneflow::TEST	operator/pooling_op_test.cpp	/^TEST(PoolingOp, pooling) {$/;"	f	namespace:oneflow	signature:(PoolingOp, pooling)
oneflow::TEST	operator/relu_op_test.cpp	/^TEST(ReluOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(ReluOp, infer_blob_desc)
oneflow::TEST	operator/softmax_loss_op_test.cpp	/^TEST(SoftmaxLossOp, softmax_loss_3x5) {$/;"	f	namespace:oneflow	signature:(SoftmaxLossOp, softmax_loss_3x5)
oneflow::TEST	operator/softmax_op_test.cpp	/^TEST(SoftmaxOp, infer_blob_desc) {$/;"	f	namespace:oneflow	signature:(SoftmaxOp, infer_blob_desc)
oneflow::TEST	persistence/file_system_test.cpp	/^TEST(file_system, write_and_read) {$/;"	f	namespace:oneflow	signature:(file_system, write_and_read)
oneflow::TEST	persistence/snapshot_test.cpp	/^TEST(Snapshot, write_and_read) {$/;"	f	namespace:oneflow	signature:(Snapshot, write_and_read)
oneflow::TaskEdge	graph/task_node.h	/^class TaskEdge;$/;"	x
oneflow::TaskEdge::AddRegst	graph/task_node.cpp	/^void TaskEdge::AddRegst(const std::string& name_in_producer,$/;"	f	class:oneflow::TaskEdge	signature:(const std::string& name_in_producer, std::shared_ptr<RegstDesc> regst)
oneflow::TaskEdge::GetRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskEdge::GetRegst($/;"	f	class:oneflow::TaskEdge	signature:( const std::string& name_in_producer) const
oneflow::TaskEdge::GetSoleRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskEdge::GetSoleRegst() const {$/;"	f	class:oneflow::TaskEdge	signature:() const
oneflow::TaskGraph	graph/chain_node.h	/^class TaskGraph;$/;"	x
oneflow::TaskGraph::AddCopyCommNetTask	graph/task_graph.cpp	/^void TaskGraph::AddCopyCommNetTask(TaskNode* src, TaskNode* dst) {$/;"	f	class:oneflow::TaskGraph	signature:(TaskNode* src, TaskNode* dst)
oneflow::TaskGraph::AddCopyD2HTaskIfNotCpu	graph/task_graph.cpp	/^TaskNode* TaskGraph::AddCopyD2HTaskIfNotCpu(CompTaskNode* comp_task) {$/;"	f	class:oneflow::TaskGraph	signature:(CompTaskNode* comp_task)
oneflow::TaskGraph::AddCopyH2DTaskIfNotCpu	graph/task_graph.cpp	/^TaskNode* TaskGraph::AddCopyH2DTaskIfNotCpu(CompTaskNode* comp_task) {$/;"	f	class:oneflow::TaskGraph	signature:(CompTaskNode* comp_task)
oneflow::TaskGraph::BldSubTskGphByBoxing	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphByBoxing($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::TaskGraph::BldSubTskGphByOneToOne	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphByOneToOne($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>*, HashMap<const ChainNode*, std::vector<TaskNode*>>*)
oneflow::TaskGraph::BldSubTskGphBySelectOneSourceToSoleSink	graph/task_graph.cpp	/^void TaskGraph::BldSubTskGphBySelectOneSourceToSoleSink($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>*, HashMap<const ChainNode*, std::vector<TaskNode*>>*)
oneflow::TaskGraph::BuildInBoxingIfNeed	graph/task_graph.cpp	/^void TaskGraph::BuildInBoxingIfNeed($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* chain, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box)
oneflow::TaskGraph::BuildOutBoxingIfNeed	graph/task_graph.cpp	/^void TaskGraph::BuildOutBoxingIfNeed($/;"	f	class:oneflow::TaskGraph	signature:( const ChainNode* chain, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::TaskGraph::TaskGraph	graph/task_graph.cpp	/^TaskGraph::TaskGraph(std::unique_ptr<const ChainGraph>&& chain_gph) {$/;"	f	class:oneflow::TaskGraph	signature:(std::unique_ptr<const ChainGraph>&& chain_gph)
oneflow::TaskNode	graph/task_node.h	/^class TaskNode : public Node<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Node
oneflow::TaskNode	register/register_desc.h	/^class TaskNode;$/;"	x
oneflow::TaskNode::Build	graph/task_node.cpp	/^void TaskNode::Build() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::Build	graph/task_node.h	/^  void Build();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::BuildExecGphAndRegst	graph/task_node.h	/^  virtual void BuildExecGphAndRegst() = 0;$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
oneflow::TaskNode::ConsumeAllRegsts	graph/task_node.h	/^  virtual void ConsumeAllRegsts() = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::ConsumeRegst	graph/task_node.cpp	/^void TaskNode::ConsumeRegst(const std::string& name,$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name, std::shared_ptr<RegstDesc> regst)
oneflow::TaskNode::ConsumeRegst	graph/task_node.h	/^  void ConsumeRegst(const std::string& name, std::shared_ptr<RegstDesc>);$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name, std::shared_ptr<RegstDesc>)
oneflow::TaskNode::EraseEmptyProducedRegst	graph/task_node.cpp	/^void TaskNode::EraseEmptyProducedRegst() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::EraseEmptyProducedRegst	graph/task_node.h	/^  void EraseEmptyProducedRegst();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::GetConsumedRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::GetConsumedRegst(const std::string& name) {$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name)
oneflow::TaskNode::GetConsumedRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetConsumedRegst(const std::string& name);$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name)
oneflow::TaskNode::GetProducedRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::GetProducedRegst(const std::string& name) {$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name)
oneflow::TaskNode::GetProducedRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetProducedRegst(const std::string& name);$/;"	p	class:oneflow::TaskNode	access:public	signature:(const std::string& name)
oneflow::TaskNode::GetTaskType	graph/task_node.h	/^  virtual TaskType GetTaskType() const = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::InferMemCaseOfProducedRegst	graph/task_node.cpp	/^void TaskNode::InferMemCaseOfProducedRegst() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::InferMemCaseOfProducedRegst	graph/task_node.h	/^  void InferMemCaseOfProducedRegst();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::IsAllConsumedRegstLocked	graph/task_node.cpp	/^bool TaskNode::IsAllConsumedRegstLocked() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::IsAllConsumedRegstLocked	graph/task_node.h	/^  bool IsAllConsumedRegstLocked();$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
oneflow::TaskNode::IsMeaningLess	graph/task_node.cpp	/^bool TaskNode::IsMeaningLess() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::IsMeaningLess	graph/task_node.h	/^  virtual bool IsMeaningLess();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::IsReadyForBuild	graph/task_node.h	/^  virtual bool IsReadyForBuild() { return IsAllConsumedRegstLocked(); }$/;"	f	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::LockRegsts	graph/task_node.cpp	/^void TaskNode::LockRegsts() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::LockRegsts	graph/task_node.h	/^  virtual void LockRegsts();$/;"	p	class:oneflow::TaskNode	access:protected	signature:()
oneflow::TaskNode::OF_DISALLOW_COPY_AND_MOVE	graph/task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskNode);$/;"	p	class:oneflow::TaskNode	access:public	signature:(TaskNode)
oneflow::TaskNode::ProduceAllRegstsAndBindEdges	graph/task_node.h	/^  virtual void ProduceAllRegstsAndBindEdges() = 0;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::ProduceRegst	graph/task_node.cpp	/^std::shared_ptr<RegstDesc> TaskNode::ProduceRegst(const std::string& name,$/;"	f	class:oneflow::TaskNode	signature:(const std::string& name, int32_t min_register_num, int32_t max_register_num)
oneflow::TaskNode::ProduceRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> ProduceRegst(const std::string& name,$/;"	p	class:oneflow::TaskNode	access:protected	signature:(const std::string& name, int32_t min_register_num, int32_t max_register_num)
oneflow::TaskNode::TaskNode	graph/task_node.cpp	/^TaskNode::TaskNode() : machine_id_(-1), thrd_id_(-1), task_id_(-1) {}$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::TaskNode	graph/task_node.h	/^  TaskNode();$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TaskNode::ToProto	graph/task_node.cpp	/^void TaskNode::ToProto(TaskProto* task_proto) {$/;"	f	class:oneflow::TaskNode	signature:(TaskProto* task_proto)
oneflow::TaskNode::ToProto	graph/task_node.h	/^  virtual void ToProto(TaskProto*);$/;"	p	class:oneflow::TaskNode	access:public	signature:(TaskProto*)
oneflow::TaskNode::UpdateTaskId	graph/task_node.cpp	/^void TaskNode::UpdateTaskId() {$/;"	f	class:oneflow::TaskNode	signature:()
oneflow::TaskNode::UpdateTaskId	graph/task_node.h	/^  void UpdateTaskId();$/;"	p	class:oneflow::TaskNode	access:private	signature:()
oneflow::TaskNode::VisualStr	graph/task_node.cpp	/^std::string TaskNode::VisualStr() const {$/;"	f	class:oneflow::TaskNode	signature:() const
oneflow::TaskNode::consumed_regsts_	graph/task_node.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> consumed_regsts_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::device_type	graph/task_node.cpp	/^DeviceType TaskNode::device_type() const {$/;"	f	class:oneflow::TaskNode	signature:() const
oneflow::TaskNode::device_type	graph/task_node.h	/^  DeviceType device_type() const;$/;"	p	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::exec_gph_	graph/task_node.h	/^  ExecGraph exec_gph_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::machine_id	graph/task_node.h	/^  int64_t machine_id() const { return machine_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::machine_id_	graph/task_node.h	/^  int64_t machine_id_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::mut_exec_gph	graph/task_node.h	/^  ExecGraph& mut_exec_gph() { return exec_gph_; }$/;"	f	class:oneflow::TaskNode	access:protected	signature:()
oneflow::TaskNode::override	graph/task_node.h	/^  std::string VisualStr() const override;$/;"	m	class:oneflow::TaskNode	access:public
oneflow::TaskNode::parallel_ctx	graph/task_node.h	/^  virtual const ParallelContext* parallel_ctx() const { return nullptr; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::produced_regsts_	graph/task_node.h	/^  HashMap<std::string, std::shared_ptr<RegstDesc>> produced_regsts_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::set_machine_id	graph/task_node.cpp	/^void TaskNode::set_machine_id(int64_t val) {$/;"	f	class:oneflow::TaskNode	signature:(int64_t val)
oneflow::TaskNode::set_machine_id	graph/task_node.h	/^  void set_machine_id(int64_t val);$/;"	p	class:oneflow::TaskNode	access:public	signature:(int64_t val)
oneflow::TaskNode::set_thrd_id	graph/task_node.cpp	/^void TaskNode::set_thrd_id(int64_t val) {$/;"	f	class:oneflow::TaskNode	signature:(int64_t val)
oneflow::TaskNode::set_thrd_id	graph/task_node.h	/^  void set_thrd_id(int64_t val);$/;"	p	class:oneflow::TaskNode	access:public	signature:(int64_t val)
oneflow::TaskNode::task_id	graph/task_node.h	/^  int64_t task_id() const { return task_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::task_id_	graph/task_node.h	/^  int64_t task_id_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::thrd_id	graph/task_node.h	/^  int64_t thrd_id() const { return thrd_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
oneflow::TaskNode::thrd_id_	graph/task_node.h	/^  int64_t thrd_id_;$/;"	m	class:oneflow::TaskNode	access:private
oneflow::TaskNode::~TaskNode	graph/task_node.h	/^  virtual ~TaskNode() = default;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
oneflow::TestBoxingOp	operator/boxing_op_test.cpp	/^void TestBoxingOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::TestCloneOp	operator/clone_op_test.cpp	/^void TestCloneOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::TestPoolingOp	operator/pooling_op_test.cpp	/^void TestPoolingOp(ParallelPolicy policy, bool has_data_id) {$/;"	f	namespace:oneflow	signature:(ParallelPolicy policy, bool has_data_id)
oneflow::TestReluOp	operator/relu_op_test.cpp	/^void TestReluOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::TestSoftmaxOp	operator/softmax_op_test.cpp	/^void TestSoftmaxOp() {$/;"	f	namespace:oneflow	signature:()
oneflow::Thread	thread/thread.h	/^class Thread {$/;"	c	namespace:oneflow
oneflow::Thread::AddTask	thread/thread.cpp	/^void Thread::AddTask(const TaskProto& task) {$/;"	f	class:oneflow::Thread	signature:(const TaskProto& task)
oneflow::Thread::AddTask	thread/thread.h	/^  void AddTask(const TaskProto&);$/;"	p	class:oneflow::Thread	access:public	signature:(const TaskProto&)
oneflow::Thread::ConstructActor	thread/thread.cpp	/^void Thread::ConstructActor(int64_t actor_id, const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Thread	signature:(int64_t actor_id, const ThreadCtx& thread_ctx)
oneflow::Thread::ConstructActor	thread/thread.h	/^  void ConstructActor(int64_t actor_id, const ThreadCtx& thread_ctx);$/;"	p	class:oneflow::Thread	access:private	signature:(int64_t actor_id, const ThreadCtx& thread_ctx)
oneflow::Thread::GetMsgChannelPtr	thread/thread.h	/^  Channel<ActorMsg>* GetMsgChannelPtr() { return &msg_channel_; }$/;"	f	class:oneflow::Thread	access:public	signature:()
oneflow::Thread::JoinAllActor	thread/thread.h	/^  void JoinAllActor() { actor_thread_.join(); }$/;"	f	class:oneflow::Thread	access:public	signature:()
oneflow::Thread::OF_DISALLOW_COPY_AND_MOVE	thread/thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(Thread);$/;"	p	class:oneflow::Thread	access:public	signature:(Thread)
oneflow::Thread::PollMsgChannel	thread/thread.cpp	/^void Thread::PollMsgChannel(const ThreadCtx& thread_ctx) {$/;"	f	class:oneflow::Thread	signature:(const ThreadCtx& thread_ctx)
oneflow::Thread::PollMsgChannel	thread/thread.h	/^  void PollMsgChannel(const ThreadCtx& thread_ctx);$/;"	p	class:oneflow::Thread	access:protected	signature:(const ThreadCtx& thread_ctx)
oneflow::Thread::Thread	thread/thread.h	/^  Thread() = default;$/;"	p	class:oneflow::Thread	access:protected	signature:()
oneflow::Thread::actor_thread_	thread/thread.h	/^  std::thread actor_thread_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::id2actor_ptr_	thread/thread.h	/^  HashMap<int64_t, std::unique_ptr<Actor>> id2actor_ptr_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::id2task_	thread/thread.h	/^  HashMap<int64_t, TaskProto> id2task_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::id2task_mtx_	thread/thread.h	/^  std::mutex id2task_mtx_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::msg_channel_	thread/thread.h	/^  Channel<ActorMsg> msg_channel_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::mut_actor_thread	thread/thread.h	/^  std::thread& mut_actor_thread() { return actor_thread_; }$/;"	f	class:oneflow::Thread	access:protected	signature:()
oneflow::Thread::set_thrd_id	thread/thread.h	/^  void set_thrd_id(int64_t val) { thrd_id_ = val; }$/;"	f	class:oneflow::Thread	access:protected	signature:(int64_t val)
oneflow::Thread::thrd_id_	thread/thread.h	/^  int64_t thrd_id_;$/;"	m	class:oneflow::Thread	access:private
oneflow::Thread::~Thread	thread/thread.cpp	/^Thread::~Thread() {$/;"	f	class:oneflow::Thread	signature:()
oneflow::Thread::~Thread	thread/thread.h	/^  virtual ~Thread();$/;"	p	class:oneflow::Thread	access:public	signature:()
oneflow::ThreadCtx	thread/thread_context.h	/^struct ThreadCtx {$/;"	s	namespace:oneflow
oneflow::ThreadCtx::ThreadCtx	thread/thread_context.h	/^  ThreadCtx() : copy_hd_cuda_stream(nullptr) {}$/;"	f	struct:oneflow::ThreadCtx	access:public	signature:()
oneflow::ThreadCtx::copy_hd_cuda_stream	thread/thread_context.h	/^  const cudaStream_t* copy_hd_cuda_stream;$/;"	m	struct:oneflow::ThreadCtx	access:public
oneflow::ThreadMgr::GetThrd	thread/thread_manager.cpp	/^Thread* ThreadMgr::GetThrd(int64_t thrd_id) { return threads_.at(thrd_id); }$/;"	f	class:oneflow::ThreadMgr	signature:(int64_t thrd_id)
oneflow::ThreadMgr::ThreadMgr	thread/thread_manager.cpp	/^ThreadMgr::ThreadMgr() {$/;"	f	class:oneflow::ThreadMgr	signature:()
oneflow::ThreadMgr::~ThreadMgr	thread/thread_manager.cpp	/^ThreadMgr::~ThreadMgr() {$/;"	f	class:oneflow::ThreadMgr	signature:()
oneflow::__anon14::CreateSoftmaxLossKernel	kernel/softmax_loss_kernel.cpp	/^Kernel* CreateSoftmaxLossKernel(DeviceType dev_type,$/;"	f	namespace:oneflow::__anon14	signature:(DeviceType dev_type, const KernelConf& kernel_conf)
oneflow::__anon16::GetCreatorsMap	kernel/kernel.cpp	/^HashMap<int, KernelCreator1>& GetCreatorsMap() {$/;"	f	namespace:oneflow::__anon16	signature:()
oneflow::__anon19::CreateMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.cpp	/^Kernel* CreateMultinomialLogisticLossKernel(DeviceType dev_type,$/;"	f	namespace:oneflow::__anon19	signature:(DeviceType dev_type, const KernelConf& kernel_conf)
oneflow::__anon21::BlasMatrixMatrix	kernel/innerproduct_kernel.cpp	/^void BlasMatrixMatrix(const KernelCtx& ctx, const enum CBLAS_TRANSPOSE trans_a,$/;"	f	namespace:oneflow::__anon21	signature:(const KernelCtx& ctx, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const T alpha, const T beta, const Blob* a, const Blob* b, Blob* c)
oneflow::__anon25::IsAGreaterThanZeroAndLessThanB	kernel/convolution_kernel.cpp	/^inline bool IsAGreaterThanZeroAndLessThanB(int a, int b) {$/;"	f	namespace:oneflow::__anon25	signature:(int a, int b)
oneflow::__anon27::CalcSumOfBlobs	kernel/boxing_kernel.cpp	/^void CalcSumOfBlobs(DeviceCtx* ctx,$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& src_bns, const std::string& dst_bn)
oneflow::__anon27::ConcatSplitDataContent	kernel/boxing_kernel.cpp	/^void ConcatSplitDataContent($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& concat_bns, int32_t concat_axis, const PbRpf<std::string>& split_bns, int32_t split_axis)
oneflow::__anon27::ConcatSplitDataId	kernel/boxing_kernel.cpp	/^void ConcatSplitDataId(DeviceCtx* ctx,$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& concat_bns, int32_t concat_axis, const PbRpf<std::string>& split_bns, int32_t split_axis)
oneflow::__anon27::ConstructPbRpf	kernel/boxing_kernel.cpp	/^PbRpf<std::string> ConstructPbRpf(const std::string& s) {$/;"	f	namespace:oneflow::__anon27	signature:(const std::string& s)
oneflow::__anon27::CopyDataContentFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyDataContentFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns)
oneflow::__anon27::CopyDataIdFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyDataIdFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns)
oneflow::__anon27::CopyFromFirstToOtherBlobs	kernel/boxing_kernel.cpp	/^void CopyFromFirstToOtherBlobs($/;"	f	namespace:oneflow::__anon27	signature:( DeviceCtx* ctx, std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>& bns, void (Blob::*Copy)(DeviceCtx*, const Blob*))
oneflow::__anon27::CopyFromIterToIter	kernel/boxing_kernel.cpp	/^void CopyFromIterToIter(DeviceCtx* ctx, Iter& src_it, Iter& dst_it) {$/;"	f	namespace:oneflow::__anon27	signature:(DeviceCtx* ctx, Iter& src_it, Iter& dst_it)
oneflow::__anon27::final	kernel/boxing_kernel.cpp	/^class DataContentIterator final {$/;"	c	namespace:oneflow::__anon27	file:
oneflow::__anon27::final	kernel/boxing_kernel.cpp	/^class DataIdIterator final {$/;"	c	namespace:oneflow::__anon27	file:
oneflow::__anon27::final::BnInOp2Blob_	kernel/boxing_kernel.cpp	/^  std::function<Blob*(const std::string&)> BnInOp2Blob_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::DataContentIterator	kernel/boxing_kernel.cpp	/^  DataContentIterator() = delete;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
oneflow::__anon27::final::DataContentIterator	kernel/boxing_kernel.cpp	/^  DataContentIterator(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::__anon27::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>* bns, int32_t axis)
oneflow::__anon27::final::DataIdIterator	kernel/boxing_kernel.cpp	/^  DataIdIterator() = delete;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
oneflow::__anon27::final::DataIdIterator	kernel/boxing_kernel.cpp	/^  DataIdIterator(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::__anon27::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const PbRpf<std::string>* bns, int32_t axis)
oneflow::__anon27::final::GetNext	kernel/boxing_kernel.cpp	/^  std::tuple<char*, size_t> GetNext() {$/;"	f	class:oneflow::__anon27::final	access:public	signature:()
oneflow::__anon27::final::OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(DataContentIterator);$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:(DataContentIterator)
oneflow::__anon27::final::OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(DataIdIterator);$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:(DataIdIterator)
oneflow::__anon27::final::axis_	kernel/boxing_kernel.cpp	/^  int32_t axis_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::bn_idx_	kernel/boxing_kernel.cpp	/^  int32_t bn_idx_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::bn_num_	kernel/boxing_kernel.cpp	/^  int32_t bn_num_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::bns_	kernel/boxing_kernel.cpp	/^  const PbRpf<std::string>* bns_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::seg_idx_	kernel/boxing_kernel.cpp	/^  int64_t seg_idx_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::seg_num_	kernel/boxing_kernel.cpp	/^  int64_t seg_num_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
oneflow::__anon27::final::~DataContentIterator	kernel/boxing_kernel.cpp	/^  ~DataContentIterator() = default;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
oneflow::__anon27::final::~DataIdIterator	kernel/boxing_kernel.cpp	/^  ~DataIdIterator() = default;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
oneflow::__anon28::ConstantFill	kernel/kernel_util.cpp	/^void ConstantFill(const ConstantFillConf& fill_conf, Blob* blob) {$/;"	f	namespace:oneflow::__anon28	signature:(const ConstantFillConf& fill_conf, Blob* blob)
oneflow::__anon28::GaussianFill	kernel/kernel_util.cpp	/^void GaussianFill(const GaussianFillConf& fill_conf, uint32_t random_seed,$/;"	f	namespace:oneflow::__anon28	signature:(const GaussianFillConf& fill_conf, uint32_t random_seed, Blob* blob)
oneflow::__anon28::RngGaussian	kernel/kernel_util.cpp	/^void RngGaussian(const int64_t elem_cnt, const T mean, const T std,$/;"	f	namespace:oneflow::__anon28	signature:(const int64_t elem_cnt, const T mean, const T std, uint32_t random_seed, T* dptr)
oneflow::__anon28::RngUniform	kernel/kernel_util.cpp	/^void RngUniform(const int64_t elem_cnt, const T min, const T max,$/;"	f	namespace:oneflow::__anon28	signature:(const int64_t elem_cnt, const T min, const T max, uint32_t random_seed, T* dptr)
oneflow::__anon28::UniformFill	kernel/kernel_util.cpp	/^void UniformFill(const UniformFillConf& fill_conf, uint32_t random_seed,$/;"	f	namespace:oneflow::__anon28	signature:(const UniformFillConf& fill_conf, uint32_t random_seed, Blob* blob)
oneflow::__anon2::ClearPort	comm_network/epoll/epoll_comm_network.cpp	/^void ClearPort(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
oneflow::__anon2::GenPortKey	comm_network/epoll/epoll_comm_network.cpp	/^std::string GenPortKey(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
oneflow::__anon2::GetMachineId	comm_network/epoll/epoll_comm_network.cpp	/^int64_t GetMachineId(const sockaddr_in& sa) {$/;"	f	namespace:oneflow::__anon2	signature:(const sockaddr_in& sa)
oneflow::__anon2::GetSockAddr	comm_network/epoll/epoll_comm_network.cpp	/^sockaddr_in GetSockAddr(int64_t machine_id, uint16_t port) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id, uint16_t port)
oneflow::__anon2::PullPort	comm_network/epoll/epoll_comm_network.cpp	/^uint16_t PullPort(int64_t machine_id) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id)
oneflow::__anon2::PushPort	comm_network/epoll/epoll_comm_network.cpp	/^void PushPort(int64_t machine_id, uint16_t port) {$/;"	f	namespace:oneflow::__anon2	signature:(int64_t machine_id, uint16_t port)
oneflow::__anon30::PrintBlob	kernel/print_kernel.cpp	/^void PrintBlob(PersistentOutStream& out_stream, const Blob* blob) {$/;"	f	namespace:oneflow::__anon30	signature:(PersistentOutStream& out_stream, const Blob* blob)
oneflow::__anon30::PrintBlobImpl	kernel/print_kernel.cpp	/^void PrintBlobImpl(PersistentOutStream& out_stream, const Blob* blob) {$/;"	f	namespace:oneflow::__anon30	signature:(PersistentOutStream& out_stream, const Blob* blob)
oneflow::__anon31::CudaCallBackHandle	device/cuda_device_context.cpp	/^void CUDART_CB CudaCallBackHandle(cudaStream_t, cudaError_t status,$/;"	f	namespace:oneflow::__anon31	signature:(cudaStream_t, cudaError_t status, void* void_ptr)
oneflow::__anon32::CublasGetErrorString	device/cuda_util.cpp	/^const char* CublasGetErrorString(cublasStatus_t error) {$/;"	f	namespace:oneflow::__anon32	signature:(cublasStatus_t error)
oneflow::__anon32::CurandGetErrorString	device/cuda_util.cpp	/^const char* CurandGetErrorString(curandStatus_t error) {$/;"	f	namespace:oneflow::__anon32	signature:(curandStatus_t error)
oneflow::__anon33::HandoutTasks	job/runtime.cpp	/^void HandoutTasks(const std::vector<const TaskProto*>& tasks) {$/;"	f	namespace:oneflow::__anon33	signature:(const std::vector<const TaskProto*>& tasks)
oneflow::__anon33::SendCmdMsg	job/runtime.cpp	/^void SendCmdMsg(const std::vector<const TaskProto*>& tasks, ActorCmd cmd) {$/;"	f	namespace:oneflow::__anon33	signature:(const std::vector<const TaskProto*>& tasks, ActorCmd cmd)
oneflow::__anon34::ToDotFile	job/compiler.cpp	/^void ToDotFile(const Plan& plan, const std::string& filepath) {$/;"	f	namespace:oneflow::__anon34	signature:(const Plan& plan, const std::string& filepath)
oneflow::__anon34::task_type2color	job/compiler.cpp	/^std::map<TaskType, std::string> task_type2color = {$/;"	m	namespace:oneflow::__anon34	file:
oneflow::__anon35::ParseDeviceNameConf	job/parallel_desc.cpp	/^void ParseDeviceNameConf(const std::string& device_name, std::string* mchn_name,$/;"	f	namespace:oneflow::__anon35	signature:(const std::string& device_name, std::string* mchn_name, std::string* device_id_str)
oneflow::__anon36::GetResource	job/id_manager_test.cpp	/^Resource GetResource() {$/;"	f	namespace:oneflow::__anon36	signature:()
oneflow::__anon36::Init	job/id_manager_test.cpp	/^void Init() {$/;"	f	namespace:oneflow::__anon36	signature:()
oneflow::__anon37::GetMethodName	control/ctrl_service.cpp	/^const char* GetMethodName(CtrlMethod method) {$/;"	f	namespace:oneflow::__anon37	signature:(CtrlMethod method)
oneflow::__anon37::g_method_name	control/ctrl_service.cpp	/^const char* g_method_name[] = {$/;"	m	namespace:oneflow::__anon37	file:
oneflow::__anon38::max_retry_num	control/ctrl_client.cpp	/^const int32_t max_retry_num = 60;$/;"	m	namespace:oneflow::__anon38	file:
oneflow::__anon38::sleep_seconds	control/ctrl_client.cpp	/^const int64_t sleep_seconds = 10;$/;"	m	namespace:oneflow::__anon38	file:
oneflow::__anon39::ExtractPortFromAddr	control/ctrl_server.cpp	/^int ExtractPortFromAddr(const std::string& addr) {$/;"	f	namespace:oneflow::__anon39	signature:(const std::string& addr)
oneflow::__anon3::EraseEmptyBnInVec	operator/boxing_op.cpp	/^void EraseEmptyBnInVec($/;"	f	namespace:oneflow::__anon3	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, PbRpf<std::string>* bns)
oneflow::__anon43::Chain	graph/chain_graph.cpp	/^struct Chain {$/;"	s	namespace:oneflow::__anon43	file:
oneflow::__anon43::Chain::ancestors	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> ancestors;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
oneflow::__anon43::Chain::ancestors_and_this	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> ancestors_and_this;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
oneflow::__anon43::Chain::descendants	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> descendants;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
oneflow::__anon43::Chain::descendants_and_this	graph/chain_graph.cpp	/^  HashSet<const LogicalNode*> descendants_and_this;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
oneflow::__anon43::Chain::nodes	graph/chain_graph.cpp	/^  std::vector<const LogicalNode*> nodes;$/;"	m	struct:oneflow::__anon43::Chain	file:	access:public
oneflow::__anon43::DataMergeChains	graph/chain_graph.cpp	/^void DataMergeChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::DoOneDataMerge	graph/chain_graph.cpp	/^bool DoOneDataMerge(const std::vector<const LogicalNode*>& data_parallel_node,$/;"	f	namespace:oneflow::__anon43	signature:(const std::vector<const LogicalNode*>& data_parallel_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::InitChains	graph/chain_graph.cpp	/^void InitChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::ModelMergeChains	graph/chain_graph.cpp	/^void ModelMergeChains(std::list<Chain>* chain_list,$/;"	f	namespace:oneflow::__anon43	signature:(std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::SetChainNodeWithChainIt	graph/chain_graph.cpp	/^void SetChainNodeWithChainIt(ChainNode* chain_node, ChainIt chain_it) {}$/;"	f	namespace:oneflow::__anon43	signature:(ChainNode* chain_node, ChainIt chain_it)
oneflow::__anon43::TryDataMerge	graph/chain_graph.cpp	/^bool TryDataMerge(const LogicalNode* first, const LogicalNode* second,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* first, const LogicalNode* second, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::TryMergeWithConnect	graph/chain_graph.cpp	/^bool TryMergeWithConnect(const LogicalNode* up_node,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* up_node, const LogicalNode* bottom_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon43::TryMergeWithoutConnect	graph/chain_graph.cpp	/^bool TryMergeWithoutConnect(const LogicalNode* lhs_node,$/;"	f	namespace:oneflow::__anon43	signature:(const LogicalNode* lhs_node, const LogicalNode* rhs_node, std::list<Chain>* chain_list, Logical2ChainItMap* logical2chain_it)
oneflow::__anon44::FindLbnsBetweenBw	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenBw(const ChainNode* in_chain,$/;"	f	namespace:oneflow::__anon44	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::__anon44::FindLbnsBetweenChainPair	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenChainPair($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const std::vector<std::string>& (Operator::*GetOutLbns)() const, const ChainNode* out_chain, const std::vector<std::string>& (Operator::*GetInLbns)() const)
oneflow::__anon44::FindLbnsBetweenFw	graph/chain_node.cpp	/^std::vector<std::string> FindLbnsBetweenFw(const ChainNode* in_chain,$/;"	f	namespace:oneflow::__anon44	signature:(const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::__anon44::GetBldBoxingOpConfMethodByBwParallelPolicy	graph/chain_node.cpp	/^BldBoxingOpConfMthd GetBldBoxingOpConfMethodByBwParallelPolicy($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::__anon44::GetBldBoxingOpConfMethodByFwParallelPolicy	graph/chain_node.cpp	/^BldBoxingOpConfMthd GetBldBoxingOpConfMethodByFwParallelPolicy($/;"	f	namespace:oneflow::__anon44	signature:( const ChainNode* in_chain, const ChainNode* out_chain)
oneflow::__anon4::TestInnerProductOp	operator/innerproduct_op_test.cpp	/^void TestInnerProductOp(ParallelPolicy policy, bool has_bias_term,$/;"	f	namespace:oneflow::__anon4	signature:(ParallelPolicy policy, bool has_bias_term, bool has_data_id)
oneflow::__anon5::GetTestConvolutionOp	operator/convolution_op_test.cpp	/^std::shared_ptr<Operator> GetTestConvolutionOp() {$/;"	f	namespace:oneflow::__anon5	signature:()
oneflow::__anon6::GetDataTypeFromBnInOpVec	operator/operator.cpp	/^DataType GetDataTypeFromBnInOpVec($/;"	f	namespace:oneflow::__anon6	signature:( std::function<const BlobDesc*(const std::string&)> GetBlobDesc4BnInOp, const std::vector<std::string>& bn_in_ops)
oneflow::__anon7::NextConcatAddr	kernel/concat_kernel.cpp	/^char* NextConcatAddr(char* start_addr, int64_t concat_idx,$/;"	f	namespace:oneflow::__anon7	signature:(char* start_addr, int64_t concat_idx, int64_t concat_axis_dim, int64_t concat_axis_offset, int64_t concat_elem_bytesize)
oneflow::__anon8::CreateConcatKernel	kernel/concat_kernel.cpp	/^Kernel* CreateConcatKernel(DeviceType dev_type) {$/;"	f	namespace:oneflow::__anon8	signature:(DeviceType dev_type)
oneflow::cblas_axpy	blas/cblas_template.cpp	/^void cblas_axpy<double>(const int n, const double alpha, const double* x,$/;"	f	namespace:oneflow	signature:(const int n, const double alpha, const double* x, const int incx, double* y, const int incy)
oneflow::cblas_axpy	blas/cblas_template.cpp	/^void cblas_axpy<float>(const int n, const float alpha, const float* x,$/;"	f	namespace:oneflow	signature:(const int n, const float alpha, const float* x, const int incx, float* y, const int incy)
oneflow::cblas_axpy	blas/cblas_template.h	/^void cblas_axpy(const int n, const FloatingPointType alpha,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType alpha, const FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
oneflow::cblas_copy	blas/cblas_template.cpp	/^void cblas_copy<double>(const int n, const double* x, const int incx, double* y,$/;"	f	namespace:oneflow	signature:(const int n, const double* x, const int incx, double* y, const int incy)
oneflow::cblas_copy	blas/cblas_template.cpp	/^void cblas_copy<float>(const int n, const float* x, const int incx, float* y,$/;"	f	namespace:oneflow	signature:(const int n, const float* x, const int incx, float* y, const int incy)
oneflow::cblas_copy	blas/cblas_template.h	/^void cblas_copy(const int n, const FloatingPointType* x, const int incx,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
oneflow::cblas_dot	blas/cblas_template.cpp	/^double cblas_dot<double>(const int n, const double* x, const int incx,$/;"	f	namespace:oneflow	signature:(const int n, const double* x, const int incx, const double* y, const int incy)
oneflow::cblas_dot	blas/cblas_template.cpp	/^float cblas_dot<float>(const int n, const float* x, const int incx,$/;"	f	namespace:oneflow	signature:(const int n, const float* x, const int incx, const float* y, const int incy)
oneflow::cblas_dot	blas/cblas_template.h	/^FloatingPointType cblas_dot(const int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType* x, const int incx, const FloatingPointType* y, const int incy)
oneflow::cblas_gemm	blas/cblas_template.cpp	/^void cblas_gemm<double>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const double alpha, const double* a, const int lda, const double* b, const int ldb, const double beta, double* c, const int ldc)
oneflow::cblas_gemm	blas/cblas_template.cpp	/^void cblas_gemm<float>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const float alpha, const float* a, const int lda, const float* b, const int ldb, const float beta, float* c, const int ldc)
oneflow::cblas_gemm	blas/cblas_template.h	/^void cblas_gemm(const enum CBLAS_ORDER order,$/;"	p	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const FloatingPointType alpha, const FloatingPointType* a, const int lda, const FloatingPointType* b, const int ldb, const FloatingPointType beta, FloatingPointType* c, const int ldc)
oneflow::cblas_gemv	blas/cblas_template.cpp	/^void cblas_gemv<double>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const double alpha, const double* a, const int lda, const double* x, const int incx, const double beta, double* y, const int incy)
oneflow::cblas_gemv	blas/cblas_template.cpp	/^void cblas_gemv<float>(const enum CBLAS_ORDER order,$/;"	f	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const float alpha, const float* a, const int lda, const float* x, const int incx, const float beta, float* y, const int incy)
oneflow::cblas_gemv	blas/cblas_template.h	/^void cblas_gemv(const enum CBLAS_ORDER order,$/;"	p	namespace:oneflow	signature:(const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const int m, const int n, const FloatingPointType alpha, const FloatingPointType* a, const int lda, const FloatingPointType* x, const int incx, const FloatingPointType beta, FloatingPointType* y, const int incy)
oneflow::cblas_scal	blas/cblas_template.cpp	/^void cblas_scal<double>(const int n, const double alpha, double* x,$/;"	f	namespace:oneflow	signature:(const int n, const double alpha, double* x, const int incx)
oneflow::cblas_scal	blas/cblas_template.cpp	/^void cblas_scal<float>(const int n, const float alpha, float* x,$/;"	f	namespace:oneflow	signature:(const int n, const float alpha, float* x, const int incx)
oneflow::cblas_scal	blas/cblas_template.h	/^void cblas_scal(const int n, const FloatingPointType alpha,$/;"	p	namespace:oneflow	signature:(const int n, const FloatingPointType alpha, FloatingPointType* x, const int incx)
oneflow::cblas_swap	blas/cblas_template.cpp	/^void cblas_swap<double>(const int n, double* x, const int incx, double* y,$/;"	f	namespace:oneflow	signature:(const int n, double* x, const int incx, double* y, const int incy)
oneflow::cblas_swap	blas/cblas_template.cpp	/^void cblas_swap<float>(const int n, float* x, const int incx, float* y,$/;"	f	namespace:oneflow	signature:(const int n, float* x, const int incx, float* y, const int incy)
oneflow::cblas_swap	blas/cblas_template.h	/^void cblas_swap(const int n, FloatingPointType* x, const int incx,$/;"	p	namespace:oneflow	signature:(const int n, FloatingPointType* x, const int incx, FloatingPointType* y, const int incy)
oneflow::channel_	control/ctrl_service.cpp	/^          channel_(channel) {$/;"	f	namespace:oneflow	signature:(channel)
oneflow::cublas_axpy	blas/cublas_template.h	/^void cublas_axpy(cublasHandle_t handle, int n, const FloatingPointType* alpha,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* alpha, const FloatingPointType* x, int incx, FloatingPointType* y, int incy)
oneflow::cublas_copy	blas/cublas_template.h	/^void cublas_copy(cublasHandle_t handle, int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* x, int incx, FloatingPointType* y, int incy)
oneflow::cublas_dot	blas/cublas_template.h	/^void cublas_dot(cublasHandle_t handle, int n, const FloatingPointType* x,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* x, int incx, const FloatingPointType* y, int incy, FloatingPointType* result)
oneflow::cublas_gemm	blas/cublas_template.h	/^void cublas_gemm(cublasHandle_t handle, cublasOperation_t cutrans_a,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, cublasOperation_t cutrans_a, cublasOperation_t cutrans_b, int m, int n, int k, const FloatingPointType* alpha, const FloatingPointType* a, int lda, const FloatingPointType* b, int ldb, const FloatingPointType* beta, FloatingPointType* c, int ldc)
oneflow::cublas_gemv	blas/cublas_template.h	/^void cublas_gemv(cublasHandle_t handle, cublasOperation_t trans, int m, int n,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, cublasOperation_t trans, int m, int n, const FloatingPointType* alpha, const FloatingPointType* a, int lda, const FloatingPointType* x, int incx, const FloatingPointType* beta, FloatingPointType* y, int incy)
oneflow::cublas_scal	blas/cublas_template.h	/^void cublas_scal(cublasHandle_t handle, int n, const FloatingPointType* alpha,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, const FloatingPointType* alpha, FloatingPointType* x, int incx)
oneflow::cublas_swap	blas/cublas_template.h	/^void cublas_swap(cublasHandle_t handle, int n, FloatingPointType* x, int incx,$/;"	p	namespace:oneflow	signature:(cublasHandle_t handle, int n, FloatingPointType* x, int incx, FloatingPointType* y, int incy)
oneflow::feenableexcept	common/util.cpp	/^COMMAND(feenableexcept(FE_ALL_EXCEPT & ~FE_INEXACT & ~FE_UNDERFLOW));$/;"	p	namespace:oneflow	file:	signature:(FE_ALL_EXCEPT & ~E_INEXACT & ~E_UNDERFLOW)
oneflow::final	actor/act_event_logger.h	/^class ActEventLogger final {$/;"	c	namespace:oneflow
oneflow::final	actor/actor_message.h	/^class ActorMsg final {$/;"	c	namespace:oneflow
oneflow::final	actor/actor_message_bus.h	/^class ActorMsgBus final {$/;"	c	namespace:oneflow
oneflow::final	actor/backward_compute_actor.h	/^class BackwardCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::final	actor/boxing_actor.h	/^class BoxingActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
oneflow::final	actor/copy_comm_net_actor.cpp	/^class CopyCommNetActor::CommNetDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	file:	inherits:DeviceCtx
oneflow::final	actor/copy_comm_net_actor.h	/^class CopyCommNetActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
oneflow::final	actor/copy_hd_actor.h	/^class CopyHdActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
oneflow::final	actor/forward_compute_actor.h	/^class ForwardCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::final	actor/loss_accumulate_compute_actor.h	/^class LossAccCompActor final : public AccumulateCompActor {$/;"	c	namespace:oneflow	inherits:AccumulateCompActor
oneflow::final	actor/loss_print_compute_actor.h	/^class LossPrintCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
oneflow::final	actor/model_diff_accumulate_compute_actor.h	/^class MdDiffAccCompActor final : public AccumulateCompActor {$/;"	c	namespace:oneflow	inherits:AccumulateCompActor
oneflow::final	actor/model_save_compute_actor.h	/^class MdSaveCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
oneflow::final	actor/model_update_compute_actor.h	/^class MdUpdtCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::final	actor/print_compute_actor.h	/^class PrintCompActor final : public SinkCompActor {$/;"	c	namespace:oneflow	inherits:SinkCompActor
oneflow::final	actor/rnn_boxing_actor.h	/^class BoxingActor final : public Actor {$/;"	c	namespace:oneflow	inherits:Actor
oneflow::final	actor/source_compute_actor.h	/^class SourceCompActor final : public CompActor {$/;"	c	namespace:oneflow	inherits:CompActor
oneflow::final	comm_network/epoll/epoll_comm_network.h	/^class EpollCommNet final : public CommNet {$/;"	c	namespace:oneflow	inherits:CommNet
oneflow::final	comm_network/epoll/io_event_poller.h	/^class IOEventPoller final {$/;"	c	namespace:oneflow
oneflow::final	comm_network/epoll/socket_helper.h	/^class SocketHelper final {$/;"	c	namespace:oneflow
oneflow::final	comm_network/epoll/socket_read_helper.h	/^class SocketReadHelper final {$/;"	c	namespace:oneflow
oneflow::final	comm_network/epoll/socket_write_helper.h	/^class SocketWriteHelper final {$/;"	c	namespace:oneflow
oneflow::final	common/balanced_splitter.h	/^class BalancedSplitter final {$/;"	c	namespace:oneflow
oneflow::final	common/blocking_counter.h	/^class BlockingCounter final {$/;"	c	namespace:oneflow
oneflow::final	common/channel.h	/^class Channel final {$/;"	c	namespace:oneflow
oneflow::final	common/range.h	/^class Range final {$/;"	c	namespace:oneflow
oneflow::final	common/shape.h	/^class Shape final {$/;"	c	namespace:oneflow
oneflow::final	control/ctrl_call.h	/^class CtrlCall final : public CtrlCallIf {$/;"	c	namespace:oneflow	inherits:CtrlCallIf
oneflow::final	control/ctrl_client.h	/^class CtrlClient final {$/;"	c	namespace:oneflow
oneflow::final	control/ctrl_server.h	/^class CtrlServer final {$/;"	c	namespace:oneflow
oneflow::final	control/ctrl_service.h	/^class CtrlService final {$/;"	c	namespace:oneflow
oneflow::final	device/cpu_device_context.h	/^class CpuDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	inherits:DeviceCtx
oneflow::final	device/cuda_device_context.h	/^class CudaDeviceCtx final : public DeviceCtx {$/;"	c	namespace:oneflow	inherits:DeviceCtx
oneflow::final	device/cuda_stream_handle.h	/^class CudaStreamHandle final {$/;"	c	namespace:oneflow
oneflow::final	graph/backward_compute_task_node.h	/^class BackwardCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::final	graph/boxing_task_node.h	/^class InBoxingTaskNode final : public BoxingTaskNode {$/;"	c	namespace:oneflow	inherits:BoxingTaskNode
oneflow::final	graph/boxing_task_node.h	/^class OutBoxingTaskNode final : public BoxingTaskNode {$/;"	c	namespace:oneflow	inherits:BoxingTaskNode
oneflow::final	graph/chain_graph.h	/^class ChainGraph final : public Graph<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Graph
oneflow::final	graph/chain_node.h	/^class BackwardChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class ChainEdge final : public Edge<ChainNode, ChainEdge> {$/;"	c	namespace:oneflow	inherits:Edge
oneflow::final	graph/chain_node.h	/^class ForwardChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class LossAccChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class LossChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class LossPrintChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class MdDiffAccChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class MdSaveChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class MdUpdtChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class PrintChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/chain_node.h	/^class SourceChainNode final : public ChainNode {$/;"	c	namespace:oneflow	inherits:ChainNode
oneflow::final	graph/copy_task_node.h	/^class CopyCommNetTaskNode final : public CopyTaskNode {$/;"	c	namespace:oneflow	inherits:CopyTaskNode
oneflow::final	graph/copy_task_node.h	/^class CopyHdTaskNode final : public CopyTaskNode {$/;"	c	namespace:oneflow	inherits:CopyTaskNode
oneflow::final	graph/exec_graph.h	/^class ExecEdge final : public Edge<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Edge
oneflow::final	graph/exec_graph.h	/^class ExecGraph final : public Graph<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Graph
oneflow::final	graph/exec_graph.h	/^class ExecNode final : public Node<ExecNode, ExecEdge> {$/;"	c	namespace:oneflow	inherits:Node
oneflow::final	graph/forward_compute_task_node.h	/^class ForwardCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::final	graph/logical_graph.h	/^class LogicalEdge final : public Edge<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Edge
oneflow::final	graph/logical_graph.h	/^class LogicalGraph final : public Graph<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Graph
oneflow::final	graph/logical_graph.h	/^class LogicalNode final : public Node<LogicalNode, LogicalEdge> {$/;"	c	namespace:oneflow	inherits:Node
oneflow::final	graph/loss_accumulate_compute_task_node.h	/^class LossAccCompTaskNode final : public AccCompTaskNode {$/;"	c	namespace:oneflow	inherits:AccCompTaskNode
oneflow::final	graph/loss_compute_task_node.h	/^class LossCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::final	graph/loss_print_compute_task_node.h	/^class LossPrintCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
oneflow::final	graph/model_diff_accumulate_compute_task_node.h	/^class MdDiffAccCompTaskNode final : public AccCompTaskNode {$/;"	c	namespace:oneflow	inherits:AccCompTaskNode
oneflow::final	graph/model_save_compute_task_node.h	/^class MdSaveCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
oneflow::final	graph/model_update_compute_task_node.h	/^class MdUpdtCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::final	graph/print_compute_task_node.h	/^class PrintCompTaskNode final : public SinkCompTaskNode {$/;"	c	namespace:oneflow	inherits:SinkCompTaskNode
oneflow::final	graph/source_compute_task_node.h	/^class SourceCompTaskNode final : public CompTaskNode {$/;"	c	namespace:oneflow	inherits:CompTaskNode
oneflow::final	graph/task_graph.h	/^class TaskGraph final : public Graph<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Graph
oneflow::final	graph/task_node.h	/^class TaskEdge final : public Edge<TaskNode, TaskEdge> {$/;"	c	namespace:oneflow	inherits:Edge
oneflow::final	job/compiler.h	/^class Compiler final {$/;"	c	namespace:oneflow
oneflow::final	job/id_manager.h	/^class IDMgr final {$/;"	c	namespace:oneflow
oneflow::final	job/improver.h	/^class Improver final {$/;"	c	namespace:oneflow
oneflow::final	job/job_desc.h	/^class JobDesc final {$/;"	c	namespace:oneflow
oneflow::final	job/machine_context.h	/^class MachineCtx final {$/;"	c	namespace:oneflow
oneflow::final	job/oneflow.cpp	/^class Oneflow final {$/;"	c	namespace:oneflow	file:
oneflow::final	job/runtime.h	/^class Runtime final {$/;"	c	namespace:oneflow
oneflow::final	job/runtime_context.h	/^class RuntimeCtx final {$/;"	c	namespace:oneflow
oneflow::final	kernel/accumulate_kernel.h	/^class AccumulateKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/boxing_kernel.h	/^class BoxingKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/clone_kernel.cpp	/^class CloneKernelUtil final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/clone_kernel.h	/^class CloneKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/concat_kernel.h	/^class ConcatKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/convolution_kernel.cpp	/^class ConvolutionKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/convolution_kernel.h	/^class ConvolutionKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/convolution_kernel.h	/^class ConvolutionKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	kernel/copy_comm_net_kernel.h	/^class CopyCommNetKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/copy_hd_kernel.h	/^class CopyHdKernel final : public KernelIf<DeviceType::kGPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/data_loader_kernel.h	/^class DataLoaderKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/innerproduct_kernel.h	/^class InnerProductKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/kernel_util.cpp	/^struct KernelUtil<DeviceType::kCPU, T> final {$/;"	s	namespace:oneflow	file:
oneflow::final	kernel/kernel_util.h	/^struct KernelUtil final {$/;"	s	namespace:oneflow
oneflow::final	kernel/loss_print_kernel.h	/^class LossPrintKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/model_save_kernel.h	/^class ModelSaveKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/momentum_model_update_kernel.h	/^class MomentumMdUpdateKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/multinomial_logistic_loss_kernel.cpp	/^    final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/multinomial_logistic_loss_kernel.h	/^class MultinomialLogisticLossKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/multinomial_logistic_loss_kernel.h	/^class MultinomialLogisticLossKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	kernel/normal_model_update_kernel.h	/^class NormalMdUpdateKernel final : public MdUpdateKernel<device_type> {$/;"	c	namespace:oneflow	inherits:MdUpdateKernel
oneflow::final	kernel/pooling_kernel.cpp	/^class PoolingKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/pooling_kernel.h	/^class PoolingKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/print_kernel.h	/^class PrintKernel final : public KernelIf<DeviceType::kCPU> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/relu_kernel.cpp	/^class ReluKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/relu_kernel.h	/^class ReluKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/relu_kernel.h	/^class ReluKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	kernel/rmsprop_model_update_kernel.cpp	/^class RMSPropMdUpdateKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/rmsprop_model_update_kernel.h	/^class RMSPropMdUpdateKernel final : public MdUpdateKernel<device_type> {$/;"	c	namespace:oneflow	inherits:MdUpdateKernel
oneflow::final	kernel/rmsprop_model_update_kernel.h	/^class RMSPropMdUpdateKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	kernel/softmax_kernel.cpp	/^class SoftmaxKernelUtil<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/softmax_kernel.h	/^class SoftmaxKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/softmax_kernel.h	/^class SoftmaxKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	kernel/softmax_loss_kernel.cpp	/^class SoftmaxLossKernelUtil<DeviceType::kCPU, PredType, LabelType> final {$/;"	c	namespace:oneflow	file:
oneflow::final	kernel/softmax_loss_kernel.h	/^class SoftmaxLossKernel final : public KernelIf<device_type> {$/;"	c	namespace:oneflow	inherits:KernelIf
oneflow::final	kernel/softmax_loss_kernel.h	/^class SoftmaxLossKernelUtil final {$/;"	c	namespace:oneflow
oneflow::final	memory/memory_allocator.h	/^class MemoryAllocator final {$/;"	c	namespace:oneflow
oneflow::final	operator/accumulate_op.h	/^class AccumulateOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/boxing_op.h	/^class BoxingOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/clone_op.h	/^class CloneOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/concat_op.h	/^class ConcatOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/convolution_op.h	/^class ConvolutionOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/copy_comm_net_op.h	/^class CopyCommNetOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/copy_hd_op.h	/^class CopyHdOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/data_loader_op.h	/^class DataLoaderOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/innerproduct_op.h	/^class InnerProductOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/loss_print_op.h	/^class LossPrintOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/model_save_op.h	/^class ModelSaveOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/momentum_model_update_op.h	/^class MomentumModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
oneflow::final	operator/multinomial_logistic_loss_op.h	/^class MultinomialLogisticLossOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/normal_model_update_op.h	/^class NormalModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
oneflow::final	operator/pooling_op.h	/^class PoolingOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/print_op.h	/^class PrintOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/relu_op.h	/^class ReluOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/rmsprop_model_update_op.h	/^class RMSPropModelUpdateOp final : public ModelUpdtOp {$/;"	c	namespace:oneflow	inherits:ModelUpdtOp
oneflow::final	operator/softmax_loss_op.h	/^class SoftmaxLossOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	operator/softmax_op.h	/^class SoftmaxOp final : public Operator {$/;"	c	namespace:oneflow	inherits:Operator
oneflow::final	persistence/cyclic_persistent_in_stream.h	/^class CyclicPersistentInStream final : public PersistentInStream {$/;"	c	namespace:oneflow	inherits:PersistentInStream
oneflow::final	persistence/normal_persistent_in_stream.h	/^class NormalPersistentInStream final : public PersistentInStream {$/;"	c	namespace:oneflow	inherits:PersistentInStream
oneflow::final	persistence/persistent_out_stream.h	/^class PersistentOutStream final {$/;"	c	namespace:oneflow
oneflow::final	persistence/snapshot.h	/^class Snapshot final {$/;"	c	namespace:oneflow
oneflow::final	register/blob.h	/^class Blob final {$/;"	c	namespace:oneflow
oneflow::final	register/blob.h	/^class PieceStatus final {$/;"	c	namespace:oneflow
oneflow::final	register/blob_desc.h	/^class BlobDesc final {$/;"	c	namespace:oneflow
oneflow::final	register/register.h	/^class Regst final {$/;"	c	namespace:oneflow
oneflow::final	register/register_desc.h	/^class RegstDesc final {$/;"	c	namespace:oneflow
oneflow::final	register/register_manager.h	/^class RegstMgr final {$/;"	c	namespace:oneflow
oneflow::final	thread/cpu_thread.h	/^class CpuThread final : public Thread {$/;"	c	namespace:oneflow	inherits:Thread
oneflow::final	thread/gpu_thread.h	/^class GpuThread final : public Thread {$/;"	c	namespace:oneflow	inherits:Thread
oneflow::final	thread/thread_manager.h	/^class ThreadMgr final {$/;"	c	namespace:oneflow
oneflow::final::AccumulateKernel	kernel/accumulate_kernel.h	/^  AccumulateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::AccumulateOp	operator/accumulate_op.h	/^  AccumulateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ActEventLogger	actor/act_event_logger.h	/^  ActEventLogger();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ActorMsg	actor/actor_message.h	/^  ActorMsg() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ActorMsgBus	actor/actor_message_bus.h	/^  ActorMsgBus() = default;$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ActorReadContext	comm_network/epoll/epoll_comm_network.h	/^  struct ActorReadContext {$/;"	s	class:oneflow::final	access:private
oneflow::final::ActorReadContext::read_ctx_list	comm_network/epoll/epoll_comm_network.h	/^    std::list<ReadContext*> read_ctx_list;$/;"	m	struct:oneflow::final::ActorReadContext	access:public
oneflow::final::ActorReadContext::read_ctx_list_mtx	comm_network/epoll/epoll_comm_network.h	/^    std::mutex read_ctx_list_mtx;$/;"	m	struct:oneflow::final::ActorReadContext	access:public
oneflow::final::AddCloneNodes	graph/logical_graph.h	/^  void AddCloneNodes(const HashMap<LogicalEdge*, std::string>& edge2lbn,$/;"	p	class:oneflow::final	access:private	signature:(const HashMap<LogicalEdge*, std::string>& edge2lbn, const HashMap<LogicalEdge*, std::string>& edge2ibn)
oneflow::final::AddConsumer	register/register_desc.h	/^  void AddConsumer(const TaskNode*);$/;"	p	class:oneflow::final	access:public	signature:(const TaskNode*)
oneflow::final::AddCopyCommNetTask	graph/task_graph.h	/^  void AddCopyCommNetTask(TaskNode* src, TaskNode* dst);$/;"	p	class:oneflow::final	access:private	signature:(TaskNode* src, TaskNode* dst)
oneflow::final::AddCopyD2HTaskIfNotCpu	graph/task_graph.h	/^  TaskNode* AddCopyD2HTaskIfNotCpu(CompTaskNode*);$/;"	p	class:oneflow::final	access:private	signature:(CompTaskNode*)
oneflow::final::AddCopyH2DTaskIfNotCpu	graph/task_graph.h	/^  TaskNode* AddCopyH2DTaskIfNotCpu(CompTaskNode*);$/;"	p	class:oneflow::final	access:private	signature:(CompTaskNode*)
oneflow::final::AddFd	comm_network/epoll/io_event_poller.h	/^  void AddFd(int fd, std::function<void()> read_handler,$/;"	p	class:oneflow::final	access:public	signature:(int fd, std::function<void()> read_handler, std::function<void()> write_handler)
oneflow::final::AddFd	comm_network/epoll/io_event_poller.h	/^  void AddFd(int fd, std::function<void()>* read_handler,$/;"	p	class:oneflow::final	access:private	signature:(int fd, std::function<void()>* read_handler, std::function<void()>* write_handler)
oneflow::final::AddFdWithOnlyReadHandler	comm_network/epoll/io_event_poller.h	/^  void AddFdWithOnlyReadHandler(int fd, std::function<void()> read_handler);$/;"	p	class:oneflow::final	access:public	signature:(int fd, std::function<void()> read_handler)
oneflow::final::AddLbn	register/register_desc.h	/^  BlobDesc* AddLbn(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
oneflow::final::AddOneCloneNode	graph/logical_graph.h	/^  void AddOneCloneNode(const CloneInfo& clone_info,$/;"	p	class:oneflow::final	access:private	signature:(const CloneInfo& clone_info, const HashMap<LogicalEdge*, std::string>& edge2ibn)
oneflow::final::AddRegst	graph/task_node.h	/^  void AddRegst(const std::string& name_in_producer,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name_in_producer, std::shared_ptr<RegstDesc> regst)
oneflow::final::AdditionAssign	kernel/clone_kernel.cpp	/^  static void AdditionAssign(DeviceCtx* device_ctx, const Blob* a, Blob* b);$/;"	p	class:oneflow::final	file:	access:public	signature:(DeviceCtx* device_ctx, const Blob* a, Blob* b)
oneflow::final::Allocate	memory/memory_allocator.h	/^  std::tuple<char*, const void*, std::function<void()>> Allocate($/;"	p	class:oneflow::final	access:public	signature:( MemoryCase mem_case, std::size_t size)
oneflow::final::AllocateBoxingThrdId	job/id_manager.h	/^  int64_t AllocateBoxingThrdId(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
oneflow::final::AllocatePersistenceThrdId	job/id_manager.h	/^  int64_t AllocatePersistenceThrdId(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
oneflow::final::AsyncReturnModelRegst	actor/forward_compute_actor.h	/^  void AsyncReturnModelRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::AsyncReturnModelRegstUntilLastPieceIdGreaterThan	actor/backward_compute_actor.h	/^  void AsyncReturnModelRegstUntilLastPieceIdGreaterThan(int64_t piece_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t piece_id)
oneflow::final::AsyncReturnModelRegstUntilMatchCurOutRegst	actor/backward_compute_actor.h	/^  void AsyncReturnModelRegstUntilMatchCurOutRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::AsyncWrite	comm_network/epoll/socket_helper.h	/^  void AsyncWrite(const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const SocketMsg& msg)
oneflow::final::AsyncWrite	comm_network/epoll/socket_write_helper.h	/^  void AsyncWrite(const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const SocketMsg& msg)
oneflow::final::At	common/balanced_splitter.h	/^  Range At(int64_t first_idx, int64_t last_idx) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t first_idx, int64_t last_idx) const
oneflow::final::At	common/balanced_splitter.h	/^  Range At(int64_t idx) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t idx) const
oneflow::final::At	common/shape.h	/^  int64_t At(int64_t index) const { return dim_vec_[index]; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t index) const
oneflow::final::Axpy	kernel/kernel_util.cpp	/^  static void Axpy(DeviceCtx* ctx, const int n, const T alpha, const T* x,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, const T* x, const int incx, T* y, const int incy)
oneflow::final::Axpy	kernel/kernel_util.h	/^  static void Axpy(DeviceCtx* ctx, const int n, const T alpha, const T* x,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, const T* x, const int incx, T* y, const int incy)
oneflow::final::Backward	kernel/multinomial_logistic_loss_kernel.cpp	/^  static void Backward(DeviceCtx* ctx, const int64_t instance_num,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* prediction_diff)
oneflow::final::Backward	kernel/multinomial_logistic_loss_kernel.h	/^  static void Backward(DeviceCtx* ctx, const int64_t instance_num,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* prediction_diff)
oneflow::final::Backward	kernel/relu_kernel.cpp	/^  static void Backward(const KernelCtx& ctx, const int64_t n, const T* out_diff,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* out_diff, const T* in, T* in_diff)
oneflow::final::Backward	kernel/relu_kernel.h	/^  static void Backward(const KernelCtx& ctx, const int64_t n, const T* out_diff,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* out_diff, const T* in, T* in_diff)
oneflow::final::BackwardCompActor	actor/backward_compute_actor.h	/^  BackwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BackwardCompTaskNode	graph/backward_compute_task_node.h	/^  BackwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BackwardDot	kernel/softmax_kernel.cpp	/^  static void BackwardDot(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, const T* out_diff, T* tmp)
oneflow::final::BackwardDot	kernel/softmax_kernel.h	/^  static void BackwardDot(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, const T* out_diff, T* tmp)
oneflow::final::BackwardSub	kernel/softmax_loss_kernel.cpp	/^  static void BackwardSub(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, PredType* in_diff)
oneflow::final::BackwardSub	kernel/softmax_loss_kernel.h	/^  static void BackwardSub(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, PredType* in_diff)
oneflow::final::BalancedSplitter	common/balanced_splitter.h	/^  BalancedSplitter() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BalancedSplitter	common/balanced_splitter.h	/^  BalancedSplitter(int64_t total_num, int64_t split_num);$/;"	p	class:oneflow::final	access:public	signature:(int64_t total_num, int64_t split_num)
oneflow::final::Barrier	control/ctrl_client.h	/^  void Barrier(const std::string& barrier_name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& barrier_name)
oneflow::final::Barrier	control/ctrl_client.h	/^  void Barrier(const std::string& barrier_name, int32_t barrier_num);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& barrier_name, int32_t barrier_num)
oneflow::final::BatchSize	job/job_desc.h	/^  int32_t BatchSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::BindBnInOpAndRegst	graph/exec_graph.h	/^  void BindBnInOpAndRegst(const std::string&, std::weak_ptr<RegstDesc>);$/;"	p	class:oneflow::final	access:public	signature:(const std::string&, std::weak_ptr<RegstDesc>)
oneflow::final::BldSubTskGphByBoxing	graph/task_graph.h	/^  void BldSubTskGphByBoxing($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::final::BldSubTskGphByOneToOne	graph/task_graph.h	/^  void BldSubTskGphByOneToOne($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::final::BldSubTskGphBySelectOneSourceToSoleSink	graph/task_graph.h	/^  void BldSubTskGphBySelectOneSourceToSoleSink($/;"	p	class:oneflow::final	access:public	signature:( const ChainNode* src_chain, const ChainNode* dst_chain, const std::vector<CompTaskNode*>& sorted_src_comp_tasks, const std::vector<CompTaskNode*>& sorted_dst_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::final::Blob	register/blob.h	/^  Blob(const BlobDesc* blob_desc, char* mem_ptr)$/;"	f	class:oneflow::final	access:public	signature:(const BlobDesc* blob_desc, char* mem_ptr)
oneflow::final::Blob	register/blob.h	/^  Blob(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token);$/;"	p	class:oneflow::final	access:public	signature:(const BlobDesc* blob_desc, char* mem_ptr, const void* comm_net_token)
oneflow::final::BlobDesc	register/blob_desc.h	/^  BlobDesc();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BlobDesc	register/blob_desc.h	/^  BlobDesc(Shape shape, DataType data_type, bool has_data_id)$/;"	f	class:oneflow::final	access:public	signature:(Shape shape, DataType data_type, bool has_data_id)
oneflow::final::BlobDesc	register/blob_desc.h	/^  BlobDesc(const BlobDescProto& proto) {$/;"	f	class:oneflow::final	access:public	signature:(const BlobDescProto& proto)
oneflow::final::BlockingCounter	common/blocking_counter.h	/^  BlockingCounter() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BlockingCounter	common/blocking_counter.h	/^  BlockingCounter(int64_t cnt_val) { cnt_val_ = cnt_val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t cnt_val)
oneflow::final::BoxingActor	actor/boxing_actor.h	/^  BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BoxingActor	actor/rnn_boxing_actor.h	/^  BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BoxingKernel	kernel/boxing_kernel.h	/^  BoxingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BoxingOp	operator/boxing_op.h	/^  BoxingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::BoxingWorkerNum	job/job_desc.h	/^  int32_t BoxingWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::BuildActivationDiffRegst	graph/backward_compute_task_node.h	/^  void BuildActivationDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildActivationRegst	graph/forward_compute_task_node.h	/^  void BuildActivationRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildBwStruct	graph/chain_graph.h	/^  void BuildBwStruct();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildCommandMsg	actor/actor_message.h	/^  static ActorMsg BuildCommandMsg(int64_t dst_actor_id, ActorCmd cmd);$/;"	p	class:oneflow::final	access:public	signature:(int64_t dst_actor_id, ActorCmd cmd)
oneflow::final::BuildEordMsg	actor/actor_message.h	/^  static ActorMsg BuildEordMsg(int64_t consumer, int64_t regst_desc_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t consumer, int64_t regst_desc_id)
oneflow::final::BuildExecGphAndBindOutDiffRegst	graph/backward_compute_task_node.h	/^  void BuildExecGphAndBindOutDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildExecGphStructAndBindInRegst	graph/forward_compute_task_node.h	/^  void BuildExecGphStructAndBindInRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildFwStruct	graph/chain_graph.h	/^  void BuildFwStruct();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildInBoxingIfNeed	graph/task_graph.h	/^  void BuildInBoxingIfNeed($/;"	p	class:oneflow::final	access:private	signature:( const ChainNode*, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_in_box)
oneflow::final::BuildInDiffRegst	graph/backward_compute_task_node.h	/^  void BuildInDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildLossPrintStruct	graph/chain_graph.h	/^  void BuildLossPrintStruct();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildModelAndTmpRegsts	graph/forward_compute_task_node.h	/^  void BuildModelAndTmpRegsts();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildModelDiffRegst	graph/backward_compute_task_node.h	/^  void BuildModelDiffRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildModelStruct	graph/chain_graph.h	/^  void BuildModelStruct(bool is_train);$/;"	p	class:oneflow::final	access:private	signature:(bool is_train)
oneflow::final::BuildOutBoxingIfNeed	graph/task_graph.h	/^  void BuildOutBoxingIfNeed($/;"	p	class:oneflow::final	access:private	signature:( const ChainNode*, const std::vector<CompTaskNode*>& sorted_comp_tasks, HashMap<const ChainNode*, std::vector<TaskNode*>>* chain2sorted_out_box)
oneflow::final::BuildOutRegst	graph/forward_compute_task_node.h	/^  void BuildOutRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::BuildRegstMsgToConsumer	actor/actor_message.h	/^  static ActorMsg BuildRegstMsgToConsumer(int64_t producer, int64_t consumer,$/;"	p	class:oneflow::final	access:public	signature:(int64_t producer, int64_t consumer, Regst*)
oneflow::final::BuildRegstMsgToProducer	actor/actor_message.h	/^  static ActorMsg BuildRegstMsgToProducer(int64_t consumer, int64_t producer,$/;"	p	class:oneflow::final	access:public	signature:(int64_t consumer, int64_t producer, Regst*)
oneflow::final::BuildRnnStruct	graph/chain_graph.h	/^  void BuildRnnStruct();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ByteSizeOfDataContentField	register/blob.h	/^  size_t ByteSizeOfDataContentField() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::ByteSizeOfDataContentField	register/blob_desc.h	/^  size_t ByteSizeOfDataContentField() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::ByteSizeOfDataIdField	register/blob.h	/^  size_t ByteSizeOfDataIdField() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::ByteSizeOfDataIdField	register/blob_desc.h	/^  size_t ByteSizeOfDataIdField() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(BackwardChainNode);$/;"	p	class:oneflow::final	access:public	signature:(BackwardChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(ForwardChainNode);$/;"	p	class:oneflow::final	access:public	signature:(ForwardChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossAccChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossAccChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(LossPrintChainNode);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(MdDiffAccChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(MdSaveChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveChainNode)
oneflow::final::CHAIN_NODE_BOILERPLATE	graph/chain_node.h	/^  CHAIN_NODE_BOILERPLATE(SourceChainNode);$/;"	p	class:oneflow::final	access:public	signature:(SourceChainNode)
oneflow::final::ChainEdge	graph/chain_node.h	/^  ChainEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ChainGraph	graph/chain_graph.h	/^  ChainGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ChainGraph	graph/chain_graph.h	/^  ChainGraph(bool is_train);$/;"	p	class:oneflow::final	access:public	signature:(bool is_train)
oneflow::final::Channel	common/channel.h	/^  Channel() : is_send_closed_(false), is_receive_closed_(false) {}$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::CheckDataType	register/blob.h	/^  void CheckDataType() const {$/;"	f	class:oneflow::final	access:private	signature:() const
oneflow::final::Clear	control/ctrl_client.h	/^  void Clear();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ClearKV	control/ctrl_client.h	/^  void ClearKV(const std::string& k);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k)
oneflow::final::CloneInfo	graph/logical_graph.h	/^  struct CloneInfo {$/;"	s	class:oneflow::final	access:private
oneflow::final::CloneInfo::clone_op	graph/logical_graph.h	/^    std::shared_ptr<Operator> clone_op;$/;"	m	struct:oneflow::final::CloneInfo	access:public
oneflow::final::CloneInfo::edges	graph/logical_graph.h	/^    std::vector<LogicalEdge*> edges;$/;"	m	struct:oneflow::final::CloneInfo	access:public
oneflow::final::CloneInfo::pred_node	graph/logical_graph.h	/^    LogicalNode* pred_node;$/;"	m	struct:oneflow::final::CloneInfo	access:public
oneflow::final::CloneKernel	kernel/clone_kernel.h	/^  CloneKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CloneOp	operator/clone_op.h	/^  CloneOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CloseReceiveEnd	common/channel.h	/^  void CloseReceiveEnd();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CloseSendEnd	common/channel.h	/^  void CloseSendEnd();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Col2Im	kernel/convolution_kernel.cpp	/^  static void Col2Im(const KernelCtx& ctx, const T* data_col,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_col, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* mut_dptr)
oneflow::final::Col2Im	kernel/convolution_kernel.h	/^  static void Col2Im(const KernelCtx& ctx, const T* data_col,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_col, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_im)
oneflow::final::CollectCloneInfos	graph/logical_graph.h	/^  void CollectCloneInfos(std::vector<CloneInfo>* clone_infos,$/;"	p	class:oneflow::final	access:private	signature:(std::vector<CloneInfo>* clone_infos, const HashMap<LogicalEdge*, std::string>& edge2lbn)
oneflow::final::CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  CommNetDeviceCtx() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  CommNetDeviceCtx(int64_t work_stream_id, void* actor_read_id)$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id, void* actor_read_id)
oneflow::final::CommNetDeviceCtx	actor/copy_comm_net_actor.h	/^  class CommNetDeviceCtx;$/;"	x
oneflow::final::CommNetThrdId	job/id_manager.h	/^  int64_t CommNetThrdId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::CommNetWorkerNum	job/job_desc.h	/^  int32_t CommNetWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::CompPackedBlobDesc	register/register_desc.h	/^  BlobDesc CompPackedBlobDesc() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::Compile	job/compiler.h	/^  Plan Compile();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Compiler	job/compiler.h	/^  Compiler() = default;$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ComputeBiasDiff	kernel/convolution_kernel.h	/^  void ComputeBiasDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::final::ComputeInputDiff	kernel/convolution_kernel.h	/^  void ComputeInputDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::final::ComputeLoss	kernel/softmax_loss_kernel.cpp	/^  static void ComputeLoss(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, const PredType* prob, PredType* tmp, PredType* loss)
oneflow::final::ComputeLoss	kernel/softmax_loss_kernel.h	/^  static void ComputeLoss(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const LabelType* label, const PredType* prob, PredType* tmp, PredType* loss)
oneflow::final::ComputeWeightDiff	kernel/convolution_kernel.h	/^  void ComputeWeightDiff($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::final::ConcatKernel	kernel/concat_kernel.h	/^  ConcatKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ConcatKernelWork	kernel/concat_kernel.h	/^  void ConcatKernelWork($/;"	p	class:oneflow::final	access:private	signature:( const KernelCtx& ctx, const std::string& obn, const PbRpf<std::string>& ibns, std::function<Blob*(const std::string&)> BnInOp2Blob) const
oneflow::final::ConcatLbnFile	persistence/snapshot.h	/^  void ConcatLbnFile(const std::string& lbn, int32_t part_num,$/;"	p	class:oneflow::final	access:private	signature:(const std::string& lbn, int32_t part_num, const std::string& concat_file)
oneflow::final::ConcatOp	operator/concat_op.h	/^  ConcatOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ConvolutionKernel	kernel/convolution_kernel.h	/^  ConvolutionKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ConvolutionKernelUtil	kernel/convolution_kernel.cpp	/^  ConvolutionKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::ConvolutionOp	operator/convolution_op.h	/^  ConvolutionOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Copy	kernel/kernel_util.cpp	/^  static void Copy(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, T* y, const int incy)
oneflow::final::Copy	kernel/kernel_util.h	/^  static void Copy(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, T* y, const int incy)
oneflow::final::CopyBlobDescFrom	register/register_desc.h	/^  void CopyBlobDescFrom(const RegstDesc*);$/;"	p	class:oneflow::final	access:public	signature:(const RegstDesc*)
oneflow::final::CopyBlobDescWithoutAddLbn	register/register_desc.h	/^  void CopyBlobDescWithoutAddLbn(const RegstDesc*);$/;"	p	class:oneflow::final	access:public	signature:(const RegstDesc*)
oneflow::final::CopyCommNetActor	actor/copy_comm_net_actor.h	/^  CopyCommNetActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyCommNetKernel	kernel/copy_comm_net_kernel.h	/^  CopyCommNetKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyCommNetOp	operator/copy_comm_net_op.h	/^  CopyCommNetOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyCommNetTaskNode	graph/copy_task_node.h	/^  CopyCommNetTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyDataContentFrom	register/blob.h	/^  void CopyDataContentFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::final::CopyDataIdFrom	register/blob.h	/^  void CopyDataIdFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::final::CopyFrom	register/blob.h	/^  void CopyFrom(DeviceCtx* device_ctx, const Blob* rhs);$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* device_ctx, const Blob* rhs)
oneflow::final::CopyHdActor	actor/copy_hd_actor.h	/^  CopyHdActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyHdKernel	kernel/copy_hd_kernel.h	/^  CopyHdKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyHdOp	operator/copy_hd_op.h	/^  CopyHdOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CopyHdTaskNode	graph/copy_task_node.h	/^  CopyHdTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Count	common/shape.h	/^  int64_t Count(int64_t begin_axis) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t begin_axis) const
oneflow::final::Count	common/shape.h	/^  int64_t Count(int64_t begin_axis, int64_t end_axis) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t begin_axis, int64_t end_axis) const
oneflow::final::CpuDeviceCtx	device/cpu_device_context.h	/^  CpuDeviceCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CpuDeviceCtx	device/cpu_device_context.h	/^  CpuDeviceCtx(int64_t work_stream_id) { set_work_stream_id(work_stream_id); }$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id)
oneflow::final::CpuThread	thread/cpu_thread.h	/^  CpuThread(int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id)
oneflow::final::CtrlCall	control/ctrl_call.h	/^  CtrlCall()$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::CtrlClient	control/ctrl_client.h	/^  CtrlClient();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::CtrlServer	control/ctrl_server.h	/^  CtrlServer() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CtrlServer	control/ctrl_server.h	/^  CtrlServer(const std::string& server_addr);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& server_addr)
oneflow::final::CudaDeviceCtx	device/cuda_device_context.h	/^  CudaDeviceCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CudaDeviceCtx	device/cuda_device_context.h	/^  CudaDeviceCtx(int64_t work_stream_id, const cudaStream_t* cuda_stream,$/;"	f	class:oneflow::final	access:public	signature:(int64_t work_stream_id, const cudaStream_t* cuda_stream, const cublasHandle_t* cublas_handle = nullptr, const cudnnHandle_t* cudnn_handle = nullptr)
oneflow::final::CudaStreamHandle	device/cuda_stream_handle.h	/^  CudaStreamHandle() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  CyclicPersistentInStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  CyclicPersistentInStream(fs::FileSystem* fs, const std::string& file_path);$/;"	p	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path)
oneflow::final::DataLoaderKernel	kernel/data_loader_kernel.h	/^  DataLoaderKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::DataLoaderOp	operator/data_loader_op.h	/^  DataLoaderOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Deallocate	memory/memory_allocator.h	/^  void Deallocate(char* dptr, const void*, MemoryCase mem_case);$/;"	p	class:oneflow::final	access:private	signature:(char* dptr, const void*, MemoryCase mem_case)
oneflow::final::DebugStr	common/shape.h	/^  std::string DebugStr() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::Decrease	common/blocking_counter.h	/^  int64_t Decrease() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::DecreaseCounter	job/runtime_context.h	/^  void DecreaseCounter(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
oneflow::final::DefaultDataType	job/job_desc.h	/^  DataType DefaultDataType() const { return job_conf_.default_data_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::DefaultFillConf	job/job_desc.h	/^  const FillConf* DefaultFillConf() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::DeleteActorReadId	comm_network/epoll/epoll_comm_network.h	/^  void DeleteActorReadId(void* actor_read_id);$/;"	p	class:oneflow::final	access:public	signature:(void* actor_read_id)
oneflow::final::DeleteAllSingleton	job/runtime.h	/^  void DeleteAllSingleton();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::Deserialize	actor/actor_message.h	/^  void Deserialize(StreamT& in_stream) {$/;"	f	class:oneflow::final	access:public	signature:(StreamT& in_stream)
oneflow::final::Div	kernel/kernel_util.cpp	/^  static void Div(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha)
oneflow::final::Div	kernel/kernel_util.h	/^  static void Div(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, T* x, const T* alpha)
oneflow::final::DoCompile	job/compiler.h	/^  Plan DoCompile();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::DoCurRead	comm_network/epoll/socket_read_helper.h	/^  bool DoCurRead(void (SocketReadHelper::*set_cur_read_done)());$/;"	p	class:oneflow::final	access:private	signature:(void (SocketReadHelper::*set_cur_read_done)())
oneflow::final::DoCurWrite	comm_network/epoll/socket_write_helper.h	/^  bool DoCurWrite(void (SocketWriteHelper::*set_cur_write_done)());$/;"	p	class:oneflow::final	access:private	signature:(void (SocketWriteHelper::*set_cur_write_done)())
oneflow::final::Dot	kernel/kernel_util.cpp	/^  static void Dot(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, const T* y, const int incy, T* result)
oneflow::final::Dot	kernel/kernel_util.h	/^  static void Dot(DeviceCtx* ctx, const int n, const T* x, const int incx,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T* x, const int incx, const T* y, const int incy, T* result)
oneflow::final::EpollCommNet	comm_network/epoll/epoll_comm_network.h	/^  EpollCommNet();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::EpollLoop	comm_network/epoll/io_event_poller.h	/^  void EpollLoop();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::EraseZeroSizeBlob	register/register_desc.h	/^  void EraseZeroSizeBlob();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ExecEdge	graph/exec_graph.h	/^  ExecEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ExecGraph	graph/exec_graph.h	/^  ExecGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ExecNode	graph/exec_graph.h	/^  ExecNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Exp	kernel/kernel_util.cpp	/^  static void Exp(DeviceCtx* ctx, const int64_t n, const T* x, T* y) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* y)
oneflow::final::Exp	kernel/kernel_util.h	/^  static void Exp(DeviceCtx* ctx, const int64_t n, const T* x, T* y);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* y)
oneflow::final::Fill	kernel/kernel_util.cpp	/^  static void Fill(DeviceCtx* ctx, const FillConf& fill_conf,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf& fill_conf, uint32_t random_seed, Blob* blob)
oneflow::final::Fill	kernel/kernel_util.h	/^  static void Fill(DeviceCtx* ctx, const FillConf& fill_conf,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf& fill_conf, uint32_t random_seed, Blob* blob)
oneflow::final::FillNodeWithParallelDesc	graph/logical_graph.h	/^  void FillNodeWithParallelDesc();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::FillWithModelDir	kernel/kernel_util.cpp	/^  static void FillWithModelDir(DeviceCtx* ctx, int32_t part_id,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, int32_t part_id, int32_t part_num, const std::string& model_dir, Blob* blob, const std::string& bn_in_op, int32_t dim_num, int64_t num_in_each_dim)
oneflow::final::FillWithModelDir	kernel/kernel_util.h	/^  static void FillWithModelDir(DeviceCtx* ctx, int32_t part_id,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, int32_t part_id, int32_t part_num, const std::string& model_dir, Blob* blob, const std::string& bn_in_op, int32_t dim_num, int64_t num_in_each_dim)
oneflow::final::FillWithProperConf	kernel/kernel_util.h	/^  static void FillWithProperConf(DeviceCtx* ctx, const FillConf* fill_conf,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const FillConf* fill_conf, uint32_t random_seed, Blob* blob)
oneflow::final::FinishOneReadContext	comm_network/epoll/epoll_comm_network.h	/^  void FinishOneReadContext(ActorReadContext*, ReadContext*);$/;"	p	class:oneflow::final	access:private	signature:(ActorReadContext*, ReadContext*)
oneflow::final::Flush	persistence/persistent_out_stream.h	/^  void Flush();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ForEachChainNode	graph/chain_graph.h	/^  void ForEachChainNode(std::function<void(ChainNodeType*)> Handler) {$/;"	f	class:oneflow::final	access:private	signature:(std::function<void(ChainNodeType*)> Handler)
oneflow::final::ForEachLbn	register/register_desc.h	/^  void ForEachLbn(std::function<void(const std::string&)> func) const;$/;"	p	class:oneflow::final	access:public	signature:(std::function<void(const std::string&)> func) const
oneflow::final::Forward	kernel/multinomial_logistic_loss_kernel.cpp	/^  static void Forward(DeviceCtx* ctx, const int64_t instance_num,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* loss, PredType* loss_buff)
oneflow::final::Forward	kernel/multinomial_logistic_loss_kernel.h	/^  static void Forward(DeviceCtx* ctx, const int64_t instance_num,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t instance_num, const int64_t num_of_classes, const PredType* prediction, const LabelType* labels, PredType* loss, PredType* loss_buff)
oneflow::final::Forward	kernel/relu_kernel.cpp	/^  static void Forward(const KernelCtx& ctx, const int64_t n, const T* in,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* in, T* out)
oneflow::final::Forward	kernel/relu_kernel.h	/^  static void Forward(const KernelCtx& ctx, const int64_t n, const T* in,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const int64_t n, const T* in, T* out)
oneflow::final::ForwardCompActor	actor/forward_compute_actor.h	/^  ForwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ForwardCompTaskNode	graph/forward_compute_task_node.h	/^  ForwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ForwardMax	kernel/softmax_kernel.cpp	/^  static void ForwardMax(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
oneflow::final::ForwardMax	kernel/softmax_kernel.h	/^  static void ForwardMax(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
oneflow::final::ForwardSum	kernel/softmax_kernel.cpp	/^  static void ForwardSum(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
oneflow::final::ForwardSum	kernel/softmax_kernel.h	/^  static void ForwardSum(DeviceCtx* ctx, const int64_t n, const int64_t w,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, const T* out, T* tmp)
oneflow::final::Gemm	kernel/kernel_util.cpp	/^  static void Gemm(DeviceCtx* ctx, const enum CBLAS_ORDER order,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const T alpha, const T* a, const int lda, const T* b, const int ldb, const T beta, T* c, const int ldc)
oneflow::final::Gemm	kernel/kernel_util.h	/^  static void Gemm(DeviceCtx* ctx, const enum CBLAS_ORDER order,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_ORDER order, const enum CBLAS_TRANSPOSE trans_a, const enum CBLAS_TRANSPOSE trans_b, const int m, const int n, const int k, const T alpha, const T* a, const int lda, const T* b, const int ldb, const T beta, T* c, const int ldc)
oneflow::final::Gemv	kernel/kernel_util.cpp	/^  static void Gemv(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m, int n, const T alpha, const T* a, int lda, const T* x, const int incx, const T beta, T* y, const int incy)
oneflow::final::Gemv	kernel/kernel_util.h	/^  static void Gemv(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const enum CBLAS_TRANSPOSE trans, int m, int n, const T alpha, const T* a, int lda, const T* x, const int incx, const T beta, T* y, const int incy)
oneflow::final::GetBlobByLbn	register/register.h	/^  Blob* GetBlobByLbn(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
oneflow::final::GetBlobDesc	register/register_desc.h	/^  const BlobDesc* GetBlobDesc(const std::string& lbn) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn) const
oneflow::final::GetBlobDesc4BnInOp	graph/exec_graph.h	/^  BlobDesc* GetBlobDesc4BnInOp(const std::string&) const;$/;"	p	class:oneflow::final	access:private	signature:(const std::string&) const
oneflow::final::GetBlobDesc4BnInOpFunc	graph/exec_graph.h	/^  std::function<BlobDesc*(const std::string&)> GetBlobDesc4BnInOpFunc() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::GetCtrlAddr	job/machine_context.h	/^  std::string GetCtrlAddr(int64_t machine_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id) const
oneflow::final::GetDeviceType	job/job_desc.h	/^  DeviceType GetDeviceType() const { return resource_.device_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::GetDeviceTypeFromActorId	job/id_manager.h	/^  DeviceType GetDeviceTypeFromActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
oneflow::final::GetDeviceTypeFromThrdId	job/id_manager.h	/^  DeviceType GetDeviceTypeFromThrdId(int64_t thrd_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id) const
oneflow::final::GetDirFromOpName	persistence/snapshot.h	/^  std::string GetDirFromOpName(const std::string& op_name) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& op_name) const
oneflow::final::GetIntoNextStatus	register/blob.h	/^  int GetIntoNextStatus();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::GetMachineThrdId	job/id_manager.h	/^  int64_t GetMachineThrdId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::final::GetMasterCtrlAddr	job/machine_context.h	/^  std::string GetMasterCtrlAddr() const { return GetCtrlAddr(0); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::GetMasterStub	control/ctrl_client.h	/^  CtrlService::Stub* GetMasterStub() { return stubs_[0].get(); }$/;"	f	class:oneflow::final	access:private	signature:()
oneflow::final::GetMthdForBldSubTskGph	graph/chain_node.h	/^  BldSubTskGphMthd GetMthdForBldSubTskGph() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::GetOutStream	persistence/snapshot.h	/^  std::unique_ptr<PersistentOutStream> GetOutStream(const std::string& lbn,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, int32_t part_id)
oneflow::final::GetProducerOp	graph/logical_graph.h	/^  std::shared_ptr<const Operator> GetProducerOp(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
oneflow::final::GetRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetRegst($/;"	p	class:oneflow::final	access:public	signature:( const std::string& name_in_producer) const
oneflow::final::GetRelatedInRegst	graph/backward_compute_task_node.h	/^  std::shared_ptr<RegstDesc> GetRelatedInRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::GetReservedWorkStreamId	job/id_manager.h	/^  int64_t GetReservedWorkStreamId(int64_t machine_id, int64_t thrd_id,$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id, int64_t reserved_id)
oneflow::final::GetResponsibleStub	control/ctrl_client.h	/^  CtrlService::Stub* GetResponsibleStub(const std::string& key);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& key)
oneflow::final::GetSocketHelper	comm_network/epoll/epoll_comm_network.h	/^  SocketHelper* GetSocketHelper(int64_t machine_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t machine_id)
oneflow::final::GetSoleRegst	graph/task_node.h	/^  std::shared_ptr<RegstDesc> GetSoleRegst() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::GetThisCtrlAddr	job/machine_context.h	/^  std::string GetThisCtrlAddr() const { return GetCtrlAddr(this_machine_id_); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::GetThisStub	control/ctrl_client.h	/^  CtrlService::Stub* GetThisStub();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::GetThrd	thread/thread_manager.h	/^  Thread* GetThrd(int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id)
oneflow::final::GpuThread	thread/gpu_thread.h	/^  GpuThread() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::GpuThread	thread/gpu_thread.h	/^  GpuThread(int64_t thrd_id, int64_t dev_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t thrd_id, int64_t dev_id)
oneflow::final::HandleRpcs	control/ctrl_server.h	/^  void HandleRpcs();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::HandlerInitModel	actor/forward_compute_actor.h	/^  int HandlerInitModel(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
oneflow::final::HandlerInitModelAndModelTmp	actor/model_update_compute_actor.h	/^  int HandlerInitModelAndModelTmp(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
oneflow::final::HandlerInitModelTmp	actor/forward_compute_actor.h	/^  int HandlerInitModelTmp(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
oneflow::final::HandlerSendInitialModel	actor/model_update_compute_actor.h	/^  int HandlerSendInitialModel(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
oneflow::final::HandlerWaitToStart	actor/source_compute_actor.h	/^  int HandlerWaitToStart(const ActorMsg&);$/;"	p	class:oneflow::final	access:private	signature:(const ActorMsg&)
oneflow::final::IDMgr	job/id_manager.h	/^  IDMgr();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::IOEventPoller	comm_network/epoll/io_event_poller.h	/^  IOEventPoller();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::IOHandler	comm_network/epoll/io_event_poller.h	/^  struct IOHandler {$/;"	s	class:oneflow::final	access:private
oneflow::final::IOHandler::IOHandler	comm_network/epoll/io_event_poller.h	/^    IOHandler() {$/;"	f	struct:oneflow::final::IOHandler	access:public	signature:()
oneflow::final::IOHandler::fd	comm_network/epoll/io_event_poller.h	/^    int fd;$/;"	m	struct:oneflow::final::IOHandler	access:public
oneflow::final::IOHandler::read_handler	comm_network/epoll/io_event_poller.h	/^    std::function<void()> read_handler;$/;"	m	struct:oneflow::final::IOHandler	access:public
oneflow::final::IOHandler::write_handler	comm_network/epoll/io_event_poller.h	/^    std::function<void()> write_handler;$/;"	m	struct:oneflow::final::IOHandler	access:public
oneflow::final::Im2Col	kernel/convolution_kernel.cpp	/^  static void Im2Col(const KernelCtx& ctx, const T* dptr, const int channels,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* dptr, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_col)
oneflow::final::Im2Col	kernel/convolution_kernel.h	/^  static void Im2Col(const KernelCtx& ctx, const T* data_im, const int channels,$/;"	p	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const T* data_im, const int channels, const int height, const int width, const int kernel_h, const int kernel_w, const int pad_h, const int pad_w, const int stride_h, const int stride_w, const int dilation_h, const int dilation_w, T* data_col)
oneflow::final::Improve	job/improver.h	/^  Plan Improve(const Plan& naive_plan, const std::string& act_event_filepath);$/;"	p	class:oneflow::final	access:public	signature:(const Plan& naive_plan, const std::string& act_event_filepath)
oneflow::final::Improver	job/improver.h	/^  Improver() = default;$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::InBoxingTaskNode	graph/boxing_task_node.h	/^  InBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::IncreaseDoneCnt	comm_network/epoll/epoll_comm_network.h	/^  int8_t IncreaseDoneCnt(ReadContext*);$/;"	p	class:oneflow::final	access:private	signature:(ReadContext*)
oneflow::final::InferBlobDescs	operator/clone_op.h	/^  void InferBlobDescs($/;"	p	class:oneflow::final	access:public	signature:( std::function<BlobDesc*(const std::string)> GetBlobDesc4BnInOp, const ParallelContext* parallel_ctx) const
oneflow::final::InferBlobDescsInProducedRegsts	graph/backward_compute_task_node.h	/^  void InferBlobDescsInProducedRegsts();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::InferMemCase	register/register_desc.h	/^  void InferMemCase();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Init	comm_network/epoll/epoll_comm_network.h	/^  static void Init();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Init	graph/copy_task_node.h	/^  void Init(const CompTaskNode*, CopyHdOpConf::Type);$/;"	p	class:oneflow::final	access:public	signature:(const CompTaskNode*, CopyHdOpConf::Type)
oneflow::final::Init	graph/copy_task_node.h	/^  void Init(int64_t machine_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id)
oneflow::final::InitMsgWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool InitMsgWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::InitRegstBySendToFw	actor/model_update_compute_actor.h	/^  void InitRegstBySendToFw(int64_t regst_desc_id);$/;"	p	class:oneflow::final	access:private	signature:(int64_t regst_desc_id)
oneflow::final::InitSockets	comm_network/epoll/epoll_comm_network.h	/^  void InitSockets();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::InnerProductKernel	kernel/innerproduct_kernel.h	/^  InnerProductKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::InnerProductOp	operator/innerproduct_op.h	/^  InnerProductOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::IsLast	register/blob.h	/^  bool IsLast() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::IsLastCol	register/blob.h	/^  bool IsLastCol() const { return col_id_ == max_col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::IsLocked	register/register_desc.h	/^  bool IsLocked() const { return is_locked_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::IsNextColOf	register/blob.h	/^  bool IsNextColOf(const PieceStatus& pre) const;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus& pre) const
oneflow::final::IsPredict	job/job_desc.h	/^  bool IsPredict() const { return job_conf_.has_predict_conf(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::IsThisMachineMaster	job/machine_context.h	/^  bool IsThisMachineMaster() const { return this_machine_id_ == 0; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::IsTrain	job/job_desc.h	/^  bool IsTrain() const { return job_conf_.has_train_conf(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::JobDesc	job/job_desc.h	/^  JobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::JobDesc	job/job_desc.h	/^  JobDesc(const JobConf&);$/;"	p	class:oneflow::final	access:private	signature:(const JobConf&)
oneflow::final::LoadServer	control/ctrl_client.h	/^  void LoadServer(const std::string& server_addr, CtrlService::Stub* stub);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& server_addr, CtrlService::Stub* stub)
oneflow::final::Lock	register/register_desc.h	/^  void Lock();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LogicalEdge	graph/logical_graph.h	/^  LogicalEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LogicalGraph	graph/logical_graph.h	/^  LogicalGraph();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::LogicalNode	graph/logical_graph.h	/^  LogicalNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossAccCompActor	actor/loss_accumulate_compute_actor.h	/^  LossAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossAccCompTaskNode	graph/loss_accumulate_compute_task_node.h	/^  LossAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossCompTaskNode	graph/loss_compute_task_node.h	/^  LossCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossPrintCompActor	actor/loss_print_compute_actor.h	/^  LossPrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossPrintCompTaskNode	graph/loss_print_compute_task_node.h	/^  LossPrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossPrintKernel	kernel/loss_print_kernel.h	/^  LossPrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::LossPrintOp	operator/loss_print_op.h	/^  LossPrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MachineCtx	job/machine_context.h	/^  MachineCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MachineCtx	job/machine_context.h	/^  MachineCtx(const std::string& this_mchn_name);$/;"	p	class:oneflow::final	access:private	signature:(const std::string& this_mchn_name)
oneflow::final::MachineID4MachineName	job/id_manager.h	/^  int64_t MachineID4MachineName(const std::string& machine_name) const;$/;"	p	class:oneflow::final	access:public	signature:(const std::string& machine_name) const
oneflow::final::MachineId4ActorId	job/id_manager.h	/^  int64_t MachineId4ActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
oneflow::final::MachineName4MachineId	job/id_manager.h	/^  const std::string& MachineName4MachineId(int64_t machine_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id) const
oneflow::final::Max	kernel/kernel_util.cpp	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr)
oneflow::final::Max	kernel/kernel_util.cpp	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr, T* temp_storage, size_t temp_storage_bytes)
oneflow::final::Max	kernel/kernel_util.h	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr)
oneflow::final::Max	kernel/kernel_util.h	/^  static void Max(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* max_ptr, T* temp_storage, size_t temp_storage_bytes)
oneflow::final::MdDiffAccCompActor	actor/model_diff_accumulate_compute_actor.h	/^  MdDiffAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdDiffAccCompTaskNode	graph/model_diff_accumulate_compute_task_node.h	/^  MdDiffAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdLoadSnapshotPath	job/job_desc.h	/^  const std::string& MdLoadSnapshotPath();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdSaveCompActor	actor/model_save_compute_actor.h	/^  MdSaveCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdSaveCompTaskNode	graph/model_save_compute_task_node.h	/^  MdSaveCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdSaveSnapshotsPath	job/job_desc.h	/^  const std::string& MdSaveSnapshotsPath() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::MdUpdtChainNode	graph/chain_node.h	/^  MdUpdtChainNode() : random_seed_(NewRandomSeed()) {}$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::MdUpdtCompActor	actor/model_update_compute_actor.h	/^  MdUpdtCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MdUpdtCompTaskNode	graph/model_update_compute_task_node.h	/^  MdUpdtCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MemoryAllocator	memory/memory_allocator.h	/^  MemoryAllocator() = default;$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ModelSaveKernel	kernel/model_save_kernel.h	/^  ModelSaveKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ModelSaveOp	operator/model_save_op.h	/^  ModelSaveOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MomentumMdUpdateKernel	kernel/momentum_model_update_kernel.h	/^  MomentumMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MomentumModelUpdateOp	operator/momentum_model_update_op.h	/^  MomentumModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MsgBodyReadHandle	comm_network/epoll/socket_read_helper.h	/^  bool MsgBodyReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::MsgBodyWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool MsgBodyWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::MsgHeadReadHandle	comm_network/epoll/socket_read_helper.h	/^  bool MsgHeadReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::MsgHeadWriteHandle	comm_network/epoll/socket_write_helper.h	/^  bool MsgHeadWriteHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::Mul	kernel/kernel_util.cpp	/^  static void Mul(DeviceCtx* ctx, const int64_t n, const T* x, const T* y,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, const T* y, T* z)
oneflow::final::Mul	kernel/kernel_util.h	/^  static void Mul(DeviceCtx* ctx, const int64_t n, const T* x, const T* y,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, const T* y, T* z)
oneflow::final::MultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.h	/^  MultinomialLogisticLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MultinomialLogisticLossKernelUtil	kernel/multinomial_logistic_loss_kernel.cpp	/^  MultinomialLogisticLossKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::MultinomialLogisticLossKernelUtil	kernel/multinomial_logistic_loss_kernel.h	/^  MultinomialLogisticLossKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MultinomialLogisticLossOp	operator/multinomial_logistic_loss_op.h	/^  MultinomialLogisticLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::MutBlobDesc	register/register_desc.h	/^  BlobDesc* MutBlobDesc(const std::string& lbn);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn)
oneflow::final::NaiveBuildGraphStruct	graph/logical_graph.h	/^  void NaiveBuildGraphStruct(HashMap<LogicalEdge*, std::string>* edge2lbn,$/;"	p	class:oneflow::final	access:private	signature:(HashMap<LogicalEdge*, std::string>* edge2lbn, HashMap<LogicalEdge*, std::string>* edge2ibn)
oneflow::final::NewActorReadId	comm_network/epoll/epoll_comm_network.h	/^  void* NewActorReadId();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NewAllSingleton	job/runtime.h	/^  void NewAllSingleton(const Plan& plan, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(const Plan& plan, bool is_experiment_phase)
oneflow::final::NewCounter	job/runtime_context.h	/^  void NewCounter(const std::string& name, int64_t val);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name, int64_t val)
oneflow::final::NewRegstDescId	job/id_manager.h	/^  int64_t NewRegstDescId() { return regst_desc_id_count_++; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::NewRegsts	register/register_manager.h	/^  void NewRegsts(const RegstDescProto& regst_desc_proto,$/;"	p	class:oneflow::final	access:public	signature:(const RegstDescProto& regst_desc_proto, std::function<void(Regst*)> OneRegstDone)
oneflow::final::NewStub	control/ctrl_service.h	/^  static std::unique_ptr<Stub> NewStub(const std::string& addr);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& addr)
oneflow::final::NewTaskId	job/id_manager.h	/^  int64_t NewTaskId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::final::NewWorkStreamId	job/id_manager.h	/^  int64_t NewWorkStreamId(int64_t machine_id, int64_t thrd_id);$/;"	p	class:oneflow::final	access:public	signature:(int64_t machine_id, int64_t thrd_id)
oneflow::final::NormalMdUpdateKernel	kernel/normal_model_update_kernel.h	/^  NormalMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NormalModelUpdateOp	operator/normal_model_update_op.h	/^  NormalModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream(fs::FileSystem* fs, const std::string& file_path)$/;"	f	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path)
oneflow::final::NormalPersistentInStream	persistence/normal_persistent_in_stream.h	/^  NormalPersistentInStream(fs::FileSystem* fs, const std::string& file_path,$/;"	f	class:oneflow::final	access:public	signature:(fs::FileSystem* fs, const std::string& file_path, uint64_t offset)
oneflow::final::NotifyDone	control/ctrl_client.h	/^  void NotifyDone(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
oneflow::final::NotifyMeSocketReadable	comm_network/epoll/socket_read_helper.h	/^  void NotifyMeSocketReadable();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NotifyMeSocketWriteable	comm_network/epoll/socket_write_helper.h	/^  void NotifyMeSocketWriteable();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::NumAxes	common/shape.h	/^  int64_t NumAxes() const { return dim_vec_.size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::NumOfBatchesInSnapshot	job/job_desc.h	/^  int32_t NumOfBatchesInSnapshot() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::NumOfLbn	register/register_desc.h	/^  size_t NumOfLbn() const { return lbn2blob_desc_.size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::NumOfPiecesInBatch	job/job_desc.h	/^  int32_t NumOfPiecesInBatch() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/act_event_logger.h	/^  OF_DISALLOW_COPY_AND_MOVE(ActEventLogger);$/;"	p	class:oneflow::final	access:public	signature:(ActEventLogger)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/actor_message_bus.h	/^  OF_DISALLOW_COPY_AND_MOVE(ActorMsgBus);$/;"	p	class:oneflow::final	access:public	signature:(ActorMsgBus)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/backward_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BackwardCompActor);$/;"	p	class:oneflow::final	access:public	signature:(BackwardCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/boxing_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingActor);$/;"	p	class:oneflow::final	access:public	signature:(BoxingActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/copy_comm_net_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetActor);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/copy_hd_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdActor);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/forward_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(ForwardCompActor);$/;"	p	class:oneflow::final	access:public	signature:(ForwardCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/loss_accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossAccCompActor);$/;"	p	class:oneflow::final	access:public	signature:(LossAccCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/loss_print_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintCompActor);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/model_diff_accumulate_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdDiffAccCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/model_save_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdSaveCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/model_update_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtCompActor);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/print_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintCompActor);$/;"	p	class:oneflow::final	access:public	signature:(PrintCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/rnn_boxing_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingActor);$/;"	p	class:oneflow::final	access:public	signature:(BoxingActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	actor/source_compute_actor.h	/^  OF_DISALLOW_COPY_AND_MOVE(SourceCompActor);$/;"	p	class:oneflow::final	access:public	signature:(SourceCompActor)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/epoll_comm_network.h	/^  OF_DISALLOW_COPY_AND_MOVE(EpollCommNet);$/;"	p	class:oneflow::final	access:public	signature:(EpollCommNet)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/io_event_poller.h	/^  OF_DISALLOW_COPY_AND_MOVE(IOEventPoller);$/;"	p	class:oneflow::final	access:public	signature:(IOEventPoller)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketHelper)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_read_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketReadHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketReadHelper)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	comm_network/epoll/socket_write_helper.h	/^  OF_DISALLOW_COPY_AND_MOVE(SocketWriteHelper);$/;"	p	class:oneflow::final	access:public	signature:(SocketWriteHelper)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	common/blocking_counter.h	/^  OF_DISALLOW_COPY_AND_MOVE(BlockingCounter);$/;"	p	class:oneflow::final	access:public	signature:(BlockingCounter)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	common/channel.h	/^  OF_DISALLOW_COPY_AND_MOVE(Channel);$/;"	p	class:oneflow::final	access:public	signature:(Channel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	control/ctrl_call.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlCall);$/;"	p	class:oneflow::final	access:public	signature:(CtrlCall)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	control/ctrl_client.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlClient);$/;"	p	class:oneflow::final	access:public	signature:(CtrlClient)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	control/ctrl_server.h	/^  OF_DISALLOW_COPY_AND_MOVE(CtrlServer);$/;"	p	class:oneflow::final	access:public	signature:(CtrlServer)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	device/cuda_stream_handle.h	/^  OF_DISALLOW_COPY_AND_MOVE(CudaStreamHandle);$/;"	p	class:oneflow::final	access:public	signature:(CudaStreamHandle)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/backward_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(BackwardCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(BackwardCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(InBoxingTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(InBoxingTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/boxing_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(OutBoxingTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(OutBoxingTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/chain_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainGraph);$/;"	p	class:oneflow::final	access:public	signature:(ChainGraph)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ChainEdge);$/;"	p	class:oneflow::final	access:public	signature:(ChainEdge)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtChainNode);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtChainNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/chain_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintChainNode);$/;"	p	class:oneflow::final	access:public	signature:(PrintChainNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/copy_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecEdge);$/;"	p	class:oneflow::final	access:public	signature:(ExecEdge)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecGraph);$/;"	p	class:oneflow::final	access:public	signature:(ExecGraph)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/exec_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(ExecNode);$/;"	p	class:oneflow::final	access:public	signature:(ExecNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/forward_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(ForwardCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(ForwardCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalEdge);$/;"	p	class:oneflow::final	access:public	signature:(LogicalEdge)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalGraph);$/;"	p	class:oneflow::final	access:public	signature:(LogicalGraph)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/logical_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(LogicalNode);$/;"	p	class:oneflow::final	access:public	signature:(LogicalNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/loss_accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossAccCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossAccCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/loss_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/loss_print_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/model_diff_accumulate_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdDiffAccCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdDiffAccCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/model_save_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdSaveCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdSaveCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/model_update_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(MdUpdtCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(MdUpdtCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/print_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(PrintCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/source_compute_task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(SourceCompTaskNode);$/;"	p	class:oneflow::final	access:public	signature:(SourceCompTaskNode)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/task_graph.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskGraph);$/;"	p	class:oneflow::final	access:public	signature:(TaskGraph)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	graph/task_node.h	/^  OF_DISALLOW_COPY_AND_MOVE(TaskEdge);$/;"	p	class:oneflow::final	access:public	signature:(TaskEdge)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/compiler.h	/^  OF_DISALLOW_COPY_AND_MOVE(Compiler);$/;"	p	class:oneflow::final	access:public	signature:(Compiler)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/id_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(IDMgr);$/;"	p	class:oneflow::final	access:public	signature:(IDMgr)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/improver.h	/^  OF_DISALLOW_COPY_AND_MOVE(Improver);$/;"	p	class:oneflow::final	access:public	signature:(Improver)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/job_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(JobDesc);$/;"	p	class:oneflow::final	access:public	signature:(JobDesc)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/machine_context.h	/^  OF_DISALLOW_COPY_AND_MOVE(MachineCtx);$/;"	p	class:oneflow::final	access:public	signature:(MachineCtx)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/oneflow.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(Oneflow);$/;"	p	class:oneflow::final	file:	access:public	signature:(Oneflow)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/runtime.h	/^  OF_DISALLOW_COPY_AND_MOVE(Runtime);$/;"	p	class:oneflow::final	access:public	signature:(Runtime)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	job/runtime_context.h	/^  OF_DISALLOW_COPY_AND_MOVE(RuntimeCtx);$/;"	p	class:oneflow::final	access:public	signature:(RuntimeCtx)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/accumulate_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateKernel);$/;"	p	class:oneflow::final	access:public	signature:(AccumulateKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/boxing_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingKernel);$/;"	p	class:oneflow::final	access:public	signature:(BoxingKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/clone_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CloneKernel);$/;"	p	class:oneflow::final	access:public	signature:(CloneKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/concat_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConcatKernel);$/;"	p	class:oneflow::final	access:public	signature:(ConcatKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/convolution_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(ConvolutionKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/convolution_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionKernel);$/;"	p	class:oneflow::final	access:public	signature:(ConvolutionKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/copy_comm_net_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetKernel);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/copy_hd_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdKernel);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/data_loader_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(DataLoaderKernel);$/;"	p	class:oneflow::final	access:public	signature:(DataLoaderKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/innerproduct_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(InnerProductKernel);$/;"	p	class:oneflow::final	access:public	signature:(InnerProductKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/loss_print_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintKernel);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/model_save_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelSaveKernel);$/;"	p	class:oneflow::final	access:public	signature:(ModelSaveKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/momentum_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MomentumMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(MomentumMdUpdateKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(MultinomialLogisticLossKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernel);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/multinomial_logistic_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/normal_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(NormalMdUpdateKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(PoolingKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/pooling_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingKernel);$/;"	p	class:oneflow::final	access:public	signature:(PoolingKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/print_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintKernel);$/;"	p	class:oneflow::final	access:public	signature:(PrintKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(ReluKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernel);$/;"	p	class:oneflow::final	access:public	signature:(ReluKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/relu_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(ReluKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/rmsprop_model_update_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(RMSPropMdUpdateKernel);$/;"	p	class:oneflow::final	access:public	signature:(RMSPropMdUpdateKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(SoftmaxKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernel);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.cpp	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernelUtil);$/;"	p	class:oneflow::final	file:	access:public	signature:(SoftmaxLossKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernel);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossKernel)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	kernel/softmax_loss_kernel.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossKernelUtil);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossKernelUtil)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	memory/memory_allocator.h	/^  OF_DISALLOW_COPY_AND_MOVE(MemoryAllocator);$/;"	p	class:oneflow::final	access:public	signature:(MemoryAllocator)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/accumulate_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(AccumulateOp);$/;"	p	class:oneflow::final	access:public	signature:(AccumulateOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/boxing_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(BoxingOp);$/;"	p	class:oneflow::final	access:public	signature:(BoxingOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/clone_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CloneOp);$/;"	p	class:oneflow::final	access:public	signature:(CloneOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/concat_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConcatOp);$/;"	p	class:oneflow::final	access:public	signature:(ConcatOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/convolution_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ConvolutionOp);$/;"	p	class:oneflow::final	access:public	signature:(ConvolutionOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/copy_comm_net_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyCommNetOp);$/;"	p	class:oneflow::final	access:public	signature:(CopyCommNetOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/copy_hd_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(CopyHdOp);$/;"	p	class:oneflow::final	access:public	signature:(CopyHdOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/data_loader_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(DataLoaderOp);$/;"	p	class:oneflow::final	access:public	signature:(DataLoaderOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/innerproduct_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(InnerProductOp);$/;"	p	class:oneflow::final	access:public	signature:(InnerProductOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/loss_print_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(LossPrintOp);$/;"	p	class:oneflow::final	access:public	signature:(LossPrintOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/model_save_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ModelSaveOp);$/;"	p	class:oneflow::final	access:public	signature:(ModelSaveOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/momentum_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(MomentumModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(MomentumModelUpdateOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/multinomial_logistic_loss_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(MultinomialLogisticLossOp);$/;"	p	class:oneflow::final	access:public	signature:(MultinomialLogisticLossOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/normal_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(NormalModelUpdateOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/pooling_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(PoolingOp);$/;"	p	class:oneflow::final	access:public	signature:(PoolingOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/print_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(PrintOp);$/;"	p	class:oneflow::final	access:public	signature:(PrintOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/relu_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(ReluOp);$/;"	p	class:oneflow::final	access:public	signature:(ReluOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/rmsprop_model_update_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(RMSPropModelUpdateOp);$/;"	p	class:oneflow::final	access:public	signature:(RMSPropModelUpdateOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/softmax_loss_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxLossOp);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxLossOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	operator/softmax_op.h	/^  OF_DISALLOW_COPY_AND_MOVE(SoftmaxOp);$/;"	p	class:oneflow::final	access:public	signature:(SoftmaxOp)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	persistence/cyclic_persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(CyclicPersistentInStream);$/;"	p	class:oneflow::final	access:public	signature:(CyclicPersistentInStream)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	persistence/normal_persistent_in_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(NormalPersistentInStream);$/;"	p	class:oneflow::final	access:public	signature:(NormalPersistentInStream)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	persistence/persistent_out_stream.h	/^  OF_DISALLOW_COPY_AND_MOVE(PersistentOutStream);$/;"	p	class:oneflow::final	access:public	signature:(PersistentOutStream)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	persistence/snapshot.h	/^  OF_DISALLOW_COPY_AND_MOVE(Snapshot);$/;"	p	class:oneflow::final	access:public	signature:(Snapshot)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	register/blob.h	/^  OF_DISALLOW_COPY_AND_MOVE(Blob);$/;"	p	class:oneflow::final	access:public	signature:(Blob)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	register/register.h	/^  OF_DISALLOW_COPY_AND_MOVE(Regst);$/;"	p	class:oneflow::final	access:public	signature:(Regst)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	register/register_desc.h	/^  OF_DISALLOW_COPY_AND_MOVE(RegstDesc);$/;"	p	class:oneflow::final	access:public	signature:(RegstDesc)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	register/register_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(RegstMgr);$/;"	p	class:oneflow::final	access:public	signature:(RegstMgr)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	thread/cpu_thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(CpuThread);$/;"	p	class:oneflow::final	access:public	signature:(CpuThread)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	thread/gpu_thread.h	/^  OF_DISALLOW_COPY_AND_MOVE(GpuThread);$/;"	p	class:oneflow::final	access:public	signature:(GpuThread)
oneflow::final::OF_DISALLOW_COPY_AND_MOVE	thread/thread_manager.h	/^  OF_DISALLOW_COPY_AND_MOVE(ThreadMgr);$/;"	p	class:oneflow::final	access:public	signature:(ThreadMgr)
oneflow::final::OF_PP_FOR_EACH_TUPLE	comm_network/epoll/socket_read_helper.h	/^  OF_PP_FOR_EACH_TUPLE(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ)
oneflow::final::OF_PP_FOR_EACH_TUPLE	comm_network/epoll/socket_write_helper.h	/^  OF_PP_FOR_EACH_TUPLE(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(MAKE_ENTRY, SOCKET_MSG_TYPE_SEQ)
oneflow::final::OF_PP_FOR_EACH_TUPLE	control/ctrl_server.h	/^  OF_PP_FOR_EACH_TUPLE(DECLARE_CTRL_METHOD_HANDLE, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final	access:private	signature:(DECLARE_CTRL_METHOD_HANDLE, CTRL_METHOD_SEQ)
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Backward)(Loss))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Forward)(Source))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (LossAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (MdDiffAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE($/;"	p	class:oneflow::final	access:public	signature:( OVERRIDE_FROM_METHOD, (BldBoxingOpConfMthd GetMthdForBldBoxingOpConf), (Source)(Forward)(Loss))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Backward))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Backward)(Loss)(MdUpdt))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Source)(MdUpdt))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Forward)(Source))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Loss))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (LossAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (MdDiffAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (MdUpdt))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (BldSubTskGphMthd GetMthdForBldSubTskGph), (Source)(Forward)(Loss))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Backward)(Loss))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Forward)(Source))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (LossAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (MdDiffAcc))
oneflow::final::OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE	graph/chain_node.h	/^  OF_PP_SEQ_PRODUCT_FOR_EACH_TUPLE(OVERRIDE_FROM_METHOD,$/;"	p	class:oneflow::final	access:public	signature:(OVERRIDE_FROM_METHOD, (std::vector<std::string> FindLbns), (Source)(Forward)(Loss))
oneflow::final::OF_SINGLETON	actor/act_event_logger.h	/^  OF_SINGLETON(ActEventLogger);$/;"	p	class:oneflow::final	access:public	signature:(ActEventLogger)
oneflow::final::OF_SINGLETON	actor/actor_message_bus.h	/^  OF_SINGLETON(ActorMsgBus);$/;"	p	class:oneflow::final	access:public	signature:(ActorMsgBus)
oneflow::final::OF_SINGLETON	control/ctrl_client.h	/^  OF_SINGLETON(CtrlClient);$/;"	p	class:oneflow::final	access:public	signature:(CtrlClient)
oneflow::final::OF_SINGLETON	graph/logical_graph.h	/^  OF_SINGLETON(LogicalGraph);$/;"	p	class:oneflow::final	access:public	signature:(LogicalGraph)
oneflow::final::OF_SINGLETON	job/compiler.h	/^  OF_SINGLETON(Compiler);$/;"	p	class:oneflow::final	access:public	signature:(Compiler)
oneflow::final::OF_SINGLETON	job/id_manager.h	/^  OF_SINGLETON(IDMgr);$/;"	p	class:oneflow::final	access:public	signature:(IDMgr)
oneflow::final::OF_SINGLETON	job/improver.h	/^  OF_SINGLETON(Improver);$/;"	p	class:oneflow::final	access:public	signature:(Improver)
oneflow::final::OF_SINGLETON	job/job_desc.h	/^  OF_SINGLETON(JobDesc);$/;"	p	class:oneflow::final	access:public	signature:(JobDesc)
oneflow::final::OF_SINGLETON	job/machine_context.h	/^  OF_SINGLETON(MachineCtx);$/;"	p	class:oneflow::final	access:public	signature:(MachineCtx)
oneflow::final::OF_SINGLETON	job/oneflow.cpp	/^  OF_SINGLETON(Oneflow);$/;"	p	class:oneflow::final	file:	access:public	signature:(Oneflow)
oneflow::final::OF_SINGLETON	job/runtime.h	/^  OF_SINGLETON(Runtime);$/;"	p	class:oneflow::final	access:public	signature:(Runtime)
oneflow::final::OF_SINGLETON	job/runtime_context.h	/^  OF_SINGLETON(RuntimeCtx);$/;"	p	class:oneflow::final	access:public	signature:(RuntimeCtx)
oneflow::final::OF_SINGLETON	memory/memory_allocator.h	/^  OF_SINGLETON(MemoryAllocator);$/;"	p	class:oneflow::final	access:public	signature:(MemoryAllocator)
oneflow::final::OF_SINGLETON	register/register_manager.h	/^  OF_SINGLETON(RegstMgr);$/;"	p	class:oneflow::final	access:public	signature:(RegstMgr)
oneflow::final::OF_SINGLETON	thread/thread_manager.h	/^  OF_SINGLETON(ThreadMgr);$/;"	p	class:oneflow::final	access:public	signature:(ThreadMgr)
oneflow::final::OVERRIDE_BLD_BOXING_OP_METHOD	graph/boxing_task_node.h	/^  OVERRIDE_BLD_BOXING_OP_METHOD(DataConcatAndDataSplit);$/;"	p	class:oneflow::final	access:public	signature:(DataConcatAndDataSplit)
oneflow::final::OVERRIDE_PURE_VIRTUAL_METHOD	graph/chain_node.h	/^  OVERRIDE_PURE_VIRTUAL_METHOD();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::OnePartDone	persistence/snapshot.h	/^  void OnePartDone(const std::string& lbn, int32_t part_id, int32_t part_num);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, int32_t part_id, int32_t part_num)
oneflow::final::Oneflow	job/oneflow.cpp	/^  Oneflow(const JobConf& job_conf, const std::string& this_mchn_name);$/;"	p	class:oneflow::final	file:	access:private	signature:(const JobConf& job_conf, const std::string& this_mchn_name)
oneflow::final::OutBoxingTaskNode	graph/boxing_task_node.h	/^  OutBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ParallelPieceSize	job/job_desc.h	/^  int32_t ParallelPieceSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::PersistenceWorkerNum	job/job_desc.h	/^  int32_t PersistenceWorkerNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::PersistentOutStream	persistence/persistent_out_stream.h	/^  PersistentOutStream() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PersistentOutStream	persistence/persistent_out_stream.h	/^  PersistentOutStream(fs::FileSystem*, const std::string& file_path);$/;"	p	class:oneflow::final	access:public	signature:(fs::FileSystem*, const std::string& file_path)
oneflow::final::PieceNumOfPrintLoss	job/job_desc.h	/^  int32_t PieceNumOfPrintLoss() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::PieceStatus	register/blob.h	/^  PieceStatus() : piece_id_(0), col_id_(0), max_col_id_(-1) {}$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::PieceStatus	register/blob.h	/^  PieceStatus(const PieceStatus&) = default;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus&)
oneflow::final::PoolingBackward	kernel/pooling_kernel.cpp	/^  static void PoolingBackward(const KernelCtx& ctx, const Blob* out_diff_blob,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const Blob* out_diff_blob, const Blob* idx_blob, Blob* in_diff_blob, const PoolingOpConf& pooling_conf)
oneflow::final::PoolingForward	kernel/pooling_kernel.cpp	/^  static void PoolingForward(const KernelCtx& ctx, const Blob* in_blob,$/;"	f	class:oneflow::final	access:public	signature:(const KernelCtx& ctx, const Blob* in_blob, Blob* out_blob, Blob* idx_blob, const PoolingOpConf& pooling_conf)
oneflow::final::PoolingKernel	kernel/pooling_kernel.h	/^  PoolingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PoolingKernelUtil	kernel/pooling_kernel.cpp	/^  PoolingKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::PoolingOp	operator/pooling_op.h	/^  PoolingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PrintActEventToLogDir	actor/act_event_logger.h	/^  void PrintActEventToLogDir(const ActEvent&);$/;"	p	class:oneflow::final	access:public	signature:(const ActEvent&)
oneflow::final::PrintChainNode	graph/chain_node.h	/^  PrintChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PrintCompActor	actor/print_compute_actor.h	/^  PrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PrintCompTaskNode	graph/print_compute_task_node.h	/^  PrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PrintKernel	kernel/print_kernel.h	/^  PrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::PrintOp	operator/print_op.h	/^  PrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ProcessQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.h	/^  void ProcessQueueNotEmptyEvent();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k, PbMessage* msg);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, PbMessage* msg)
oneflow::final::PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k, std::string* v);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::string* v)
oneflow::final::PullKV	control/ctrl_client.h	/^  void PullKV(const std::string& k,$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::function<void(const std::string&)> VGetter)
oneflow::final::PushActEvent	control/ctrl_client.h	/^  void PushActEvent(const ActEvent&);$/;"	p	class:oneflow::final	access:public	signature:(const ActEvent&)
oneflow::final::PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, const PbMessage& msg);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, const PbMessage& msg)
oneflow::final::PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, const std::string& v);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, const std::string& v)
oneflow::final::PushKV	control/ctrl_client.h	/^  void PushKV(const std::string& k, std::function<void(std::string*)> VSetter);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& k, std::function<void(std::string*)> VSetter)
oneflow::final::RMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel.h	/^  RMSPropMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::RMSPropModelUpdateOp	operator/rmsprop_model_update_op.h	/^  RMSPropModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Range	common/range.h	/^  Range() : Range(0, 0) {}$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::Range	common/range.h	/^  Range(int64_t begin, int64_t end) : begin_(begin), end_(end) {}$/;"	f	class:oneflow::final	access:public	signature:(int64_t begin, int64_t end)
oneflow::final::ReadContext	comm_network/epoll/epoll_comm_network.h	/^  struct ReadContext {$/;"	s	class:oneflow::final	access:private
oneflow::final::ReadContext::cbl	comm_network/epoll/epoll_comm_network.h	/^    CallBackList cbl;$/;"	m	struct:oneflow::final::ReadContext	access:public
oneflow::final::ReadContext::done_cnt	comm_network/epoll/epoll_comm_network.h	/^    int8_t done_cnt;$/;"	m	struct:oneflow::final::ReadContext	access:public
oneflow::final::ReadContext::done_cnt_mtx	comm_network/epoll/epoll_comm_network.h	/^    std::mutex done_cnt_mtx;$/;"	m	struct:oneflow::final::ReadContext	access:public
oneflow::final::ReadDone	comm_network/epoll/epoll_comm_network.h	/^  void ReadDone(void* read_done_id);$/;"	p	class:oneflow::final	access:public	signature:(void* read_done_id)
oneflow::final::ReadUntilSocketNotReadable	comm_network/epoll/socket_read_helper.h	/^  void ReadUntilSocketNotReadable();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::Receive	common/channel.h	/^  int Receive(T* item);$/;"	p	class:oneflow::final	access:public	signature:(T* item)
oneflow::final::Regst	register/register.h	/^  Regst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::RegstCtx	actor/copy_comm_net_actor.h	/^  struct RegstCtx {$/;"	s	class:oneflow::final	access:private
oneflow::final::RegstCtx::comm_net_token	actor/copy_comm_net_actor.h	/^    const void* comm_net_token;$/;"	m	struct:oneflow::final::RegstCtx	access:public
oneflow::final::RegstCtx::producer	actor/copy_comm_net_actor.h	/^    int64_t producer;$/;"	m	struct:oneflow::final::RegstCtx	access:public
oneflow::final::RegstCtx::regst_raw_ptr	actor/copy_comm_net_actor.h	/^    Regst* regst_raw_ptr;$/;"	m	struct:oneflow::final::RegstCtx	access:public
oneflow::final::RegstDesc	register/register_desc.h	/^  RegstDesc();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::RegstMgr	register/register.h	/^  friend class RegstMgr;$/;"	x
oneflow::final::RegstMgr	register/register_manager.h	/^  RegstMgr() = default;$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::RegstWrapper	actor/actor_message.h	/^  struct RegstWrapper {$/;"	s	class:oneflow::final	access:private
oneflow::final::RegstWrapper::comm_net_token	actor/actor_message.h	/^    const void* comm_net_token;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
oneflow::final::RegstWrapper::piece_id	actor/actor_message.h	/^    int64_t piece_id;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
oneflow::final::RegstWrapper::regst	actor/actor_message.h	/^    Regst* regst;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
oneflow::final::ReluKernel	kernel/relu_kernel.h	/^  ReluKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ReluKernelUtil	kernel/relu_kernel.cpp	/^  ReluKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::ReluKernelUtil	kernel/relu_kernel.h	/^  ReluKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::ReluOp	operator/relu_op.h	/^  ReluOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Runtime	job/runtime.h	/^  Runtime() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Runtime	job/runtime.h	/^  Runtime(const Plan& plan, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(const Plan& plan, bool is_experiment_phase)
oneflow::final::RuntimeCtx	job/runtime_context.h	/^  RuntimeCtx() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::RuntimeCtx	job/runtime_context.h	/^  RuntimeCtx(int64_t total_piece_num, bool is_experiment_phase);$/;"	p	class:oneflow::final	access:private	signature:(int64_t total_piece_num, bool is_experiment_phase)
oneflow::final::Scal	kernel/kernel_util.cpp	/^  static void Scal(DeviceCtx* ctx, const int n, const T alpha, T* x,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, T* x, const int incx)
oneflow::final::Scal	kernel/kernel_util.h	/^  static void Scal(DeviceCtx* ctx, const int n, const T alpha, T* x,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int n, const T alpha, T* x, const int incx)
oneflow::final::Send	common/channel.h	/^  int Send(const T& item);$/;"	p	class:oneflow::final	access:public	signature:(const T& item)
oneflow::final::SendMsg	actor/actor_message_bus.h	/^  void SendMsg(const ActorMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(const ActorMsg& msg)
oneflow::final::SendQueueNotEmptyEvent	comm_network/epoll/socket_write_helper.h	/^  void SendQueueNotEmptyEvent();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::SendSocketMsg	comm_network/epoll/epoll_comm_network.h	/^  void SendSocketMsg(int64_t dst_machine_id, const SocketMsg& msg);$/;"	p	class:oneflow::final	access:public	signature:(int64_t dst_machine_id, const SocketMsg& msg)
oneflow::final::Serialize	actor/actor_message.h	/^  void Serialize(StreamT& out_stream) const {$/;"	f	class:oneflow::final	access:public	signature:(StreamT& out_stream) const
oneflow::final::SerializeWithTextFormat	common/shape.h	/^  void SerializeWithTextFormat(StreamT& out_stream) const;$/;"	p	class:oneflow::final	access:public	signature:(StreamT& out_stream) const
oneflow::final::Set	common/shape.h	/^  void Set(int64_t index, int64_t val);$/;"	p	class:oneflow::final	access:public	signature:(int64_t index, int64_t val)
oneflow::final::SetProducerOp	graph/logical_graph.h	/^  void SetProducerOp(const std::string& lbn, std::weak_ptr<const Operator> op);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& lbn, std::weak_ptr<const Operator> op)
oneflow::final::SetStatusWhenMsgBodyDone	comm_network/epoll/socket_read_helper.h	/^  void SetStatusWhenMsgBodyDone();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::SetStatusWhenMsgBodyDone	comm_network/epoll/socket_write_helper.h	/^  void SetStatusWhenMsgBodyDone();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::SetStatusWhenMsgHeadDone	comm_network/epoll/socket_read_helper.h	/^  void SetStatusWhenMsgHeadDone();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::SetStatusWhenMsgHeadDone	comm_network/epoll/socket_write_helper.h	/^  void SetStatusWhenMsgHeadDone();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::Shape	common/shape.h	/^  Shape() : elem_cnt_(0) {}$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::Shape	common/shape.h	/^  explicit Shape(const ShapeProto& shape_proto);$/;"	p	class:oneflow::final	access:public	signature:(const ShapeProto& shape_proto)
oneflow::final::Shape	common/shape.h	/^  explicit Shape(const std::vector<int64_t>& dim_vec);$/;"	p	class:oneflow::final	access:public	signature:(const std::vector<int64_t>& dim_vec)
oneflow::final::SinglePieceSize	job/job_desc.h	/^  int32_t SinglePieceSize() const { return job_conf_.single_piece_size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::Singleton	comm_network/epoll/epoll_comm_network.h	/^  static EpollCommNet* Singleton() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::SizeOfOneDataId	job/job_desc.h	/^  size_t SizeOfOneDataId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::Snapshot	persistence/snapshot.h	/^  Snapshot() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Snapshot	persistence/snapshot.h	/^  Snapshot(const std::string& snapshot_root_path);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& snapshot_root_path)
oneflow::final::SocketHelper	comm_network/epoll/socket_helper.h	/^  SocketHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SocketHelper	comm_network/epoll/socket_helper.h	/^  SocketHelper(int sockfd, IOEventPoller* poller);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd, IOEventPoller* poller)
oneflow::final::SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  SocketReadHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  SocketReadHelper(int sockfd);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd)
oneflow::final::SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  SocketWriteHelper() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  SocketWriteHelper(int sockfd, IOEventPoller* poller);$/;"	p	class:oneflow::final	access:public	signature:(int sockfd, IOEventPoller* poller)
oneflow::final::SoftmaxKernel	kernel/softmax_kernel.h	/^  SoftmaxKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SoftmaxKernelUtil	kernel/softmax_kernel.cpp	/^  SoftmaxKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::SoftmaxKernelUtil	kernel/softmax_kernel.h	/^  SoftmaxKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SoftmaxLossKernel	kernel/softmax_loss_kernel.h	/^  SoftmaxLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SoftmaxLossKernelUtil	kernel/softmax_loss_kernel.cpp	/^  SoftmaxLossKernelUtil() = delete;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::SoftmaxLossKernelUtil	kernel/softmax_loss_kernel.h	/^  SoftmaxLossKernelUtil() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SoftmaxLossOp	operator/softmax_loss_op.h	/^  SoftmaxLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SoftmaxOp	operator/softmax_op.h	/^  SoftmaxOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SourceCompActor	actor/source_compute_actor.h	/^  SourceCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SourceCompTaskNode	graph/source_compute_task_node.h	/^  SourceCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::SrcMachineId	actor/actor_message.h	/^  int64_t SrcMachineId() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::Staleness	job/job_desc.h	/^  int32_t Staleness() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::Start	comm_network/epoll/io_event_poller.h	/^  void Start();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Status	control/ctrl_call.h	/^  enum class Status { kBeforeHandleRequest, kBeforeDelete };$/;"	c	class:oneflow::final	access:private
oneflow::final::Status::kBeforeHandleRequest	control/ctrl_call.h	/^  enum class Status { kBeforeHandleRequest, kBeforeDelete };$/;"	m	class:oneflow::final::Status	access:private
oneflow::final::Stop	comm_network/epoll/io_event_poller.h	/^  void Stop();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::Sub	kernel/softmax_kernel.cpp	/^  static void Sub(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix, const T* vector)
oneflow::final::Sub	kernel/softmax_kernel.h	/^  static void Sub(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const int64_t w, T* matrix, const T* vector)
oneflow::final::Sum	kernel/kernel_util.cpp	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr) {$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr)
oneflow::final::Sum	kernel/kernel_util.cpp	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr,$/;"	f	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr, T* temp_storage, size_t temp_storage_bytes)
oneflow::final::Sum	kernel/kernel_util.h	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr);$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr)
oneflow::final::Sum	kernel/kernel_util.h	/^  static void Sum(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr,$/;"	p	struct:oneflow::final	access:public	signature:(DeviceCtx* ctx, const int64_t n, const T* x, T* sum_ptr, T* temp_storage, size_t temp_storage_bytes)
oneflow::final::SwitchToHandlerInitModelTmpOrNormal	actor/forward_compute_actor.h	/^  void SwitchToHandlerInitModelTmpOrNormal();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::SwitchToMsgHeadReadHandle	comm_network/epoll/socket_read_helper.h	/^  void SwitchToMsgHeadReadHandle();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::TaskEdge	graph/task_node.h	/^  TaskEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::TaskGraph	graph/task_graph.h	/^  TaskGraph() = delete;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::TaskGraph	graph/task_graph.h	/^  TaskGraph(std::unique_ptr<const ChainGraph>&& chain_gph);$/;"	p	class:oneflow::final	access:public	signature:(std::unique_ptr<const ChainGraph>&& chain_gph)
oneflow::final::ThrdId4ActorId	job/id_manager.h	/^  int64_t ThrdId4ActorId(int64_t actor_id) const;$/;"	p	class:oneflow::final	access:public	signature:(int64_t actor_id) const
oneflow::final::ThreadMgr	thread/thread_manager.h	/^  ThreadMgr();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::ToExecSequence	graph/exec_graph.h	/^  void ToExecSequence(bool is_forward, const ParallelContext*,$/;"	p	class:oneflow::final	access:public	signature:(bool is_forward, const ParallelContext*, ExecSequence*) const
oneflow::final::ToProto	common/shape.h	/^  void ToProto(ShapeProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(ShapeProto*) const
oneflow::final::ToProto	graph/exec_graph.h	/^  void ToProto(bool is_forward, const ParallelContext*, ExecNodeProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(bool is_forward, const ParallelContext*, ExecNodeProto*) const
oneflow::final::ToProto	register/blob_desc.h	/^  void ToProto(BlobDescProto* proto) const {$/;"	f	class:oneflow::final	access:public	signature:(BlobDescProto* proto) const
oneflow::final::ToProto	register/register_desc.h	/^  void ToProto(RegstDescProto*) const;$/;"	p	class:oneflow::final	access:public	signature:(RegstDescProto*) const
oneflow::final::TotalBatchNum	job/job_desc.h	/^  int64_t TotalBatchNum() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::TotalByteSize	register/blob.h	/^  size_t TotalByteSize() const { return blob_desc_->TotalByteSize(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::TotalByteSize	register/blob_desc.h	/^  size_t TotalByteSize() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::TotalMachineNum	job/job_desc.h	/^  int64_t TotalMachineNum() const { return resource_.machine().size(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::TryAsyncReturnModelRegst	actor/forward_compute_actor.h	/^  void TryAsyncReturnModelRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::TryAsyncReturnModelTmpRegst	actor/forward_compute_actor.h	/^  void TryAsyncReturnModelTmpRegst();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::TryLock	control/ctrl_client.h	/^  TryLockResult TryLock(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
oneflow::final::UpdateElemCnt	common/shape.h	/^  void UpdateElemCnt();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::UpdateModel	kernel/rmsprop_model_update_kernel.cpp	/^  static void UpdateModel(DeviceCtx*, const int64_t n, const T alpha,$/;"	f	class:oneflow::final	access:public	signature:(DeviceCtx*, const int64_t n, const T alpha, const T learning_rate, const T decay_rate, const T epsilon, const T* pre_model, T* model, T* mean_square, const T* model_diff_acc)
oneflow::final::UpdateModel	kernel/rmsprop_model_update_kernel.h	/^  static void UpdateModel(DeviceCtx*, const int64_t n, const T alpha,$/;"	p	class:oneflow::final	access:public	signature:(DeviceCtx*, const int64_t n, const T alpha, const T learning_rate, const T decay_rate, const T epsilon, const T* pre_model, T* model, T* mean_square, const T* model_diff_acc)
oneflow::final::UpdateModelRegstPtr	actor/forward_compute_actor.h	/^  void UpdateModelRegstPtr(Regst* regst);$/;"	p	class:oneflow::final	access:private	signature:(Regst* regst)
oneflow::final::WaitUntilCntEqualZero	common/blocking_counter.h	/^  void WaitUntilCntEqualZero() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::WaitUntilCntEqualZero	job/runtime_context.h	/^  void WaitUntilCntEqualZero(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
oneflow::final::WaitUntilDone	control/ctrl_client.h	/^  void WaitUntilDone(const std::string& name);$/;"	p	class:oneflow::final	access:public	signature:(const std::string& name)
oneflow::final::Write	persistence/persistent_out_stream.h	/^  PersistentOutStream& Write(const char* s, size_t n);$/;"	p	class:oneflow::final	access:public	signature:(const char* s, size_t n)
oneflow::final::WriteUntilMsgQueueEmptyOrSocketNotWriteable	comm_network/epoll/socket_write_helper.h	/^  void WriteUntilMsgQueueEmptyOrSocketNotWriteable();$/;"	p	class:oneflow::final	access:private	signature:()
oneflow::final::__anon42::actor_cmd_	actor/actor_message.h	/^    ActorCmd actor_cmd_;$/;"	m	union:oneflow::final::__anon42	access:public
oneflow::final::__anon42::eord_regst_desc_id_	actor/actor_message.h	/^    int64_t eord_regst_desc_id_;$/;"	m	union:oneflow::final::__anon42	access:public
oneflow::final::__anon42::regst_wrapper_	actor/actor_message.h	/^    RegstWrapper regst_wrapper_;$/;"	m	union:oneflow::final::__anon42	access:public
oneflow::final::act_event_bin_filename_	actor/act_event_logger.h	/^  static const std::string act_event_bin_filename_;$/;"	m	class:oneflow::final	access:public
oneflow::final::act_event_txt_filename_	actor/act_event_logger.h	/^  static const std::string act_event_txt_filename_;$/;"	m	class:oneflow::final	access:public
oneflow::final::activation_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t activation_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::actor_cmd	actor/actor_message.h	/^  ActorCmd actor_cmd() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::actor_read_id_	actor/copy_comm_net_actor.cpp	/^  void* actor_read_id_;$/;"	m	class:oneflow::final	file:	access:private
oneflow::final::actor_read_id_	actor/copy_comm_net_actor.h	/^  void* actor_read_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::barrier_calls_	control/ctrl_server.h	/^      barrier_calls_;$/;"	m	class:oneflow::final	access:private
oneflow::final::base_begin_idx_	common/balanced_splitter.h	/^  int64_t base_begin_idx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::base_part_size_	common/balanced_splitter.h	/^  int64_t base_part_size_;$/;"	m	class:oneflow::final	access:private
oneflow::final::begin	common/range.h	/^  int64_t begin() const { return begin_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::begin_	common/range.h	/^  int64_t begin_;$/;"	m	class:oneflow::final	access:private
oneflow::final::bin_out_stream_	actor/act_event_logger.h	/^  PersistentOutStream bin_out_stream_;$/;"	m	class:oneflow::final	access:private
oneflow::final::blob_desc	register/blob.h	/^  const BlobDesc& blob_desc() const { return *blob_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::blob_desc_	register/blob.h	/^  const BlobDesc* blob_desc_;$/;"	m	class:oneflow::final	access:private
oneflow::final::blob_desc_ptr	register/blob.h	/^  const BlobDesc* blob_desc_ptr() const { return blob_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::bn_in_op2regst_	graph/exec_graph.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> bn_in_op2regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::boxing_thrd_offset_	job/id_manager.h	/^  std::vector<int64_t> boxing_thrd_offset_;$/;"	m	class:oneflow::final	access:private
oneflow::final::break_epoll_loop_fd_	comm_network/epoll/io_event_poller.h	/^  int break_epoll_loop_fd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::bw_node	graph/chain_node.h	/^  BackwardChainNode* bw_node() const { return bw_node_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::bw_node_	graph/chain_node.h	/^  BackwardChainNode* bw_node_;$/;"	m	class:oneflow::final	access:private
oneflow::final::chain_gph_	graph/task_graph.h	/^  std::unique_ptr<const ChainGraph> chain_gph_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cnt_val_	common/blocking_counter.h	/^  int64_t cnt_val_;$/;"	m	class:oneflow::final	access:private
oneflow::final::col_id	register/blob.h	/^  int64_t col_id() const { return col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::col_id_	register/blob.h	/^  int64_t col_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::comm_net_device_ctx_	actor/copy_comm_net_actor.h	/^  CommNetDeviceCtx* comm_net_device_ctx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::comm_net_token	actor/actor_message.h	/^  const void* comm_net_token() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::comm_net_token	register/blob.h	/^  const void* comm_net_token() const { return comm_net_token_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::comm_net_token_	register/blob.h	/^  const void* comm_net_token_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cond_	common/blocking_counter.h	/^  std::condition_variable cond_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cond_	common/channel.h	/^  std::condition_variable cond_;$/;"	m	class:oneflow::final	access:private
oneflow::final::consumers	register/register_desc.h	/^  const HashSet<const TaskNode*>& consumers() const { return consumers_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::consumers_	register/register_desc.h	/^  HashSet<const TaskNode*> consumers_;$/;"	m	class:oneflow::final	access:private
oneflow::final::consumers_actor_id	register/register.h	/^  const std::vector<int64_t>& consumers_actor_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::copy_type	graph/copy_task_node.h	/^  CopyHdOpConf::Type copy_type() const { return copy_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::copy_type_	graph/copy_task_node.h	/^  CopyHdOpConf::Type copy_type_;$/;"	m	class:oneflow::final	access:private
oneflow::final::counters_	job/runtime_context.h	/^  HashMap<std::string, std::unique_ptr<BlockingCounter>> counters_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cp_kind_	kernel/copy_hd_kernel.h	/^  cudaMemcpyKind cp_kind_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cq_	control/ctrl_server.h	/^  std::unique_ptr<grpc::ServerCompletionQueue> cq_;$/;"	m	class:oneflow::final	access:private
oneflow::final::ctrl_server_	job/oneflow.cpp	/^  std::unique_ptr<CtrlServer> ctrl_server_;$/;"	m	class:oneflow::final	file:	access:private
oneflow::final::cublas_handle	device/cuda_stream_handle.h	/^  const cublasHandle_t* cublas_handle();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::cublas_handle_	device/cuda_stream_handle.h	/^  std::unique_ptr<cublasHandle_t> cublas_handle_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cuda_stream	device/cuda_stream_handle.h	/^  const cudaStream_t* cuda_stream();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::cuda_stream_	device/cuda_stream_handle.h	/^  std::unique_ptr<cudaStream_t> cuda_stream_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cudnn_handle	device/cuda_stream_handle.h	/^  const cudnnHandle_t* cudnn_handle();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::cudnn_handle_	device/cuda_stream_handle.h	/^  std::unique_ptr<cudnnHandle_t> cudnn_handle_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cur_msg_	comm_network/epoll/socket_read_helper.h	/^  SocketMsg cur_msg_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cur_msg_	comm_network/epoll/socket_write_helper.h	/^  SocketMsg cur_msg_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cur_msg_queue_	comm_network/epoll/socket_write_helper.h	/^  std::queue<SocketMsg>* cur_msg_queue_;$/;"	m	class:oneflow::final	access:private
oneflow::final::cur_read_handle_	comm_network/epoll/socket_read_helper.h	/^  bool (SocketReadHelper::*cur_read_handle_)();$/;"	m	class:oneflow::final	access:private
oneflow::final::cur_write_handle_	comm_network/epoll/socket_write_helper.h	/^  bool (SocketWriteHelper::*cur_write_handle_)();$/;"	m	class:oneflow::final	access:private
oneflow::final::data_id	register/blob.h	/^  const char* data_id() const { return data_id(0); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::data_id	register/blob.h	/^  const char* data_id(int32_t no) const;$/;"	p	class:oneflow::final	access:public	signature:(int32_t no) const
oneflow::final::data_id_ptr_	register/blob.h	/^  char* data_id_ptr_;$/;"	m	class:oneflow::final	access:private
oneflow::final::data_tmp_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t data_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::data_type	register/blob.h	/^  DataType data_type() const { return blob_desc_->data_type(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::data_type	register/blob_desc.h	/^  DataType data_type() const { return data_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::data_type_	register/blob_desc.h	/^  DataType data_type_;$/;"	m	class:oneflow::final	access:private
oneflow::final::deleter_	register/register.h	/^  std::function<void()> deleter_;$/;"	m	class:oneflow::final	access:private
oneflow::final::device_num_per_machine_	job/id_manager.h	/^  int64_t device_num_per_machine_;$/;"	m	class:oneflow::final	access:private
oneflow::final::dim_vec	common/shape.h	/^  const std::vector<int64_t>& dim_vec() const { return dim_vec_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::dim_vec_	common/shape.h	/^  std::vector<int64_t> dim_vec_;$/;"	m	class:oneflow::final	access:private
oneflow::final::dlnet_conf	job/job_desc.h	/^  const DLNetConf& dlnet_conf() const { return dlnet_conf_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::dlnet_conf_	job/job_desc.h	/^  DLNetConf dlnet_conf_;$/;"	m	class:oneflow::final	access:private
oneflow::final::done_names_	control/ctrl_client.h	/^  HashSet<std::string> done_names_;$/;"	m	class:oneflow::final	access:private
oneflow::final::dptr	register/blob.h	/^  const T* dptr() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::dptr_	register/blob.h	/^  void* dptr_;$/;"	m	class:oneflow::final	access:private
oneflow::final::dst_actor_id	actor/actor_message.h	/^  int64_t dst_actor_id() const { return dst_actor_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::dst_actor_id_	actor/actor_message.h	/^  int64_t dst_actor_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::dst_bn	graph/exec_graph.h	/^  const std::string& dst_bn() const { return dst_bn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::dst_bn_	graph/exec_graph.h	/^  std::string dst_bn_;$/;"	m	class:oneflow::final	access:private
oneflow::final::elem_cnt	common/shape.h	/^  int64_t elem_cnt() const { return elem_cnt_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::elem_cnt_	common/shape.h	/^  int64_t elem_cnt_;$/;"	m	class:oneflow::final	access:private
oneflow::final::end	common/range.h	/^  int64_t end() const { return end_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::end_	common/range.h	/^  int64_t end_;$/;"	m	class:oneflow::final	access:private
oneflow::final::eord_regst_desc_id	actor/actor_message.h	/^  int64_t eord_regst_desc_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::ep_events_	comm_network/epoll/io_event_poller.h	/^  epoll_event* ep_events_;$/;"	m	class:oneflow::final	access:private
oneflow::final::epfd_	comm_network/epoll/io_event_poller.h	/^  int epfd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::file_	persistence/persistent_out_stream.h	/^  std::unique_ptr<fs::WritableFile> file_;$/;"	m	class:oneflow::final	access:private
oneflow::final::final	control/ctrl_service.h	/^  class AsyncService final : public grpc::Service {$/;"	c	class:oneflow::final	inherits:grpc::Service	access:public
oneflow::final::final	control/ctrl_service.h	/^  class Stub final {$/;"	c	class:oneflow::final	access:public
oneflow::final::final::AsyncService	control/ctrl_service.h	/^    AsyncService();$/;"	p	class:oneflow::final::final	access:public	signature:()
oneflow::final::final::OF_PP_FOR_EACH_TUPLE	control/ctrl_service.h	/^    OF_PP_FOR_EACH_TUPLE(DECLARE_RPC_METHOD, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final::final	access:private	signature:(DECLARE_RPC_METHOD, CTRL_METHOD_SEQ)
oneflow::final::final::OF_PP_FOR_EACH_TUPLE	control/ctrl_service.h	/^    OF_PP_FOR_EACH_TUPLE(DECLARE_STUB_METHOD, CTRL_METHOD_SEQ);$/;"	p	class:oneflow::final::final	access:public	signature:(DECLARE_STUB_METHOD, CTRL_METHOD_SEQ)
oneflow::final::final::Stub	control/ctrl_service.h	/^    Stub(std::shared_ptr<grpc::ChannelInterface> channel);$/;"	p	class:oneflow::final::final	access:public	signature:(std::shared_ptr<grpc::ChannelInterface> channel)
oneflow::final::final::channel_	control/ctrl_service.h	/^    std::shared_ptr<grpc::ChannelInterface> channel_;$/;"	m	class:oneflow::final::final	access:private
oneflow::final::final::~AsyncService	control/ctrl_service.h	/^    ~AsyncService() = default;$/;"	p	class:oneflow::final::final	access:public	signature:()
oneflow::final::fw_node	graph/chain_node.h	/^  ForwardChainNode* fw_node() const { return fw_node_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::fw_node_	graph/chain_node.h	/^  ForwardChainNode* fw_node_;$/;"	m	class:oneflow::final	access:private
oneflow::final::grpc_server_	control/ctrl_server.h	/^  std::unique_ptr<grpc::Server> grpc_server_;$/;"	m	class:oneflow::final	access:private
oneflow::final::grpc_service_	control/ctrl_server.h	/^  std::unique_ptr<CtrlService::AsyncService> grpc_service_;$/;"	m	class:oneflow::final	access:private
oneflow::final::has_data_id	register/blob.h	/^  bool has_data_id() const { return blob_desc_->has_data_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::has_data_id	register/blob_desc.h	/^  bool has_data_id() const { return has_data_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::has_data_id_	register/blob_desc.h	/^  bool has_data_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::ibn2lbn_	operator/concat_op.h	/^  HashMap<std::string, std::string> ibn2lbn_;$/;"	m	class:oneflow::final	access:private
oneflow::final::ibn2lbn_	operator/print_op.h	/^  HashMap<std::string, std::string> ibn2lbn_;$/;"	m	class:oneflow::final	access:private
oneflow::final::ibn_0_	kernel/boxing_kernel.h	/^  PbRpf<std::string> ibn_0_;$/;"	m	class:oneflow::final	access:private
oneflow::final::in_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t in_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::in_stream_	kernel/data_loader_kernel.h	/^  std::unique_ptr<PersistentInStream> in_stream_;$/;"	m	class:oneflow::final	access:private
oneflow::final::init_remaining_cnt_	actor/model_update_compute_actor.h	/^  int8_t init_remaining_cnt_;$/;"	m	class:oneflow::final	access:private
oneflow::final::io_handlers_	comm_network/epoll/io_event_poller.h	/^  std::forward_list<IOHandler*> io_handlers_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_eof_	actor/source_compute_actor.h	/^  bool is_eof_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_eord_	actor/boxing_actor.h	/^  bool is_eord_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_experiment_phase	job/runtime_context.h	/^  bool is_experiment_phase() const { return is_experiment_phase_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::is_experiment_phase_	job/runtime_context.h	/^  bool is_experiment_phase_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_finished_in_cur_pid_	actor/rnn_boxing_actor.h	/^  HashMap<int64_t, bool> is_finished_in_cur_pid_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_forward	register/register.h	/^  bool is_forward() const { return is_forward_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::is_forward_	register/register.h	/^  int is_forward_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_in_eord_	actor/copy_hd_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_in_eord_	actor/forward_compute_actor.h	/^  bool is_in_eord_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_locked_	register/register_desc.h	/^  bool is_locked_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_model_diff_acc_eord_	actor/model_update_compute_actor.h	/^  bool is_model_diff_acc_eord_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_out_diff_eord_	actor/backward_compute_actor.h	/^  bool is_out_diff_eord_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_receive_closed_	common/channel.h	/^  bool is_receive_closed_;$/;"	m	class:oneflow::final	access:private
oneflow::final::is_send_closed_	common/channel.h	/^  bool is_send_closed_;$/;"	m	class:oneflow::final	access:private
oneflow::final::job_conf	job/job_desc.h	/^  const JobConf& job_conf() const { return job_conf_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::job_conf_	job/job_desc.h	/^  JobConf job_conf_;$/;"	m	class:oneflow::final	access:private
oneflow::final::kv_	control/ctrl_server.h	/^  HashMap<std::string, std::string> kv_;$/;"	m	class:oneflow::final	access:private
oneflow::final::lbn	graph/exec_graph.h	/^  const std::string& lbn() const { return lbn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::lbn2blob_	register/register.h	/^  HashMap<std::string, std::unique_ptr<Blob>> lbn2blob_;$/;"	m	class:oneflow::final	access:private
oneflow::final::lbn2blob_desc_	register/register_desc.h	/^  HashMap<std::string, std::unique_ptr<BlobDesc>> lbn2blob_desc_;$/;"	m	class:oneflow::final	access:private
oneflow::final::lbn2producer_	graph/logical_graph.h	/^  HashMap<std::string, std::weak_ptr<const Operator>> lbn2producer_;$/;"	m	class:oneflow::final	access:private
oneflow::final::lbn_	graph/exec_graph.h	/^  std::string lbn_;$/;"	m	class:oneflow::final	access:private
oneflow::final::loop_thread_	control/ctrl_server.h	/^  std::thread loop_thread_;$/;"	m	class:oneflow::final	access:private
oneflow::final::machine_id2machine_name_	job/id_manager.h	/^  HashMap<int64_t, std::string> machine_id2machine_name_;$/;"	m	class:oneflow::final	access:private
oneflow::final::machine_id2sockfd_	comm_network/epoll/epoll_comm_network.h	/^  std::vector<int> machine_id2sockfd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::machine_id_bit_num_	job/id_manager.h	/^  static const int64_t machine_id_bit_num_ = 16;$/;"	m	class:oneflow::final	access:private
oneflow::final::machine_name2machine_id_	job/id_manager.h	/^  HashMap<std::string, int64_t> machine_name2machine_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::machine_num_	job/id_manager.h	/^  int32_t machine_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::max_col_id	register/blob.h	/^  int64_t max_col_id() const { return max_col_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::max_col_id_	register/blob.h	/^  int64_t max_col_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::max_event_num_	comm_network/epoll/io_event_poller.h	/^  static const int max_event_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::max_register_num	register/register_desc.h	/^  int32_t max_register_num() const { return max_register_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::max_register_num_	register/register_desc.h	/^  int32_t max_register_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::mem_case_	register/register_desc.h	/^  MemoryCase mem_case_;$/;"	m	class:oneflow::final	access:private
oneflow::final::mem_desc_mtx_	comm_network/epoll/epoll_comm_network.h	/^  std::mutex mem_desc_mtx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::mem_descs_	comm_network/epoll/epoll_comm_network.h	/^  std::list<SocketMemDesc*> mem_descs_;$/;"	m	class:oneflow::final	access:private
oneflow::final::memory_ptr	register/blob.h	/^  const void* memory_ptr() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::min_register_num	register/register_desc.h	/^  int32_t min_register_num() const { return min_register_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::min_register_num_	register/register_desc.h	/^  int32_t min_register_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_regst_	actor/forward_compute_actor.h	/^  Regst* model_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_regst_desc_id_	actor/model_update_compute_actor.h	/^  int64_t model_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_tmp_regst_	actor/forward_compute_actor.h	/^  Regst* model_tmp_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_tmp_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_tmp_regst_desc_id_	actor/forward_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_tmp_regst_desc_id_	actor/model_update_compute_actor.h	/^  int64_t model_tmp_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::model_version_id	register/register.h	/^  int64_t model_version_id() const { return model_version_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::model_version_id_	register/register.h	/^  int64_t model_version_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::msg_type	actor/actor_message.h	/^  ActorMsgType msg_type() const { return msg_type_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::msg_type_	actor/actor_message.h	/^  ActorMsgType msg_type_;$/;"	m	class:oneflow::final	access:private
oneflow::final::mtx_	common/blocking_counter.h	/^  std::mutex mtx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::mut_begin	common/range.h	/^  int64_t& mut_begin() { return begin_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_data_id	register/blob.h	/^  char* mut_data_id() { return mut_data_id(0); }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_data_id	register/blob.h	/^  char* mut_data_id(int32_t no) { return const_cast<char*>(data_id(no)); }$/;"	f	class:oneflow::final	access:public	signature:(int32_t no)
oneflow::final::mut_dptr	register/blob.h	/^  T* mut_dptr() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_dst_bn	graph/exec_graph.h	/^  std::string& mut_dst_bn() { return dst_bn_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_end	common/range.h	/^  int64_t& mut_end() { return end_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_memory_ptr	register/blob.h	/^  void* mut_memory_ptr() { return const_cast<void*>(memory_ptr()); }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_op	graph/exec_graph.h	/^  std::shared_ptr<const Operator>& mut_op() { return op_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_op	graph/logical_graph.h	/^  std::shared_ptr<Operator>& mut_op() { return op_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_parallel_desc	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc>& mut_parallel_desc() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_request	control/ctrl_call.h	/^  RequestMessageType* mut_request() { return &request_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_responder	control/ctrl_call.h	/^  grpc::ServerAsyncResponseWriter<ResponseMessageType>* mut_responder() {$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_response	control/ctrl_call.h	/^  ResponseMessageType* mut_response() { return &response_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_server_ctx	control/ctrl_call.h	/^  grpc::ServerContext* mut_server_ctx() { return &server_ctx_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_shape	register/blob_desc.h	/^  Shape& mut_shape() { return shape_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mut_src_bn	graph/exec_graph.h	/^  std::string& mut_src_bn() { return src_bn_; }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::mutex_	common/channel.h	/^  mutable std::mutex mutex_;$/;"	m	class:oneflow::final	access:private
oneflow::final::name2lock_status_	control/ctrl_server.h	/^  HashMap<std::string, void*> name2lock_status_;$/;"	m	class:oneflow::final	access:private
oneflow::final::name_in_producer2regst_	graph/task_node.h	/^  HashMap<std::string, std::weak_ptr<RegstDesc>> name_in_producer2regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::next_model_version_id_	actor/model_update_compute_actor.h	/^  int64_t next_model_version_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::next_piece_id_	actor/copy_comm_net_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::next_piece_id_	actor/source_compute_actor.h	/^  int64_t next_piece_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::next_snapshot_id_	actor/model_save_compute_actor.h	/^  int64_t next_snapshot_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::obn_0_	kernel/boxing_kernel.h	/^  PbRpf<std::string> obn_0_;$/;"	m	class:oneflow::final	access:private
oneflow::final::op	graph/exec_graph.h	/^  std::shared_ptr<const Operator> op() const { return op_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::op	graph/logical_graph.h	/^  std::shared_ptr<const Operator> op() const { return op_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::op_	graph/exec_graph.h	/^  std::shared_ptr<const Operator> op_;$/;"	m	class:oneflow::final	access:private
oneflow::final::op_	graph/logical_graph.h	/^  std::shared_ptr<Operator> op_;$/;"	m	class:oneflow::final	access:private
oneflow::final::operator !=	register/blob.h	/^  bool operator!=(const PieceStatus& other) const { return !(*this == other); }$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& other) const
oneflow::final::operator =	register/blob.h	/^  PieceStatus& operator=(const PieceStatus&) = default;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus&)
oneflow::final::operator ==	common/range.h	/^  bool operator==(const Range& rhs) const {$/;"	f	class:oneflow::final	access:public	signature:(const Range& rhs) const
oneflow::final::operator ==	common/shape.h	/^  bool operator==(const Shape& rhs) const;$/;"	p	class:oneflow::final	access:public	signature:(const Shape& rhs) const
oneflow::final::operator ==	register/blob.h	/^  bool operator==(const PieceStatus& other) const {$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& other) const
oneflow::final::operator ==	register/blob_desc.h	/^  bool operator==(const BlobDesc& rhs) const;$/;"	p	class:oneflow::final	access:public	signature:(const BlobDesc& rhs) const
oneflow::final::out_diff_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t out_diff_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::out_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t out_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::out_streams_	kernel/print_kernel.h	/^  std::vector<std::unique_ptr<PersistentOutStream>> out_streams_;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/backward_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/boxing_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/boxing_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/boxing_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/boxing_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/boxing_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/boxing_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/copy_comm_net_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  void InitDeviceCtx(const ThreadCtx&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_comm_net_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  void InitDeviceCtx(const ThreadCtx&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/copy_hd_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/forward_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/forward_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/forward_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/forward_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/forward_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/forward_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/model_save_compute_actor.h	/^  KernelCtx GenSinkKernelCtx() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_save_compute_actor.h	/^  void VirtualSinkCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  bool IsWriteReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/model_update_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/rnn_boxing_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/rnn_boxing_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/rnn_boxing_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/rnn_boxing_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/rnn_boxing_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/rnn_boxing_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	actor/source_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/source_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/source_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	actor/source_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^                       std::function<void()> callback) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^             const void* dst_token) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^  const void* RegisterMemory(void* mem_ptr, size_t byte_size) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^  void AddReadCallBackDone(void* actor_read_id, void* read_id) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^  void RegisterMemoryDone() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^  void SendActorMsg(int64_t dst_machine_id, const ActorMsg& msg) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	comm_network/epoll/epoll_comm_network.h	/^  void UnRegisterMemory(const void* token) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	device/cuda_device_context.h	/^  void AddCallBack(std::function<void()> callback) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/backward_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/backward_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/backward_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/chain_node.h	/^  std::string VisualStr() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/chain_node.h	/^  void FixCompTaskNode(CompTaskNode*) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	graph/chain_node.h	/^  void set_data_output_lbns() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/copy_task_node.h	/^  OperatorConf NewCopyOpConf() override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	graph/forward_compute_task_node.h	/^  bool IsReadyForBuild() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/forward_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/forward_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/forward_compute_task_node.h	/^  void LockRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/forward_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/loss_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/loss_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/loss_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  bool IsReadyForBuild() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  void LockRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/model_update_compute_task_node.h	/^  void ToProto(TaskProto*) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/source_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/source_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/source_compute_task_node.h	/^  void FixThrdId() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	graph/source_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	kernel/accumulate_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	kernel/boxing_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/boxing_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/boxing_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/clone_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/clone_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/concat_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/convolution_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/convolution_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/copy_hd_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/copy_hd_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/data_loader_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	kernel/data_loader_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/innerproduct_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/innerproduct_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/loss_print_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	kernel/model_save_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:protected
oneflow::final::override	kernel/model_save_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:protected
oneflow::final::override	kernel/momentum_model_update_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	kernel/multinomial_logistic_loss_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/multinomial_logistic_loss_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/normal_model_update_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/pooling_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/print_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/print_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/relu_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/rmsprop_model_update_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/softmax_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/softmax_loss_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	kernel/softmax_loss_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/accumulate_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/accumulate_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/boxing_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:protected
oneflow::final::override	operator/boxing_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/boxing_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/boxing_op.h	/^  std::string ibn2lbn(const std::string& input_bn) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/boxing_op.h	/^  std::string obn2lbn(const std::string& output_bn) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/boxing_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/clone_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/clone_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/concat_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/concat_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/concat_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/concat_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/convolution_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/convolution_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/convolution_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/copy_comm_net_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/copy_comm_net_op.h	/^  std::string ibn2lbn(const std::string& input_bn) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/copy_comm_net_op.h	/^  std::string obn2lbn(const std::string& output_bn) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/copy_comm_net_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/copy_hd_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/copy_hd_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/data_loader_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/data_loader_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/data_loader_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/innerproduct_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/innerproduct_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/innerproduct_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/loss_print_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/loss_print_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/model_save_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/model_save_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/momentum_model_update_op.h	/^      const ParallelContext* parallel_ctx) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/momentum_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/momentum_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/multinomial_logistic_loss_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/multinomial_logistic_loss_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/multinomial_logistic_loss_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/multinomial_logistic_loss_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/normal_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/normal_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/pooling_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/pooling_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/pooling_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/print_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/print_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/relu_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/relu_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/relu_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/rmsprop_model_update_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/rmsprop_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/rmsprop_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_loss_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
oneflow::final::override	operator/softmax_loss_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_loss_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_loss_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	operator/softmax_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
oneflow::final::override	persistence/cyclic_persistent_in_stream.h	/^  void AddNForCurFilePos(uint64_t n) override;$/;"	m	class:oneflow::final	access:public
oneflow::final::packed_blob	register/register.h	/^  Blob* packed_blob() { return packed_blob_.get(); }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::packed_blob_	register/register.h	/^  std::unique_ptr<Blob> packed_blob_;$/;"	m	class:oneflow::final	access:private
oneflow::final::packed_blob_desc_	register/register_desc.h	/^  std::unique_ptr<BlobDesc> packed_blob_desc_;$/;"	m	class:oneflow::final	access:private
oneflow::final::parallel_desc	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::parallel_desc_	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc_;$/;"	m	class:oneflow::final	access:private
oneflow::final::part_id_	kernel/model_save_kernel.h	/^  int32_t part_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::part_num_	kernel/model_save_kernel.h	/^  int32_t part_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_in_regst_	actor/copy_hd_actor.h	/^  std::queue<Regst*> pending_in_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_in_regsts_	actor/forward_compute_actor.h	/^  std::queue<Regst*> pending_in_regsts_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_kv_calls_	control/ctrl_server.h	/^      pending_kv_calls_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_model_diff_acc_queue_	actor/model_update_compute_actor.h	/^  std::queue<Regst*> pending_model_diff_acc_queue_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_msg_queue_	comm_network/epoll/socket_write_helper.h	/^  std::queue<SocketMsg>* pending_msg_queue_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pending_msg_queue_mtx_	comm_network/epoll/socket_write_helper.h	/^  std::mutex pending_msg_queue_mtx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::persistence_thrd_offset_	job/id_manager.h	/^  std::vector<int64_t> persistence_thrd_offset_;$/;"	m	class:oneflow::final	access:private
oneflow::final::piece_id	actor/actor_message.h	/^  int64_t piece_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_id	register/blob.h	/^  int64_t piece_id() const { return piece_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_id	register/register.h	/^  int64_t piece_id() const { return piece_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_id2regst_ctx	actor/copy_comm_net_actor.h	/^  HashMap<int64_t, RegstCtx> piece_id2regst_ctx;$/;"	m	class:oneflow::final	access:private
oneflow::final::piece_id_	register/blob.h	/^  int64_t piece_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::piece_id_	register/register.h	/^  int64_t piece_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::piece_num_of_experiment_phase	job/job_desc.h	/^  int64_t piece_num_of_experiment_phase() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_status	register/blob.h	/^  const PieceStatus& piece_status() const { return piece_status_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_status	register/register.h	/^  const PieceStatus& piece_status() const {$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::piece_status_	register/blob.h	/^  PieceStatus piece_status_;$/;"	m	class:oneflow::final	access:private
oneflow::final::placement	job/job_desc.h	/^  const Placement& placement() const { return placement_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::placement_	job/job_desc.h	/^  Placement placement_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pollers_	comm_network/epoll/epoll_comm_network.h	/^  std::vector<IOEventPoller*> pollers_;$/;"	m	class:oneflow::final	access:private
oneflow::final::pre_model_regst_	actor/model_update_compute_actor.h	/^  Regst* pre_model_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::producer	register/register_desc.h	/^  const TaskNode* producer() const { return producer_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::producer_	register/register_desc.h	/^  const TaskNode* producer_;$/;"	m	class:oneflow::final	access:private
oneflow::final::producer_actor_id	register/register.h	/^  int64_t producer_actor_id() const { return regst_desc_->producer_actor_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::queue_not_empty_fd_	comm_network/epoll/socket_write_helper.h	/^  int queue_not_empty_fd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::random_seed_	actor/model_update_compute_actor.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
oneflow::final::random_seed_	graph/chain_node.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
oneflow::final::random_seed_	graph/model_update_compute_task_node.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
oneflow::final::read_helper_	comm_network/epoll/socket_helper.h	/^  SocketReadHelper* read_helper_;$/;"	m	class:oneflow::final	access:private
oneflow::final::read_id_	actor/copy_comm_net_actor.cpp	/^  void* read_id_;$/;"	m	class:oneflow::final	file:	access:private
oneflow::final::read_ptr_	comm_network/epoll/socket_read_helper.h	/^  char* read_ptr_;$/;"	m	class:oneflow::final	access:private
oneflow::final::read_size_	comm_network/epoll/socket_read_helper.h	/^  size_t read_size_;$/;"	m	class:oneflow::final	access:private
oneflow::final::readable_regst_	actor/boxing_actor.h	/^  HashMap<int64_t, std::queue<Regst*>> readable_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::readable_regst_	actor/rnn_boxing_actor.h	/^  std::map<int64_t, HashMap<int64_t, std::queue<Regst*>>> readable_regst_;$/;"	m	class:oneflow::final	access:private
oneflow::final::readable_regst_cnt_	actor/backward_compute_actor.h	/^  int64_t readable_regst_cnt_;$/;"	m	class:oneflow::final	access:private
oneflow::final::readable_regst_cnt_	actor/boxing_actor.h	/^  int64_t readable_regst_cnt_;$/;"	m	class:oneflow::final	access:private
oneflow::final::readable_regsts_	actor/backward_compute_actor.h	/^  HashMap<int64_t, std::queue<Regst*>> readable_regsts_;$/;"	m	class:oneflow::final	access:private
oneflow::final::recurrent_flag	register/register.h	/^  int recurrent_flag() const { return recurrent_flag_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::recurrent_flag_	register/register.h	/^  int recurrent_flag_;$/;"	m	class:oneflow::final	access:private
oneflow::final::regst	actor/actor_message.h	/^  Regst* regst() const;$/;"	p	class:oneflow::final	access:public	signature:() const
oneflow::final::regst_desc	register/register.h	/^  const RtRegstDesc* regst_desc() const { return regst_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::regst_desc_	register/register.h	/^  const RtRegstDesc* regst_desc_;$/;"	m	class:oneflow::final	access:private
oneflow::final::regst_desc_id	register/register.h	/^  int64_t regst_desc_id() const { return regst_desc_->regst_desc_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::regst_desc_id	register/register_desc.h	/^  int64_t regst_desc_id() const { return regst_desc_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::regst_desc_id_	register/register_desc.h	/^  int64_t regst_desc_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::regst_desc_id_count_	job/id_manager.h	/^  int64_t regst_desc_id_count_;$/;"	m	class:oneflow::final	access:private
oneflow::final::related_fw_actor_id_	actor/model_update_compute_actor.h	/^  int64_t related_fw_actor_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::related_save_actor_id_	actor/model_update_compute_actor.h	/^  int64_t related_save_actor_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::request	control/ctrl_call.h	/^  const RequestMessageType& request() const { return request_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::request_	control/ctrl_call.h	/^  RequestMessageType request_;$/;"	m	class:oneflow::final	access:private
oneflow::final::request_handler_	control/ctrl_call.h	/^  std::function<void()> request_handler_;$/;"	m	class:oneflow::final	access:private
oneflow::final::resource	job/job_desc.h	/^  const Resource& resource() const { return resource_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::resource_	job/job_desc.h	/^  Resource resource_;$/;"	m	class:oneflow::final	access:private
oneflow::final::responder_	control/ctrl_call.h	/^  grpc::ServerAsyncResponseWriter<ResponseMessageType> responder_;$/;"	m	class:oneflow::final	access:private
oneflow::final::response_	control/ctrl_call.h	/^  ResponseMessageType response_;$/;"	m	class:oneflow::final	access:private
oneflow::final::root_path_	persistence/snapshot.h	/^  std::string root_path_;$/;"	m	class:oneflow::final	access:private
oneflow::final::rt_regst_descs_	register/register_manager.h	/^  std::list<std::unique_ptr<const RtRegstDesc>> rt_regst_descs_;$/;"	m	class:oneflow::final	access:private
oneflow::final::server_ctx_	control/ctrl_call.h	/^  grpc::ServerContext server_ctx_;$/;"	m	class:oneflow::final	access:private
oneflow::final::set_bw_node	graph/chain_node.h	/^  void set_bw_node(BackwardChainNode* val) { bw_node_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(BackwardChainNode* val)
oneflow::final::set_data_type	register/blob_desc.h	/^  void set_data_type(DataType val) { data_type_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(DataType val)
oneflow::final::set_fw_node	graph/chain_node.h	/^  void set_fw_node(ForwardChainNode* val) { fw_node_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(ForwardChainNode* val)
oneflow::final::set_has_data_id	register/blob_desc.h	/^  void set_has_data_id(bool val) { has_data_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(bool val)
oneflow::final::set_is_forward	register/register.h	/^  void set_is_forward(bool val) { is_forward_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(bool val)
oneflow::final::set_lbn	graph/exec_graph.h	/^  void set_lbn(const std::string& lbn) { lbn_ = lbn; }$/;"	f	class:oneflow::final	access:public	signature:(const std::string& lbn)
oneflow::final::set_max_col_id	register/blob.h	/^  void set_max_col_id(int64_t max_col_id) {$/;"	f	class:oneflow::final	access:public	signature:(int64_t max_col_id)
oneflow::final::set_max_register_num	register/register_desc.h	/^  void set_max_register_num(int32_t val) { max_register_num_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int32_t val)
oneflow::final::set_min_register_num	register/register_desc.h	/^  void set_min_register_num(int32_t val) { min_register_num_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int32_t val)
oneflow::final::set_model_version_id	register/register.h	/^  void set_model_version_id(int64_t val) { model_version_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t val)
oneflow::final::set_piece_id	register/register.h	/^  void set_piece_id(int64_t val) { piece_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t val)
oneflow::final::set_piece_status	register/blob.h	/^  void set_piece_status(const PieceStatus& pst) { piece_status_ = pst; }$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& pst)
oneflow::final::set_producer	register/register_desc.h	/^  void set_producer(const TaskNode* val) { producer_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(const TaskNode* val)
oneflow::final::set_random_seed	graph/model_update_compute_task_node.h	/^  void set_random_seed(uint32_t val) { random_seed_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(uint32_t val)
oneflow::final::set_read_id	actor/copy_comm_net_actor.cpp	/^  void set_read_id(void* val) { read_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(void* val)
oneflow::final::set_recurrent_flag	register/register.h	/^  void set_recurrent_flag(int val) { recurrent_flag_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int val)
oneflow::final::set_request_handler	control/ctrl_call.h	/^  void set_request_handler(std::function<void()> val) {$/;"	f	class:oneflow::final	access:public	signature:(std::function<void()> val)
oneflow::final::shape	register/blob.h	/^  const Shape& shape() const { return blob_desc_->shape(); }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::shape	register/blob_desc.h	/^  const Shape& shape() const { return shape_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::shape_	register/blob_desc.h	/^  Shape shape_;$/;"	m	class:oneflow::final	access:private
oneflow::final::size	common/range.h	/^  int64_t size() const { return end_ - begin_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::sockfd2helper_	comm_network/epoll/epoll_comm_network.h	/^  HashMap<int, SocketHelper*> sockfd2helper_;$/;"	m	class:oneflow::final	access:private
oneflow::final::sockfd_	comm_network/epoll/socket_read_helper.h	/^  int sockfd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::sockfd_	comm_network/epoll/socket_write_helper.h	/^  int sockfd_;$/;"	m	class:oneflow::final	access:private
oneflow::final::split_num_	common/balanced_splitter.h	/^  int64_t split_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::src_actor_id	actor/actor_message.h	/^  int64_t src_actor_id() const { return src_actor_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::src_actor_id_	actor/actor_message.h	/^  int64_t src_actor_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::src_bn	graph/exec_graph.h	/^  const std::string& src_bn() const { return src_bn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::src_bn_	graph/exec_graph.h	/^  std::string src_bn_;$/;"	m	class:oneflow::final	access:private
oneflow::final::status_	control/ctrl_call.h	/^  Status status_;$/;"	m	class:oneflow::final	access:private
oneflow::final::stubs_	control/ctrl_client.h	/^  std::vector<std::unique_ptr<CtrlService::Stub>> stubs_;$/;"	m	class:oneflow::final	access:private
oneflow::final::task_id_bit_num_	job/id_manager.h	/^  static const int64_t task_id_bit_num_ = 39;$/;"	m	class:oneflow::final	access:private
oneflow::final::this_machine_id	job/machine_context.h	/^  int64_t this_machine_id() const { return this_machine_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::this_machine_id_	job/machine_context.h	/^  int64_t this_machine_id_;$/;"	m	class:oneflow::final	access:private
oneflow::final::thread_	comm_network/epoll/io_event_poller.h	/^  std::thread thread_;$/;"	m	class:oneflow::final	access:private
oneflow::final::thread_id2num_of_streams_	job/id_manager.h	/^  HashMap<int64_t, int64_t> thread_id2num_of_streams_;$/;"	m	class:oneflow::final	access:private
oneflow::final::thread_id2num_of_tasks_	job/id_manager.h	/^  HashMap<int64_t, int64_t> thread_id2num_of_tasks_;$/;"	m	class:oneflow::final	access:private
oneflow::final::thread_id_bit_num_	job/id_manager.h	/^  static const int64_t thread_id_bit_num_ = 8;$/;"	m	class:oneflow::final	access:private
oneflow::final::threads_	thread/thread_manager.h	/^  std::vector<Thread*> threads_;$/;"	m	class:oneflow::final	access:private
oneflow::final::total_mbn_num	graph/logical_graph.h	/^  int64_t total_mbn_num() const { return total_mbn_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::total_mbn_num_	graph/logical_graph.h	/^  int64_t total_mbn_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::total_piece_num	job/runtime_context.h	/^  int64_t total_piece_num() const { return total_piece_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
oneflow::final::total_piece_num_	job/runtime_context.h	/^  int64_t total_piece_num_;$/;"	m	class:oneflow::final	access:private
oneflow::final::txt_out_stream_	actor/act_event_logger.h	/^  PersistentOutStream txt_out_stream_;$/;"	m	class:oneflow::final	access:private
oneflow::final::unregister_mem_descs_cnt_	comm_network/epoll/epoll_comm_network.h	/^  size_t unregister_mem_descs_cnt_;$/;"	m	class:oneflow::final	access:private
oneflow::final::val_	common/channel.h	/^  std::queue<T> val_;$/;"	m	class:oneflow::final	access:private
oneflow::final::write_helper_	comm_network/epoll/socket_helper.h	/^  SocketWriteHelper* write_helper_;$/;"	m	class:oneflow::final	access:private
oneflow::final::write_ptr_	comm_network/epoll/socket_write_helper.h	/^  const char* write_ptr_;$/;"	m	class:oneflow::final	access:private
oneflow::final::write_size_	comm_network/epoll/socket_write_helper.h	/^  size_t write_size_;$/;"	m	class:oneflow::final	access:private
oneflow::final::~AccumulateKernel	kernel/accumulate_kernel.h	/^  ~AccumulateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~AccumulateOp	operator/accumulate_op.h	/^  ~AccumulateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ActEventLogger	actor/act_event_logger.h	/^  ~ActEventLogger() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ActorMsg	actor/actor_message.h	/^  ~ActorMsg() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ActorMsgBus	actor/actor_message_bus.h	/^  ~ActorMsgBus() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BackwardCompActor	actor/backward_compute_actor.h	/^  ~BackwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BackwardCompTaskNode	graph/backward_compute_task_node.h	/^  ~BackwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BalancedSplitter	common/balanced_splitter.h	/^  ~BalancedSplitter() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Blob	register/blob.h	/^  ~Blob() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BlobDesc	register/blob_desc.h	/^  ~BlobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BlockingCounter	common/blocking_counter.h	/^  ~BlockingCounter() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BoxingActor	actor/boxing_actor.h	/^  ~BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BoxingActor	actor/rnn_boxing_actor.h	/^  ~BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BoxingKernel	kernel/boxing_kernel.h	/^  ~BoxingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~BoxingOp	operator/boxing_op.h	/^  ~BoxingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ChainEdge	graph/chain_node.h	/^  ~ChainEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ChainGraph	graph/chain_graph.h	/^  ~ChainGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Channel	common/channel.h	/^  ~Channel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CloneKernel	kernel/clone_kernel.h	/^  ~CloneKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CloneOp	operator/clone_op.h	/^  ~CloneOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  ~CommNetDeviceCtx() = default;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::~Compiler	job/compiler.h	/^  ~Compiler() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ConcatKernel	kernel/concat_kernel.h	/^  ~ConcatKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ConcatOp	operator/concat_op.h	/^  ~ConcatOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ConvolutionKernel	kernel/convolution_kernel.h	/^  ~ConvolutionKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ConvolutionOp	operator/convolution_op.h	/^  ~ConvolutionOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyCommNetActor	actor/copy_comm_net_actor.h	/^  ~CopyCommNetActor();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyCommNetKernel	kernel/copy_comm_net_kernel.h	/^  ~CopyCommNetKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyCommNetOp	operator/copy_comm_net_op.h	/^  ~CopyCommNetOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyCommNetTaskNode	graph/copy_task_node.h	/^  ~CopyCommNetTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyHdActor	actor/copy_hd_actor.h	/^  ~CopyHdActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyHdKernel	kernel/copy_hd_kernel.h	/^  ~CopyHdKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyHdOp	operator/copy_hd_op.h	/^  ~CopyHdOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CopyHdTaskNode	graph/copy_task_node.h	/^  ~CopyHdTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CpuDeviceCtx	device/cpu_device_context.h	/^  ~CpuDeviceCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CpuThread	thread/cpu_thread.h	/^  ~CpuThread() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CtrlCall	control/ctrl_call.h	/^  ~CtrlCall() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CtrlClient	control/ctrl_client.h	/^  ~CtrlClient() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CtrlServer	control/ctrl_server.h	/^  ~CtrlServer();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CudaDeviceCtx	device/cuda_device_context.h	/^  ~CudaDeviceCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CudaStreamHandle	device/cuda_stream_handle.h	/^  ~CudaStreamHandle();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  ~CyclicPersistentInStream() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~DataLoaderKernel	kernel/data_loader_kernel.h	/^  ~DataLoaderKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~DataLoaderOp	operator/data_loader_op.h	/^  ~DataLoaderOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~EpollCommNet	comm_network/epoll/epoll_comm_network.h	/^  ~EpollCommNet();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ExecEdge	graph/exec_graph.h	/^  ~ExecEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ExecGraph	graph/exec_graph.h	/^  ~ExecGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ExecNode	graph/exec_graph.h	/^  ~ExecNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ForwardCompActor	actor/forward_compute_actor.h	/^  ~ForwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ForwardCompTaskNode	graph/forward_compute_task_node.h	/^  ~ForwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~GpuThread	thread/gpu_thread.h	/^  ~GpuThread() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~IDMgr	job/id_manager.h	/^  ~IDMgr() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~IOEventPoller	comm_network/epoll/io_event_poller.h	/^  ~IOEventPoller();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Improver	job/improver.h	/^  ~Improver() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~InBoxingTaskNode	graph/boxing_task_node.h	/^  ~InBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~InnerProductKernel	kernel/innerproduct_kernel.h	/^  ~InnerProductKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~InnerProductOp	operator/innerproduct_op.h	/^  ~InnerProductOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~JobDesc	job/job_desc.h	/^  ~JobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LogicalEdge	graph/logical_graph.h	/^  ~LogicalEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LogicalGraph	graph/logical_graph.h	/^  ~LogicalGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LogicalNode	graph/logical_graph.h	/^  ~LogicalNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossAccCompActor	actor/loss_accumulate_compute_actor.h	/^  ~LossAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossAccCompTaskNode	graph/loss_accumulate_compute_task_node.h	/^  ~LossAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossCompTaskNode	graph/loss_compute_task_node.h	/^  ~LossCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossPrintCompActor	actor/loss_print_compute_actor.h	/^  ~LossPrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossPrintCompTaskNode	graph/loss_print_compute_task_node.h	/^  ~LossPrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossPrintKernel	kernel/loss_print_kernel.h	/^  ~LossPrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~LossPrintOp	operator/loss_print_op.h	/^  ~LossPrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MachineCtx	job/machine_context.h	/^  ~MachineCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdDiffAccCompActor	actor/model_diff_accumulate_compute_actor.h	/^  ~MdDiffAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdDiffAccCompTaskNode	graph/model_diff_accumulate_compute_task_node.h	/^  ~MdDiffAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdSaveCompActor	actor/model_save_compute_actor.h	/^  ~MdSaveCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdSaveCompTaskNode	graph/model_save_compute_task_node.h	/^  ~MdSaveCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdUpdtChainNode	graph/chain_node.h	/^  ~MdUpdtChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdUpdtCompActor	actor/model_update_compute_actor.h	/^  ~MdUpdtCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MdUpdtCompTaskNode	graph/model_update_compute_task_node.h	/^  ~MdUpdtCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MemoryAllocator	memory/memory_allocator.h	/^  ~MemoryAllocator() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ModelSaveKernel	kernel/model_save_kernel.h	/^  ~ModelSaveKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ModelSaveOp	operator/model_save_op.h	/^  ~ModelSaveOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MomentumMdUpdateKernel	kernel/momentum_model_update_kernel.h	/^  ~MomentumMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MomentumModelUpdateOp	operator/momentum_model_update_op.h	/^  ~MomentumModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.h	/^  ~MultinomialLogisticLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~MultinomialLogisticLossOp	operator/multinomial_logistic_loss_op.h	/^  ~MultinomialLogisticLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~NormalMdUpdateKernel	kernel/normal_model_update_kernel.h	/^  ~NormalMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~NormalModelUpdateOp	operator/normal_model_update_op.h	/^  ~NormalModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Oneflow	job/oneflow.cpp	/^  ~Oneflow() = default;$/;"	p	class:oneflow::final	file:	access:public	signature:()
oneflow::final::~OutBoxingTaskNode	graph/boxing_task_node.h	/^  ~OutBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PersistentOutStream	persistence/persistent_out_stream.h	/^  ~PersistentOutStream();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PieceStatus	register/blob.h	/^  ~PieceStatus() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PoolingKernel	kernel/pooling_kernel.h	/^  ~PoolingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PoolingOp	operator/pooling_op.h	/^  ~PoolingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PrintChainNode	graph/chain_node.h	/^  ~PrintChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PrintCompActor	actor/print_compute_actor.h	/^  ~PrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PrintCompTaskNode	graph/print_compute_task_node.h	/^  ~PrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PrintKernel	kernel/print_kernel.h	/^  ~PrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~PrintOp	operator/print_op.h	/^  ~PrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~RMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel.h	/^  ~RMSPropMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~RMSPropModelUpdateOp	operator/rmsprop_model_update_op.h	/^  ~RMSPropModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Range	common/range.h	/^  ~Range() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Regst	register/register.h	/^  ~Regst() { deleter_(); }$/;"	f	class:oneflow::final	access:public	signature:()
oneflow::final::~RegstDesc	register/register_desc.h	/^  ~RegstDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~RegstMgr	register/register_manager.h	/^  ~RegstMgr() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ReluKernel	kernel/relu_kernel.h	/^  ~ReluKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ReluOp	operator/relu_op.h	/^  ~ReluOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Runtime	job/runtime.h	/^  ~Runtime() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~RuntimeCtx	job/runtime_context.h	/^  ~RuntimeCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Shape	common/shape.h	/^  ~Shape() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~Snapshot	persistence/snapshot.h	/^  ~Snapshot() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SocketHelper	comm_network/epoll/socket_helper.h	/^  ~SocketHelper();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  ~SocketReadHelper();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  ~SocketWriteHelper();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SoftmaxKernel	kernel/softmax_kernel.h	/^  ~SoftmaxKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SoftmaxLossKernel	kernel/softmax_loss_kernel.h	/^  ~SoftmaxLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SoftmaxLossOp	operator/softmax_loss_op.h	/^  ~SoftmaxLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SoftmaxOp	operator/softmax_op.h	/^  ~SoftmaxOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SourceCompActor	actor/source_compute_actor.h	/^  ~SourceCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~SourceCompTaskNode	graph/source_compute_task_node.h	/^  ~SourceCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~TaskEdge	graph/task_node.h	/^  ~TaskEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~TaskGraph	graph/task_graph.h	/^  ~TaskGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::final::~ThreadMgr	thread/thread_manager.h	/^  ~ThreadMgr();$/;"	p	class:oneflow::final	access:public	signature:()
oneflow::fs	persistence/file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
oneflow::fs	persistence/file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
oneflow::fs	persistence/file_system_test.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
oneflow::fs	persistence/hadoop/hadoop_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
oneflow::fs	persistence/hadoop/hadoop_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
oneflow::fs	persistence/posix/posix_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
oneflow::fs	persistence/posix/posix_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
oneflow::fs	persistence/windows/windows_file_system.cpp	/^namespace fs {$/;"	n	namespace:oneflow	file:
oneflow::fs	persistence/windows/windows_file_system.h	/^namespace fs {$/;"	n	namespace:oneflow
oneflow::fs::BindFunc	persistence/hadoop/hadoop_file_system.cpp	/^bool BindFunc(void* handle, const char* name, std::function<R(Args...)>* func) {$/;"	f	namespace:oneflow::fs	signature:(void* handle, const char* name, std::function<R(Args...)>* func)
oneflow::fs::FileSystem	persistence/file_system.h	/^class FileSystem {$/;"	c	namespace:oneflow::fs
oneflow::fs::FileSystem::CreateDir	persistence/file_system.h	/^  virtual void CreateDir(const std::string& dirname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::CreateDirIfNotExist	persistence/file_system.cpp	/^void FileSystem::CreateDirIfNotExist(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
oneflow::fs::FileSystem::CreateDirIfNotExist	persistence/file_system.h	/^  void CreateDirIfNotExist(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::DelFile	persistence/file_system.h	/^  virtual void DelFile(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
oneflow::fs::FileSystem::DeleteDir	persistence/file_system.h	/^  virtual void DeleteDir(const std::string& dirname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::FileExists	persistence/file_system.h	/^  virtual bool FileExists(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
oneflow::fs::FileSystem::FileSystem	persistence/file_system.h	/^  FileSystem() = default;$/;"	p	class:oneflow::fs::FileSystem	access:protected	signature:()
oneflow::fs::FileSystem::GetFileSize	persistence/file_system.h	/^  virtual uint64_t GetFileSize(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
oneflow::fs::FileSystem::IsDirEmpty	persistence/file_system.cpp	/^bool FileSystem::IsDirEmpty(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
oneflow::fs::FileSystem::IsDirEmpty	persistence/file_system.h	/^  bool IsDirEmpty(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::IsDirectory	persistence/file_system.h	/^  virtual bool IsDirectory(const std::string& fname) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname)
oneflow::fs::FileSystem::ListDir	persistence/file_system.h	/^  virtual std::vector<std::string> ListDir(const std::string& dir) = 0;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dir)
oneflow::fs::FileSystem::MakeEmptyDir	persistence/file_system.cpp	/^void FileSystem::MakeEmptyDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
oneflow::fs::FileSystem::MakeEmptyDir	persistence/file_system.h	/^  void MakeEmptyDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::NewAppendableFile	persistence/file_system.h	/^  virtual void NewAppendableFile(const std::string& fname,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::FileSystem::NewRandomAccessFile	persistence/file_system.h	/^  virtual void NewRandomAccessFile($/;"	p	class:oneflow::fs::FileSystem	access:public	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
oneflow::fs::FileSystem::NewWritableFile	persistence/file_system.h	/^  virtual void NewWritableFile(const std::string& fname,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::FileSystem::RecursivelyCreateDir	persistence/file_system.cpp	/^void FileSystem::RecursivelyCreateDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
oneflow::fs::FileSystem::RecursivelyCreateDir	persistence/file_system.h	/^  virtual void RecursivelyCreateDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::RecursivelyDeleteDir	persistence/file_system.cpp	/^void FileSystem::RecursivelyDeleteDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& dirname)
oneflow::fs::FileSystem::RecursivelyDeleteDir	persistence/file_system.h	/^  virtual void RecursivelyDeleteDir(const std::string& dirname);$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& dirname)
oneflow::fs::FileSystem::RenameFile	persistence/file_system.h	/^  virtual void RenameFile(const std::string& old_name,$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& old_name, const std::string& new_name)
oneflow::fs::FileSystem::TranslateName	persistence/file_system.cpp	/^std::string FileSystem::TranslateName(const std::string& name) const {$/;"	f	class:oneflow::fs::FileSystem	signature:(const std::string& name) const
oneflow::fs::FileSystem::TranslateName	persistence/file_system.h	/^  virtual std::string TranslateName(const std::string& name) const;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:(const std::string& name) const
oneflow::fs::FileSystem::~FileSystem	persistence/file_system.h	/^  virtual ~FileSystem() = default;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:()
oneflow::fs::GlobalFSConstructor	persistence/file_system.cpp	/^struct GlobalFSConstructor {$/;"	s	namespace:oneflow::fs	file:
oneflow::fs::GlobalFSConstructor::GlobalFSConstructor	persistence/file_system.cpp	/^  GlobalFSConstructor() {$/;"	f	struct:oneflow::fs::GlobalFSConstructor	access:public	signature:()
oneflow::fs::GlobalFSConstructor::gfs	persistence/file_system.cpp	/^  FileSystem* gfs;$/;"	m	struct:oneflow::fs::GlobalFSConstructor	file:	access:public
oneflow::fs::HDFSRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^class HDFSRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs	file:	inherits:RandomAccessFile
oneflow::fs::HDFSRandomAccessFile::HDFSRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^  HDFSRandomAccessFile(const std::string& filename,$/;"	f	class:oneflow::fs::HDFSRandomAccessFile	access:public	signature:(const std::string& filename, const std::string& hdfs_filename, LibHDFS* hdfs, hdfsFS fs, hdfsFile file)
oneflow::fs::HDFSRandomAccessFile::file_	persistence/hadoop/hadoop_file_system.cpp	/^  mutable hdfsFile file_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSRandomAccessFile::filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSRandomAccessFile::fs_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFS fs_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSRandomAccessFile::hdfs_	persistence/hadoop/hadoop_file_system.cpp	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSRandomAccessFile::hdfs_filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string hdfs_filename_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSRandomAccessFile::mu_	persistence/hadoop/hadoop_file_system.cpp	/^  mutable std::mutex mu_;$/;"	m	class:oneflow::fs::HDFSRandomAccessFile	file:	access:private
oneflow::fs::HDFSWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^class HDFSWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs	file:	inherits:WritableFile
oneflow::fs::HDFSWritableFile::HDFSWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^  HDFSWritableFile(const std::string& fname, LibHDFS* hdfs, hdfsFS fs,$/;"	f	class:oneflow::fs::HDFSWritableFile	access:public	signature:(const std::string& fname, LibHDFS* hdfs, hdfsFS fs, hdfsFile file)
oneflow::fs::HDFSWritableFile::file_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFile file_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
oneflow::fs::HDFSWritableFile::filename_	persistence/hadoop/hadoop_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
oneflow::fs::HDFSWritableFile::fs_	persistence/hadoop/hadoop_file_system.cpp	/^  hdfsFS fs_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
oneflow::fs::HDFSWritableFile::hdfs_	persistence/hadoop/hadoop_file_system.cpp	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::HDFSWritableFile	file:	access:private
oneflow::fs::HadoopFileSystem::Connect	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::Connect(hdfsFS* fs) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(hdfsFS* fs)
oneflow::fs::HadoopFileSystem::CreateDir	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::CreateDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
oneflow::fs::HadoopFileSystem::DelFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
oneflow::fs::HadoopFileSystem::DeleteDir	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::DeleteDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
oneflow::fs::HadoopFileSystem::FileExists	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
oneflow::fs::HadoopFileSystem::GetFileSize	persistence/hadoop/hadoop_file_system.cpp	/^uint64_t HadoopFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
oneflow::fs::HadoopFileSystem::HadoopFileSystem	persistence/hadoop/hadoop_file_system.cpp	/^HadoopFileSystem::HadoopFileSystem(const HdfsConf& hdfs_conf)$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const HdfsConf& hdfs_conf)
oneflow::fs::HadoopFileSystem::IsDirectory	persistence/hadoop/hadoop_file_system.cpp	/^bool HadoopFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname)
oneflow::fs::HadoopFileSystem::ListDir	persistence/hadoop/hadoop_file_system.cpp	/^std::vector<std::string> HadoopFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& dir)
oneflow::fs::HadoopFileSystem::NewAppendableFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewAppendableFile($/;"	f	class:oneflow::fs::HadoopFileSystem	signature:( const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::HadoopFileSystem::NewRandomAccessFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::HadoopFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
oneflow::fs::HadoopFileSystem::NewWritableFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::HadoopFileSystem::RenameFile	persistence/hadoop/hadoop_file_system.cpp	/^void HadoopFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::HadoopFileSystem	signature:(const std::string& old_name, const std::string& new_name)
oneflow::fs::LibHDFS	persistence/hadoop/hadoop_file_system.h	/^class LibHDFS {$/;"	c	namespace:oneflow::fs
oneflow::fs::LibHDFS::Load	persistence/hadoop/hadoop_file_system.h	/^  static LibHDFS* Load() {$/;"	f	class:oneflow::fs::LibHDFS	access:public	signature:()
oneflow::fs::LibHDFS::LoadAndBind	persistence/hadoop/hadoop_file_system.cpp	/^void LibHDFS::LoadAndBind() {$/;"	f	class:oneflow::fs::LibHDFS	signature:()
oneflow::fs::LibHDFS::LoadAndBind	persistence/hadoop/hadoop_file_system.h	/^  void LoadAndBind();$/;"	p	class:oneflow::fs::LibHDFS	access:private	signature:()
oneflow::fs::LibHDFS::handle_	persistence/hadoop/hadoop_file_system.h	/^  void* handle_ = nullptr;$/;"	m	class:oneflow::fs::LibHDFS	access:private
oneflow::fs::LibHDFS::hdfsBuilderConnect	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFS(hdfsBuilder*)> hdfsBuilderConnect;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsBuilderSetKerbTicketCachePath	persistence/hadoop/hadoop_file_system.h	/^      hdfsBuilderSetKerbTicketCachePath;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsBuilderSetNameNode	persistence/hadoop/hadoop_file_system.h	/^  std::function<void(hdfsBuilder*, const char*)> hdfsBuilderSetNameNode;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsCloseFile	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsCloseFile;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsConfGetStr	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(const char*, char**)> hdfsConfGetStr;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsCreateDirectory	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*)> hdfsCreateDirectory;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsDelete	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*, int recursive)> hdfsDelete;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsExists	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*)> hdfsExists;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsFreeFileInfo	persistence/hadoop/hadoop_file_system.h	/^  std::function<void(hdfsFileInfo*, int)> hdfsFreeFileInfo;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsGetPathInfo	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFileInfo*(hdfsFS, const char*)> hdfsGetPathInfo;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsHFlush	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsHFlush;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsHSync	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, hdfsFile)> hdfsHSync;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsListDirectory	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsFileInfo*(hdfsFS, const char*, int*)> hdfsListDirectory;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsNewBuilder	persistence/hadoop/hadoop_file_system.h	/^  std::function<hdfsBuilder*()> hdfsNewBuilder;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsOpenFile	persistence/hadoop/hadoop_file_system.h	/^      hdfsOpenFile;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsPread	persistence/hadoop/hadoop_file_system.h	/^  std::function<tSize(hdfsFS, hdfsFile, tOffset, void*, tSize)> hdfsPread;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsRename	persistence/hadoop/hadoop_file_system.h	/^  std::function<int(hdfsFS, const char*, const char*)> hdfsRename;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::hdfsWrite	persistence/hadoop/hadoop_file_system.h	/^  std::function<tSize(hdfsFS, hdfsFile, const void*, tSize)> hdfsWrite;$/;"	m	class:oneflow::fs::LibHDFS	access:public
oneflow::fs::LibHDFS::status	persistence/hadoop/hadoop_file_system.h	/^  bool status() { return status_; }$/;"	f	class:oneflow::fs::LibHDFS	access:public	signature:()
oneflow::fs::LibHDFS::status_	persistence/hadoop/hadoop_file_system.h	/^  bool status_;$/;"	m	class:oneflow::fs::LibHDFS	access:private
oneflow::fs::PosixFileSystem::CreateDir	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::CreateDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dirname)
oneflow::fs::PosixFileSystem::DelFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
oneflow::fs::PosixFileSystem::DeleteDir	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::DeleteDir(const std::string& dirname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dirname)
oneflow::fs::PosixFileSystem::FileExists	persistence/posix/posix_file_system.cpp	/^bool PosixFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
oneflow::fs::PosixFileSystem::GetFileSize	persistence/posix/posix_file_system.cpp	/^uint64_t PosixFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
oneflow::fs::PosixFileSystem::IsDirectory	persistence/posix/posix_file_system.cpp	/^bool PosixFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname)
oneflow::fs::PosixFileSystem::ListDir	persistence/posix/posix_file_system.cpp	/^std::vector<std::string> PosixFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& dir)
oneflow::fs::PosixFileSystem::NewAppendableFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewAppendableFile(const std::string& fname,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::PosixFileSystem::NewRandomAccessFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::PosixFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
oneflow::fs::PosixFileSystem::NewWritableFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::PosixFileSystem::RenameFile	persistence/posix/posix_file_system.cpp	/^void PosixFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::PosixFileSystem	signature:(const std::string& old_name, const std::string& new_name)
oneflow::fs::PosixRandomAccessFile	persistence/posix/posix_file_system.cpp	/^class PosixRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs	file:	inherits:RandomAccessFile
oneflow::fs::PosixRandomAccessFile::PosixRandomAccessFile	persistence/posix/posix_file_system.cpp	/^  PosixRandomAccessFile(const std::string& fname, int fd)$/;"	f	class:oneflow::fs::PosixRandomAccessFile	access:public	signature:(const std::string& fname, int fd)
oneflow::fs::PosixRandomAccessFile::fd_	persistence/posix/posix_file_system.cpp	/^  int fd_;$/;"	m	class:oneflow::fs::PosixRandomAccessFile	file:	access:private
oneflow::fs::PosixRandomAccessFile::fname_	persistence/posix/posix_file_system.cpp	/^  std::string fname_;$/;"	m	class:oneflow::fs::PosixRandomAccessFile	file:	access:private
oneflow::fs::PosixWritableFile	persistence/posix/posix_file_system.cpp	/^class PosixWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs	file:	inherits:WritableFile
oneflow::fs::PosixWritableFile::PosixWritableFile	persistence/posix/posix_file_system.cpp	/^  PosixWritableFile(const std::string& fname, FILE* file)$/;"	f	class:oneflow::fs::PosixWritableFile	access:public	signature:(const std::string& fname, FILE* file)
oneflow::fs::PosixWritableFile::file_	persistence/posix/posix_file_system.cpp	/^  FILE* file_;$/;"	m	class:oneflow::fs::PosixWritableFile	file:	access:private
oneflow::fs::PosixWritableFile::fname_	persistence/posix/posix_file_system.cpp	/^  std::string fname_;$/;"	m	class:oneflow::fs::PosixWritableFile	file:	access:private
oneflow::fs::RandomAccessFile	persistence/file_system.h	/^class RandomAccessFile {$/;"	c	namespace:oneflow::fs
oneflow::fs::RandomAccessFile::OF_DISALLOW_COPY_AND_MOVE	persistence/file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(RandomAccessFile);$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:(RandomAccessFile)
oneflow::fs::RandomAccessFile::RandomAccessFile	persistence/file_system.h	/^  RandomAccessFile() = default;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:()
oneflow::fs::RandomAccessFile::Read	persistence/file_system.h	/^  virtual void Read(uint64_t offset, size_t n, char* result) const = 0;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:(uint64_t offset, size_t n, char* result) const
oneflow::fs::RandomAccessFile::~RandomAccessFile	persistence/file_system.h	/^  virtual ~RandomAccessFile() = default;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:()
oneflow::fs::TestDirOperation	persistence/file_system_test.cpp	/^void TestDirOperation(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
oneflow::fs::TestFileOperation	persistence/file_system_test.cpp	/^void TestFileOperation(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
oneflow::fs::TestFileSystem	persistence/file_system_test.cpp	/^void TestFileSystem(FileSystem* file_system) {$/;"	f	namespace:oneflow::fs	signature:(FileSystem* file_system)
oneflow::fs::WindowsFileSystem::CreateDir	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::CreateDir(const std::string& name) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& name)
oneflow::fs::WindowsFileSystem::DelFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::DelFile(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
oneflow::fs::WindowsFileSystem::DeleteDir	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::DeleteDir(const std::string& name) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& name)
oneflow::fs::WindowsFileSystem::FileExists	persistence/windows/windows_file_system.cpp	/^bool WindowsFileSystem::FileExists(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
oneflow::fs::WindowsFileSystem::GetFileSize	persistence/windows/windows_file_system.cpp	/^uint64_t WindowsFileSystem::GetFileSize(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
oneflow::fs::WindowsFileSystem::IsDirectory	persistence/windows/windows_file_system.cpp	/^bool WindowsFileSystem::IsDirectory(const std::string& fname) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname)
oneflow::fs::WindowsFileSystem::ListDir	persistence/windows/windows_file_system.cpp	/^std::vector<std::string> WindowsFileSystem::ListDir(const std::string& dir) {$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& dir)
oneflow::fs::WindowsFileSystem::NewAppendableFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewAppendableFile($/;"	f	class:oneflow::fs::WindowsFileSystem	signature:( const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::WindowsFileSystem::NewRandomAccessFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewRandomAccessFile($/;"	f	class:oneflow::fs::WindowsFileSystem	signature:( const std::string& fname, std::unique_ptr<RandomAccessFile>* result)
oneflow::fs::WindowsFileSystem::NewWritableFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::NewWritableFile(const std::string& fname,$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& fname, std::unique_ptr<WritableFile>* result)
oneflow::fs::WindowsFileSystem::RenameFile	persistence/windows/windows_file_system.cpp	/^void WindowsFileSystem::RenameFile(const std::string& old_name,$/;"	f	class:oneflow::fs::WindowsFileSystem	signature:(const std::string& old_name, const std::string& new_name)
oneflow::fs::WritableFile	persistence/file_system.h	/^class WritableFile {$/;"	c	namespace:oneflow::fs
oneflow::fs::WritableFile::Append	persistence/file_system.h	/^  virtual void Append(const char* data, size_t n) = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:(const char* data, size_t n)
oneflow::fs::WritableFile::Close	persistence/file_system.h	/^  virtual void Close() = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
oneflow::fs::WritableFile::Flush	persistence/file_system.h	/^  virtual void Flush() = 0;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
oneflow::fs::WritableFile::OF_DISALLOW_COPY_AND_MOVE	persistence/file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(WritableFile);$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:(WritableFile)
oneflow::fs::WritableFile::WritableFile	persistence/file_system.h	/^  WritableFile() = default;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
oneflow::fs::WritableFile::~WritableFile	persistence/file_system.h	/^  virtual ~WritableFile() = default;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
oneflow::fs::__anon41::CloseHandleFunc	persistence/windows/windows_file_system.cpp	/^const auto CloseHandleFunc = [](HANDLE h) { ::CloseHandle(h); };$/;"	m	namespace:oneflow::fs::__anon41	file:
oneflow::fs::__anon41::UniqueCloseHandlePtr	persistence/windows/windows_file_system.cpp	/^typedef std::unique_ptr<void, decltype(CloseHandleFunc)> UniqueCloseHandlePtr;$/;"	t	namespace:oneflow::fs::__anon41	file:
oneflow::fs::__anon41::WindowsRandomAccessFile	persistence/windows/windows_file_system.cpp	/^class WindowsRandomAccessFile : public RandomAccessFile {$/;"	c	namespace:oneflow::fs::__anon41	file:	inherits:RandomAccessFile
oneflow::fs::__anon41::WindowsRandomAccessFile::WindowsRandomAccessFile	persistence/windows/windows_file_system.cpp	/^  WindowsRandomAccessFile(const std::string& fname, HANDLE hfile)$/;"	f	class:oneflow::fs::__anon41::WindowsRandomAccessFile	access:public	signature:(const std::string& fname, HANDLE hfile)
oneflow::fs::__anon41::WindowsRandomAccessFile::filename_	persistence/windows/windows_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::__anon41::WindowsRandomAccessFile	file:	access:private
oneflow::fs::__anon41::WindowsRandomAccessFile::hfile_	persistence/windows/windows_file_system.cpp	/^  HANDLE hfile_;$/;"	m	class:oneflow::fs::__anon41::WindowsRandomAccessFile	file:	access:private
oneflow::fs::__anon41::WindowsWritableFile	persistence/windows/windows_file_system.cpp	/^class WindowsWritableFile : public WritableFile {$/;"	c	namespace:oneflow::fs::__anon41	file:	inherits:WritableFile
oneflow::fs::__anon41::WindowsWritableFile::WindowsWritableFile	persistence/windows/windows_file_system.cpp	/^  WindowsWritableFile(const std::string& fname, HANDLE hFile)$/;"	f	class:oneflow::fs::__anon41::WindowsWritableFile	access:public	signature:(const std::string& fname, HANDLE hFile)
oneflow::fs::__anon41::WindowsWritableFile::filename_	persistence/windows/windows_file_system.cpp	/^  std::string filename_;$/;"	m	class:oneflow::fs::__anon41::WindowsWritableFile	file:	access:private
oneflow::fs::__anon41::WindowsWritableFile::hfile_	persistence/windows/windows_file_system.cpp	/^  HANDLE hfile_;$/;"	m	class:oneflow::fs::__anon41::WindowsWritableFile	file:	access:private
oneflow::fs::__anon41::pread	persistence/windows/windows_file_system.cpp	/^SSIZE_T pread(HANDLE hfile, char* src, size_t num_bytes, uint64_t offset) {$/;"	f	namespace:oneflow::fs::__anon41	signature:(HANDLE hfile, char* src, size_t num_bytes, uint64_t offset)
oneflow::fs::final	persistence/hadoop/hadoop_file_system.h	/^class HadoopFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
oneflow::fs::final	persistence/posix/posix_file_system.h	/^class PosixFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
oneflow::fs::final	persistence/windows/windows_file_system.h	/^class WindowsFileSystem final : public FileSystem {$/;"	c	namespace:oneflow::fs	inherits:FileSystem
oneflow::fs::final::Connect	persistence/hadoop/hadoop_file_system.h	/^  bool Connect(hdfsFS* fs);$/;"	p	class:oneflow::fs::final	access:private	signature:(hdfsFS* fs)
oneflow::fs::final::HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  HadoopFileSystem() = delete;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::final::HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  HadoopFileSystem(const HdfsConf&);$/;"	p	class:oneflow::fs::final	access:public	signature:(const HdfsConf&)
oneflow::fs::final::OF_DISALLOW_COPY_AND_MOVE	persistence/hadoop/hadoop_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(HadoopFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(HadoopFileSystem)
oneflow::fs::final::OF_DISALLOW_COPY_AND_MOVE	persistence/posix/posix_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(PosixFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(PosixFileSystem)
oneflow::fs::final::OF_DISALLOW_COPY_AND_MOVE	persistence/windows/windows_file_system.h	/^  OF_DISALLOW_COPY_AND_MOVE(WindowsFileSystem);$/;"	p	class:oneflow::fs::final	access:public	signature:(WindowsFileSystem)
oneflow::fs::final::PosixFileSystem	persistence/posix/posix_file_system.h	/^  PosixFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::final::Utf8ToWideChar	persistence/windows/windows_file_system.h	/^  static std::wstring Utf8ToWideChar(const std::string& utf8str) {$/;"	f	class:oneflow::fs::final	access:public	signature:(const std::string& utf8str)
oneflow::fs::final::WideCharToUtf8	persistence/windows/windows_file_system.h	/^  static std::string WideCharToUtf8(const std::wstring& wstr) {$/;"	f	class:oneflow::fs::final	access:public	signature:(const std::wstring& wstr)
oneflow::fs::final::WindowsFileSystem	persistence/windows/windows_file_system.h	/^  WindowsFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::final::hdfs_	persistence/hadoop/hadoop_file_system.h	/^  LibHDFS* hdfs_;$/;"	m	class:oneflow::fs::final	access:private
oneflow::fs::final::namenode_	persistence/hadoop/hadoop_file_system.h	/^  std::string namenode_;$/;"	m	class:oneflow::fs::final	access:private
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/hadoop/hadoop_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/posix/posix_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::override	persistence/windows/windows_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
oneflow::fs::final::~HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  ~HadoopFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::final::~PosixFileSystem	persistence/posix/posix_file_system.h	/^  ~PosixFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::final::~WindowsFileSystem	persistence/windows/windows_file_system.h	/^  ~WindowsFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
oneflow::fs::internal	persistence/hadoop/hadoop_file_system.cpp	/^namespace internal {$/;"	n	namespace:oneflow::fs	file:
oneflow::fs::internal::GetSymbolFromLibrary	persistence/hadoop/hadoop_file_system.cpp	/^bool GetSymbolFromLibrary(void* handle, const char* symbol_name,$/;"	f	namespace:oneflow::fs::internal	signature:(void* handle, const char* symbol_name, void** symbol)
oneflow::fs::internal::LoadLibrary	persistence/hadoop/hadoop_file_system.cpp	/^bool LoadLibrary(const char* library_filename, void** handle) {$/;"	f	namespace:oneflow::fs::internal	signature:(const char* library_filename, void** handle)
oneflow::internal	common/str_util.cpp	/^namespace internal {$/;"	n	namespace:oneflow	file:
oneflow::internal	common/str_util.h	/^namespace internal {$/;"	n	namespace:oneflow
oneflow::internal::GetHashKeyImpl	common/str_util.cpp	/^std::string GetHashKeyImpl(std::initializer_list<int> integers) {$/;"	f	namespace:oneflow::internal	signature:(std::initializer_list<int> integers)
oneflow::internal::GetHashKeyImpl	common/str_util.h	/^std::string GetHashKeyImpl(std::initializer_list<int> integers);$/;"	p	namespace:oneflow::internal	signature:(std::initializer_list<int> integers)
oneflow::internal::JoinPathImpl	common/str_util.cpp	/^std::string JoinPathImpl(std::initializer_list<std::string> paths) {$/;"	f	namespace:oneflow::internal	signature:(std::initializer_list<std::string> paths)
oneflow::internal::JoinPathImpl	common/str_util.h	/^std::string JoinPathImpl(std::initializer_list<std::string> paths);$/;"	p	namespace:oneflow::internal	signature:(std::initializer_list<std::string> paths)
oneflow::kCtrlMethodNum	control/ctrl_service.h	/^const int32_t kCtrlMethodNum = OF_PP_INTERNAL_SEQ_SIZE(CTRL_METHOD_SEQ);$/;"	m	namespace:oneflow
oneflow::kCudaMaxBlocksNum	device/cuda_util.h	/^const int32_t kCudaMaxBlocksNum = 4096;$/;"	m	namespace:oneflow
oneflow::kCudaThreadsNumPerBlock	device/cuda_util.h	/^const int32_t kCudaThreadsNumPerBlock = 512;$/;"	m	namespace:oneflow
oneflow::kMaxRegisterNum	register/register_desc.h	/^const int32_t kMaxRegisterNum = std::numeric_limits<int32_t>::max();$/;"	m	namespace:oneflow
oneflow::kNullDataId	job/keyword.cpp	/^const char* kNullDataId = ONEFLOW_INTERNAL_PREFIX "NullDataId";$/;"	m	namespace:oneflow	file:
oneflow::kPackedBlobName	job/keyword.cpp	/^const char* kPackedBlobName = ONEFLOW_INTERNAL_PREFIX "PackedBlobName";$/;"	m	namespace:oneflow	file:
oneflow::of_make_unique	common/util.h	/^std::unique_ptr<T> of_make_unique(Args&&... args) {$/;"	f	namespace:oneflow	signature:(Args&&.... args)
oneflow::oneflow_cast	common/util.cpp	/^double oneflow_cast(const std::string& s) {$/;"	f	namespace:oneflow	signature:(const std::string& s)
oneflow::oneflow_cast	common/util.cpp	/^float oneflow_cast(const std::string& s) {$/;"	f	namespace:oneflow	signature:(const std::string& s)
oneflow::oneflow_cast	common/util.h	/^OutType oneflow_cast(const InType&);$/;"	p	namespace:oneflow	signature:(const InType&)
oneflow::operator !=	common/protobuf.h	/^inline bool operator!=(const google::protobuf::MessageLite& lhs,$/;"	f	namespace:oneflow	signature:(const google::protobuf::MessageLite& lhs, const google::protobuf::MessageLite& rhs)
oneflow::operator <<	actor/actor_message.h	/^StreamT& operator<<(StreamT& out_stream, const ActorMsg& msg) {$/;"	f	namespace:oneflow	signature:(StreamT& out_stream, const ActorMsg& msg)
oneflow::operator <<	common/shape.cpp	/^std::ostream& operator<<(std::ostream& out, const Shape& shape) {$/;"	f	namespace:oneflow	signature:(std::ostream& out, const Shape& shape)
oneflow::operator <<	common/shape.h	/^std::ostream& operator<<(std::ostream& out, const Shape& shape);$/;"	p	namespace:oneflow	signature:(std::ostream& out, const Shape& shape)
oneflow::operator <<	persistence/persistent_out_stream.h	/^PersistentOutStream& operator<<(PersistentOutStream& out_stream, const T& x) {$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const T& x)
oneflow::operator <<	persistence/persistent_out_stream.h	/^PersistentOutStream& operator<<(PersistentOutStream& out_stream,$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const char (&s)[n])
oneflow::operator <<	persistence/persistent_out_stream.h	/^inline PersistentOutStream& operator<<(PersistentOutStream& out_stream,$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const std::string& s)
oneflow::operator ==	common/protobuf.h	/^inline bool operator==(const google::protobuf::MessageLite& lhs,$/;"	f	namespace:oneflow	signature:(const google::protobuf::MessageLite& lhs, const google::protobuf::MessageLite& rhs)
oneflow::operator ==	common/util.h	/^bool operator==(const std::weak_ptr<T>& lhs, const std::weak_ptr<T>& rhs) {$/;"	f	namespace:oneflow	signature:(const std::weak_ptr<T>& lhs, const std::weak_ptr<T>& rhs)
oneflow::operator >>	actor/actor_message.h	/^StreamT& operator>>(StreamT& in_stream, const ActorMsg& msg) {$/;"	f	namespace:oneflow	signature:(StreamT& in_stream, const ActorMsg& msg)
oneflow::test	job/mock_job_desc.h	/^namespace test {$/;"	n	namespace:oneflow
oneflow::test	kernel/accumulate_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/boxing_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/clone_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/concat_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/convolution_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/copy_hd_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/innerproduct_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/momentum_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/multinomial_logistic_loss_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/normal_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/opkernel_test_common.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/opkernel_test_common.h	/^namespace test {$/;"	n	namespace:oneflow
oneflow::test	kernel/pooling_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/relu_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/rmsprop_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/softmax_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test	kernel/softmax_loss_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
oneflow::test::BuildBnInOp2BlobMap	kernel/relu_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test	signature:()
oneflow::test::BuildKernelCtx	kernel/opkernel_test_common.cpp	/^void BuildKernelCtx<DeviceType::kCPU>(KernelCtx* ctx) {$/;"	f	namespace:oneflow::test	signature:(KernelCtx* ctx)
oneflow::test::BuildKernelCtx	kernel/opkernel_test_common.h	/^void BuildKernelCtx(KernelCtx* ctx);$/;"	p	namespace:oneflow::test	signature:(KernelCtx* ctx)
oneflow::test::BuildReluKernel	kernel/relu_kernel_test.cpp	/^Kernel* BuildReluKernel() {$/;"	f	namespace:oneflow::test	signature:()
oneflow::test::ConstructBn2BlobDescFunc	kernel/opkernel_test_common.cpp	/^std::function<BlobDesc*(const std::string)> ConstructBn2BlobDescFunc($/;"	f	namespace:oneflow::test	signature:( std::shared_ptr<Operator> op)
oneflow::test::ConstructBn2BlobDescFunc	kernel/opkernel_test_common.h	/^std::function<BlobDesc*(const std::string)> ConstructBn2BlobDescFunc($/;"	p	namespace:oneflow::test	signature:( std::shared_ptr<Operator>)
oneflow::test::CreateBlob	kernel/opkernel_test_common.cpp	/^Blob* CreateBlob<DeviceType::kCPU>(const BlobDesc* blob_desc) {$/;"	f	namespace:oneflow::test	signature:(const BlobDesc* blob_desc)
oneflow::test::CreateBlob	kernel/opkernel_test_common.h	/^Blob* CreateBlob(const BlobDesc*);$/;"	p	namespace:oneflow::test	signature:(const BlobDesc*)
oneflow::test::InitJobDescSingleton	job/mock_job_desc.h	/^void InitJobDescSingleton(MockJobDesc* mock_job_desc) {$/;"	f	namespace:oneflow::test	signature:(MockJobDesc* mock_job_desc)
oneflow::test::MockJobDesc	job/mock_job_desc.h	/^class MockJobDesc : public JobDesc {$/;"	c	namespace:oneflow::test	inherits:JobDesc
oneflow::test::MockJobDesc::MOCK_METHOD0	job/mock_job_desc.h	/^  MOCK_METHOD0(DefaultDataType, DataType());$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:(DefaultDataType, DataType())
oneflow::test::MockJobDesc::MOCK_METHOD0	job/mock_job_desc.h	/^  MOCK_METHOD0(SizeOfOneDataId, size_t());$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:(SizeOfOneDataId, size_t())
oneflow::test::MockJobDesc::MockJobDesc	job/mock_job_desc.h	/^  MockJobDesc() = default;$/;"	p	class:oneflow::test::MockJobDesc	access:public	signature:()
oneflow::test::SyncStream	kernel/opkernel_test_common.cpp	/^void SyncStream<DeviceType::kCPU>(KernelCtx* ctx) {}$/;"	f	namespace:oneflow::test	signature:(KernelCtx* ctx)
oneflow::test::SyncStream	kernel/opkernel_test_common.h	/^void SyncStream(KernelCtx* ctx);$/;"	p	namespace:oneflow::test	signature:(KernelCtx* ctx)
oneflow::test::TEST	kernel/convolution_kernel_test.cpp	/^TEST(ConvKernel, conv_kernel_cpu) {$/;"	f	namespace:oneflow::test	signature:(ConvKernel, conv_kernel_cpu)
oneflow::test::TestReluKernel	kernel/relu_kernel_test.cpp	/^void TestReluKernel() {$/;"	f	namespace:oneflow::test	signature:()
oneflow::test::__anon10::BuildBnInOp2Blob	kernel/rmsprop_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob($/;"	f	namespace:oneflow::test::__anon10	signature:( std::vector<int64_t>& dim_vec)
oneflow::test::__anon10::BuildRMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel_test.cpp	/^Kernel* BuildRMSPropMdUpdateKernel(float learning_rate, float decay_rate,$/;"	f	namespace:oneflow::test::__anon10	signature:(float learning_rate, float decay_rate, float epsilon)
oneflow::test::__anon10::InitJobDesc	kernel/rmsprop_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon10	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
oneflow::test::__anon10::TestRMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel_test.cpp	/^void TestRMSPropMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon10	signature:()
oneflow::test::__anon11::BuildAccumulateKernel	kernel/accumulate_kernel_test.cpp	/^Kernel* BuildAccumulateKernel() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
oneflow::test::__anon11::BuildBnInOp2BlobMap	kernel/accumulate_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
oneflow::test::__anon11::TestAccumulateKernel	kernel/accumulate_kernel_test.cpp	/^void TestAccumulateKernel() {$/;"	f	namespace:oneflow::test::__anon11	signature:()
oneflow::test::__anon12::BuildBnInOp2BlobMap	kernel/concat_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
oneflow::test::__anon12::BuildConcatKernel	kernel/concat_kernel_test.cpp	/^Kernel* BuildConcatKernel() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
oneflow::test::__anon12::TestConcatKernel	kernel/concat_kernel_test.cpp	/^void TestConcatKernel() {$/;"	f	namespace:oneflow::test::__anon12	signature:()
oneflow::test::__anon13::BuildBnInOp2Blob	kernel/innerproduct_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term)
oneflow::test::__anon13::BuildEmptyMdlForFill	kernel/innerproduct_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildEmptyMdlForFill() {$/;"	f	namespace:oneflow::test::__anon13	signature:()
oneflow::test::__anon13::BuildInnerProductKernel	kernel/innerproduct_kernel_test.cpp	/^Kernel* BuildInnerProductKernel(bool has_bias_term, const FillConf* fill_conf) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term, const FillConf* fill_conf)
oneflow::test::__anon13::IpKernelFillMdlAndMdlTmp	kernel/innerproduct_kernel_test.cpp	/^void IpKernelFillMdlAndMdlTmp(const FillConf* fill_conf) {$/;"	f	namespace:oneflow::test::__anon13	signature:(const FillConf* fill_conf)
oneflow::test::__anon13::IpKernelFwAndBp	kernel/innerproduct_kernel_test.cpp	/^void IpKernelFwAndBp(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon13	signature:(bool has_bias_term)
oneflow::test::__anon15::BuildBnInOp2Blob	kernel/normal_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon15	signature:()
oneflow::test::__anon15::BuildMdUpdateKernel	kernel/normal_model_update_kernel_test.cpp	/^Kernel* BuildMdUpdateKernel(float learning_rate) {$/;"	f	namespace:oneflow::test::__anon15	signature:(float learning_rate)
oneflow::test::__anon15::InitJobDesc	kernel/normal_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon15	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
oneflow::test::__anon15::TestMdUpdateKernel	kernel/normal_model_update_kernel_test.cpp	/^void TestMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon15	signature:()
oneflow::test::__anon17::BuildBnInOp2Blob	kernel/momentum_model_update_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon17	signature:()
oneflow::test::__anon17::BuildMomentumMdUpdateKernel	kernel/momentum_model_update_kernel_test.cpp	/^Kernel* BuildMomentumMdUpdateKernel(float learning_rate, float beta) {$/;"	f	namespace:oneflow::test::__anon17	signature:(float learning_rate, float beta)
oneflow::test::__anon17::InitJobDesc	kernel/momentum_model_update_kernel_test.cpp	/^void InitJobDesc(int32_t piece_size, int32_t num_of_pieces_in_batch) {$/;"	f	namespace:oneflow::test::__anon17	signature:(int32_t piece_size, int32_t num_of_pieces_in_batch)
oneflow::test::__anon17::TestMomentumMdUpdateKernel	kernel/momentum_model_update_kernel_test.cpp	/^void TestMomentumMdUpdateKernel() {$/;"	f	namespace:oneflow::test::__anon17	signature:()
oneflow::test::__anon18::BuildBnInOp2Blob	kernel/softmax_loss_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
oneflow::test::__anon18::BuildSoftmaxLossKernel	kernel/softmax_loss_kernel_test.cpp	/^Kernel* BuildSoftmaxLossKernel() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
oneflow::test::__anon18::TestSoftmaxLossKernel	kernel/softmax_loss_kernel_test.cpp	/^void TestSoftmaxLossKernel() {$/;"	f	namespace:oneflow::test::__anon18	signature:()
oneflow::test::__anon20::BuildBnInOp2Blob	kernel/multinomial_logistic_loss_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
oneflow::test::__anon20::BuildMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel_test.cpp	/^Kernel* BuildMultinomialLogisticLossKernel() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
oneflow::test::__anon20::TestMultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel_test.cpp	/^void TestMultinomialLogisticLossKernel() {$/;"	f	namespace:oneflow::test::__anon20	signature:()
oneflow::test::__anon22::BuildBnInOp2BlobMap	kernel/softmax_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
oneflow::test::__anon22::BuildSoftmaxKernel	kernel/softmax_kernel_test.cpp	/^Kernel* BuildSoftmaxKernel() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
oneflow::test::__anon22::TestSoftmaxKernel	kernel/softmax_kernel_test.cpp	/^void TestSoftmaxKernel() {$/;"	f	namespace:oneflow::test::__anon22	signature:()
oneflow::test::__anon23::BuildBnInOp2BlobFunc	kernel/convolution_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc($/;"	f	namespace:oneflow::test::__anon23	signature:( bool has_bias_term)
oneflow::test::__anon23::BuildConvolutionKernel	kernel/convolution_kernel_test.cpp	/^Kernel* BuildConvolutionKernel(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon23	signature:(bool has_bias_term)
oneflow::test::__anon23::TestConvolutionKernel	kernel/convolution_kernel_test.cpp	/^void TestConvolutionKernel(bool has_bias_term) {$/;"	f	namespace:oneflow::test::__anon23	signature:(bool has_bias_term)
oneflow::test::__anon24::BuildBnInOp2BlobFunc	kernel/clone_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc(int out_num) {$/;"	f	namespace:oneflow::test::__anon24	signature:(int out_num)
oneflow::test::__anon24::BuildCloneKernel	kernel/clone_kernel_test.cpp	/^Kernel* BuildCloneKernel(int out_num) {$/;"	f	namespace:oneflow::test::__anon24	signature:(int out_num)
oneflow::test::__anon24::TestCloneKernel	kernel/clone_kernel_test.cpp	/^void TestCloneKernel(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon24	signature:(bool need_backward)
oneflow::test::__anon26::BuildBnInOp2BlobMap	kernel/boxing_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap($/;"	f	namespace:oneflow::test::__anon26	signature:( const std::vector<std::vector<int64_t>>& in_dim_vecs, const std::vector<std::vector<int64_t>>& out_dim_vecs, const std::vector<int64_t> middle_dim = {0, 0, 0, 0})
oneflow::test::__anon26::BuildBnInOp2BlobMap	kernel/boxing_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobMap($/;"	f	namespace:oneflow::test::__anon26	signature:( std::function<Blob*(const std::string&)> bn2bptr, const std::vector<std::vector<int64_t>>& in_dim_vecs, const std::vector<std::vector<int64_t>>& out_dim_vecs, const std::vector<int64_t> middle_dim = {0, 0, 0, 0})
oneflow::test::__anon26::BuildBoxingKernel	kernel/boxing_kernel_test.cpp	/^BoxingKernel<T>* BuildBoxingKernel(int32_t in_num, int32_t out_num,$/;"	f	namespace:oneflow::test::__anon26	signature:(int32_t in_num, int32_t out_num, int kernel_name, BoxingOpConf::InBoxCase in_box_case, BoxingOpConf::OutBoxCase out_box_case, int32_t concat_axis = 1)
oneflow::test::__anon26::TestBoxingKernelAddClone	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelAddClone() {$/;"	f	namespace:oneflow::test::__anon26	signature:()
oneflow::test::__anon26::TestBoxingKernelConcatClone	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatClone(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
oneflow::test::__anon26::TestBoxingKernelConcatSplit	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplit(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
oneflow::test::__anon26::TestBoxingKernelConcatSplitNull	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplitNull(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
oneflow::test::__anon26::TestBoxingKernelConcatSplit_1	kernel/boxing_kernel_test.cpp	/^void TestBoxingKernelConcatSplit_1(bool need_backward) {$/;"	f	namespace:oneflow::test::__anon26	signature:(bool need_backward)
oneflow::test::__anon29::BuildBnInOp2Blob	kernel/pooling_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2Blob($/;"	f	namespace:oneflow::test::__anon29	signature:( const PoolingOpConf::PoolMethod& pooling_method)
oneflow::test::__anon29::BuildPoolingKernel	kernel/pooling_kernel_test.cpp	/^Kernel* BuildPoolingKernel(const PoolingOpConf::PoolMethod& pooling_method) {$/;"	f	namespace:oneflow::test::__anon29	signature:(const PoolingOpConf::PoolMethod& pooling_method)
oneflow::test::__anon29::TestPoolingKernel	kernel/pooling_kernel_test.cpp	/^void TestPoolingKernel(const PoolingOpConf::PoolMethod& pooling_method) {$/;"	f	namespace:oneflow::test::__anon29	signature:(const PoolingOpConf::PoolMethod& pooling_method)
oneflow::test::__anon9::BuildBnInOp2BlobFunc	kernel/copy_hd_kernel_test.cpp	/^std::function<Blob*(const std::string&)> BuildBnInOp2BlobFunc($/;"	f	namespace:oneflow::test::__anon9	signature:( CopyHdOpConf::Type hd_type)
oneflow::test::__anon9::BuildCopyHdKernel	kernel/copy_hd_kernel_test.cpp	/^Kernel* BuildCopyHdKernel(CopyHdOpConf::Type hd_type) {$/;"	f	namespace:oneflow::test::__anon9	signature:(CopyHdOpConf::Type hd_type)
oneflow::test::__anon9::TestCopyHdKernel	kernel/copy_hd_kernel_test.cpp	/^void TestCopyHdKernel(CopyHdOpConf::Type hd_type) {$/;"	f	namespace:oneflow::test::__anon9	signature:(CopyHdOpConf::Type hd_type)
oneflow::test::final	kernel/opkernel_test_common.cpp	/^class KTCommon<DeviceType::kCPU, T> final {$/;"	c	namespace:oneflow::test	file:
oneflow::test::final	kernel/opkernel_test_common.h	/^class KTCommon final {$/;"	c	namespace:oneflow::test
oneflow::test::final::BlobCmp	kernel/opkernel_test_common.cpp	/^  static void BlobCmp(const Blob* lhs, const Blob* rhs) {$/;"	f	class:oneflow::test::final	access:public	signature:(const Blob* lhs, const Blob* rhs)
oneflow::test::final::BlobCmp	kernel/opkernel_test_common.h	/^  static void BlobCmp(const Blob* lhs, const Blob* rhs);$/;"	p	class:oneflow::test::final	access:public	signature:(const Blob* lhs, const Blob* rhs)
oneflow::test::final::CheckFillResult	kernel/opkernel_test_common.cpp	/^  static void CheckFillResult(const Blob* blob, const FillConf& fill_conf) {$/;"	f	class:oneflow::test::final	access:public	signature:(const Blob* blob, const FillConf& fill_conf)
oneflow::test::final::CheckFillResult	kernel/opkernel_test_common.h	/^  static void CheckFillResult(const Blob* blob, const FillConf& fill_conf);$/;"	p	class:oneflow::test::final	access:public	signature:(const Blob* blob, const FillConf& fill_conf)
oneflow::test::final::CheckResult	kernel/opkernel_test_common.h	/^  static void CheckResult(std::function<Blob*(const std::string&)> BnInOp2Blob,$/;"	f	class:oneflow::test::final	access:public	signature:(std::function<Blob*(const std::string&)> BnInOp2Blob, const std::string& result, const std::string& expected_result)
oneflow::test::final::CreateBlobWithRandomVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithRandomVal(const BlobDesc* blob_desc) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc)
oneflow::test::final::CreateBlobWithSameVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSameVal(const BlobDesc* blob_desc, T val) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, T val)
oneflow::test::final::CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.cpp	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc* blob_desc, T* val) {$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, T* val)
oneflow::test::final::CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc* blob_desc,$/;"	f	class:oneflow::test::final	access:public	signature:(const BlobDesc* blob_desc, std::vector<T> val)
oneflow::test::final::CreateBlobWithSpecifiedVal	kernel/opkernel_test_common.h	/^  static Blob* CreateBlobWithSpecifiedVal(const BlobDesc*, T* val);$/;"	p	class:oneflow::test::final	access:public	signature:(const BlobDesc*, T* val)
oneflow::test::final::KTCommon	kernel/opkernel_test_common.h	/^  KTCommon() = delete;$/;"	p	class:oneflow::test::final	access:public	signature:()
oneflow::test::final::OF_DISALLOW_COPY_AND_MOVE	kernel/opkernel_test_common.h	/^  OF_DISALLOW_COPY_AND_MOVE(KTCommon);$/;"	p	class:oneflow::test::final	access:public	signature:(KTCommon)
oneflow_cast	common/util.cpp	/^double oneflow_cast(const std::string& s) {$/;"	f	namespace:oneflow	signature:(const std::string& s)
oneflow_cast	common/util.cpp	/^float oneflow_cast(const std::string& s) {$/;"	f	namespace:oneflow	signature:(const std::string& s)
oneflow_cast	common/util.h	/^OutType oneflow_cast(const InType&);$/;"	p	namespace:oneflow	signature:(const InType&)
op	graph/exec_graph.h	/^  std::shared_ptr<const Operator> op() const { return op_; }$/;"	f	class:oneflow::final	access:public	signature:() const
op	graph/logical_graph.h	/^  std::shared_ptr<const Operator> op() const { return op_; }$/;"	f	class:oneflow::final	access:public	signature:() const
op_	graph/exec_graph.h	/^  std::shared_ptr<const Operator> op_;$/;"	m	class:oneflow::final	access:private
op_	graph/logical_graph.h	/^  std::shared_ptr<Operator> op_;$/;"	m	class:oneflow::final	access:private
op_conf	kernel/kernel.h	/^  const OperatorConf& op_conf() const { return kernel_conf_.op_conf(); }$/;"	f	class:oneflow::Kernel	access:protected	signature:() const
op_conf	operator/operator.h	/^  const OperatorConf& op_conf() const { return op_conf_; }$/;"	f	class:oneflow::Operator	access:public	signature:() const
op_conf_	operator/operator.h	/^  OperatorConf op_conf_;$/;"	m	class:oneflow::Operator	access:private
op_name	operator/operator.h	/^  const std::string& op_name() const { return op_conf_.name(); }$/;"	f	class:oneflow::Operator	access:public	signature:() const
op_vec	graph/chain_node.cpp	/^const std::vector<std::shared_ptr<const Operator>>& ChainNode::op_vec() const {$/;"	f	class:oneflow::ChainNode	signature:() const
op_vec	graph/chain_node.h	/^  const std::vector<std::shared_ptr<const Operator>>& op_vec() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
op_vec_	graph/chain_node.h	/^  std::vector<std::shared_ptr<const Operator>> op_vec_;$/;"	m	class:oneflow::ChainNode	access:private
operator !=	common/protobuf.h	/^inline bool operator!=(const google::protobuf::MessageLite& lhs,$/;"	f	namespace:oneflow	signature:(const google::protobuf::MessageLite& lhs, const google::protobuf::MessageLite& rhs)
operator !=	register/blob.h	/^  bool operator!=(const PieceStatus& other) const { return !(*this == other); }$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& other) const
operator <<	actor/actor_message.h	/^StreamT& operator<<(StreamT& out_stream, const ActorMsg& msg) {$/;"	f	namespace:oneflow	signature:(StreamT& out_stream, const ActorMsg& msg)
operator <<	common/shape.cpp	/^std::ostream& operator<<(std::ostream& out, const Shape& shape) {$/;"	f	namespace:oneflow	signature:(std::ostream& out, const Shape& shape)
operator <<	common/shape.h	/^std::ostream& operator<<(std::ostream& out, const Shape& shape);$/;"	p	namespace:oneflow	signature:(std::ostream& out, const Shape& shape)
operator <<	persistence/persistent_out_stream.h	/^PersistentOutStream& operator<<(PersistentOutStream& out_stream, const T& x) {$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const T& x)
operator <<	persistence/persistent_out_stream.h	/^PersistentOutStream& operator<<(PersistentOutStream& out_stream,$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const char (&s)[n])
operator <<	persistence/persistent_out_stream.h	/^inline PersistentOutStream& operator<<(PersistentOutStream& out_stream,$/;"	f	namespace:oneflow	signature:(PersistentOutStream& out_stream, const std::string& s)
operator =	register/blob.h	/^  PieceStatus& operator=(const PieceStatus&) = default;$/;"	p	class:oneflow::final	access:public	signature:(const PieceStatus&)
operator ==	common/protobuf.h	/^inline bool operator==(const google::protobuf::MessageLite& lhs,$/;"	f	namespace:oneflow	signature:(const google::protobuf::MessageLite& lhs, const google::protobuf::MessageLite& rhs)
operator ==	common/range.h	/^  bool operator==(const Range& rhs) const {$/;"	f	class:oneflow::final	access:public	signature:(const Range& rhs) const
operator ==	common/shape.cpp	/^bool Shape::operator==(const Shape& rhs) const {$/;"	f	class:oneflow::Shape	signature:(const Shape& rhs) const
operator ==	common/shape.h	/^  bool operator==(const Shape& rhs) const;$/;"	p	class:oneflow::final	access:public	signature:(const Shape& rhs) const
operator ==	common/util.h	/^bool operator==(const std::weak_ptr<T>& lhs, const std::weak_ptr<T>& rhs) {$/;"	f	namespace:oneflow	signature:(const std::weak_ptr<T>& lhs, const std::weak_ptr<T>& rhs)
operator ==	register/blob.h	/^  bool operator==(const PieceStatus& other) const {$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& other) const
operator ==	register/blob_desc.cpp	/^bool BlobDesc::operator==(const BlobDesc& rhs) const {$/;"	f	class:oneflow::BlobDesc	signature:(const BlobDesc& rhs) const
operator ==	register/blob_desc.h	/^  bool operator==(const BlobDesc& rhs) const;$/;"	p	class:oneflow::final	access:public	signature:(const BlobDesc& rhs) const
operator >>	actor/actor_message.h	/^StreamT& operator>>(StreamT& in_stream, const ActorMsg& msg) {$/;"	f	namespace:oneflow	signature:(StreamT& in_stream, const ActorMsg& msg)
other	kernel/kernel_context.h	/^  void* other;$/;"	m	struct:oneflow::KernelCtx	access:public
out_diff_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t out_diff_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
out_edges	graph/node.h	/^  const std::unordered_set<EdgeType*>& out_edges() const { return out_edges_; }$/;"	f	class:oneflow::Node	access:public	signature:() const
out_edges_	graph/node.h	/^  HashSet<EdgeType*> out_edges_;$/;"	m	class:oneflow::Node	access:private
out_regst_desc_id_	actor/backward_compute_actor.h	/^  int64_t out_regst_desc_id_;$/;"	m	class:oneflow::final	access:private
out_streams_	kernel/print_kernel.h	/^  std::vector<std::unique_ptr<PersistentOutStream>> out_streams_;$/;"	m	class:oneflow::final	access:private
output_bns_	operator/operator.h	/^  std::vector<std::string> output_bns_;$/;"	m	class:oneflow::Operator	access:private
output_diff_bns_	operator/operator.h	/^  std::vector<std::string> output_diff_bns_;$/;"	m	class:oneflow::Operator	access:private
override	actor/accumulate_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
override	actor/accumulate_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
override	actor/accumulate_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
override	actor/accumulate_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::AccumulateCompActor	access:private
override	actor/backward_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/backward_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/backward_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/backward_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/backward_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/backward_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/boxing_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/boxing_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/boxing_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/boxing_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/boxing_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/boxing_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/copy_comm_net_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  void InitDeviceCtx(const ThreadCtx&) override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_comm_net_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  void InitDeviceCtx(const ThreadCtx&) override;$/;"	m	class:oneflow::final	access:private
override	actor/copy_hd_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/forward_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/forward_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/forward_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/forward_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/forward_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/forward_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/model_save_compute_actor.h	/^  KernelCtx GenSinkKernelCtx() override;$/;"	m	class:oneflow::final	access:private
override	actor/model_save_compute_actor.h	/^  void VirtualSinkCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  bool IsWriteReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/model_update_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/rnn_boxing_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::final	access:private
override	actor/rnn_boxing_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/rnn_boxing_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/rnn_boxing_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/rnn_boxing_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::final	access:private
override	actor/rnn_boxing_actor.h	/^  void VirtualActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:public
override	actor/sink_compute_actor.h	/^  bool IsReadAlwaysUnReadyFromNow() override;$/;"	m	class:oneflow::SinkCompActor	access:private
override	actor/sink_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::SinkCompActor	access:private
override	actor/sink_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::SinkCompActor	access:private
override	actor/sink_compute_actor.h	/^  void AsyncReturnAllReadableRegst() override;$/;"	m	class:oneflow::SinkCompActor	access:private
override	actor/sink_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::SinkCompActor	access:private
override	actor/source_compute_actor.h	/^  bool IsReadReady() override;$/;"	m	class:oneflow::final	access:private
override	actor/source_compute_actor.h	/^  int HandlerNormal(const ActorMsg&) override;$/;"	m	class:oneflow::final	access:private
override	actor/source_compute_actor.h	/^  void Act() override;$/;"	m	class:oneflow::final	access:private
override	actor/source_compute_actor.h	/^  void VirtualCompActorInit(const TaskProto&) override;$/;"	m	class:oneflow::final	access:private
override	comm_network/epoll/epoll_comm_network.h	/^                       std::function<void()> callback) override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^             const void* dst_token) override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^  const void* RegisterMemory(void* mem_ptr, size_t byte_size) override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^  void AddReadCallBackDone(void* actor_read_id, void* read_id) override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^  void RegisterMemoryDone() override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^  void SendActorMsg(int64_t dst_machine_id, const ActorMsg& msg) override;$/;"	m	class:oneflow::final	access:public
override	comm_network/epoll/epoll_comm_network.h	/^  void UnRegisterMemory(const void* token) override;$/;"	m	class:oneflow::final	access:public
override	device/cuda_device_context.h	/^  void AddCallBack(std::function<void()> callback) const override;$/;"	m	class:oneflow::final	access:public
override	graph/accumulate_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
override	graph/accumulate_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
override	graph/accumulate_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::AccCompTaskNode	access:public
override	graph/backward_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
override	graph/backward_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/backward_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
override	graph/boxing_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
override	graph/boxing_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
override	graph/boxing_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::BoxingTaskNode	access:public
override	graph/chain_node.h	/^  std::string VisualStr() const override;$/;"	m	class:oneflow::final	access:public
override	graph/chain_node.h	/^  void FixCompTaskNode(CompTaskNode*) const override;$/;"	m	class:oneflow::final	access:private
override	graph/chain_node.h	/^  void set_data_output_lbns() override;$/;"	m	class:oneflow::final	access:public
override	graph/compute_task_node.h	/^  virtual void ToProto(TaskProto*) override;$/;"	m	class:oneflow::CompTaskNode	access:public
override	graph/copy_task_node.h	/^  OperatorConf NewCopyOpConf() override;$/;"	m	class:oneflow::final	access:private
override	graph/copy_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
override	graph/copy_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
override	graph/copy_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::CopyTaskNode	access:public
override	graph/forward_compute_task_node.h	/^  bool IsReadyForBuild() override;$/;"	m	class:oneflow::final	access:public
override	graph/forward_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
override	graph/forward_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/forward_compute_task_node.h	/^  void LockRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/forward_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
override	graph/loss_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
override	graph/loss_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/loss_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  bool IsReadyForBuild() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  void LockRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
override	graph/model_update_compute_task_node.h	/^  void ToProto(TaskProto*) override;$/;"	m	class:oneflow::final	access:public
override	graph/sink_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
override	graph/sink_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
override	graph/sink_compute_task_node.h	/^  void FixThrdId() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
override	graph/sink_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::SinkCompTaskNode	access:private
override	graph/source_compute_task_node.h	/^  void BuildExecGphAndRegst() override;$/;"	m	class:oneflow::final	access:public
override	graph/source_compute_task_node.h	/^  void ConsumeAllRegsts() override;$/;"	m	class:oneflow::final	access:public
override	graph/source_compute_task_node.h	/^  void FixThrdId() override;$/;"	m	class:oneflow::final	access:public
override	graph/source_compute_task_node.h	/^  void ProduceAllRegstsAndBindEdges() override;$/;"	m	class:oneflow::final	access:public
override	graph/task_node.h	/^  std::string VisualStr() const override;$/;"	m	class:oneflow::TaskNode	access:public
override	kernel/accumulate_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
override	kernel/boxing_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/boxing_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/boxing_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
override	kernel/clone_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/clone_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/concat_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/convolution_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/convolution_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/copy_hd_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/copy_hd_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
override	kernel/data_loader_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
override	kernel/data_loader_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
override	kernel/innerproduct_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/innerproduct_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::KernelIf	access:protected
override	kernel/loss_print_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
override	kernel/model_save_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:protected
override	kernel/model_save_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:protected
override	kernel/momentum_model_update_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:public
override	kernel/multinomial_logistic_loss_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/multinomial_logistic_loss_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/normal_model_update_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/pooling_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/print_kernel.h	/^               std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/print_kernel.h	/^  void VirtualKernelInit(const ParallelContext*) override;$/;"	m	class:oneflow::final	access:private
override	kernel/relu_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/rmsprop_model_update_kernel.h	/^      std::function<Blob*(const std::string&)> BnInOp2Blob) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/softmax_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/softmax_loss_kernel.h	/^                     std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	kernel/softmax_loss_kernel.h	/^      std::function<Blob*(const std::string&)>) const override;$/;"	m	class:oneflow::final	access:private
override	operator/accumulate_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/accumulate_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/boxing_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:protected
override	operator/boxing_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/boxing_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/boxing_op.h	/^  std::string ibn2lbn(const std::string& input_bn) const override;$/;"	m	class:oneflow::final	access:private
override	operator/boxing_op.h	/^  std::string obn2lbn(const std::string& output_bn) const override;$/;"	m	class:oneflow::final	access:private
override	operator/boxing_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/clone_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/clone_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/concat_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
override	operator/concat_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/concat_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/concat_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/convolution_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/convolution_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/convolution_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/copy_comm_net_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/copy_comm_net_op.h	/^  std::string ibn2lbn(const std::string& input_bn) const override;$/;"	m	class:oneflow::final	access:private
override	operator/copy_comm_net_op.h	/^  std::string obn2lbn(const std::string& output_bn) const override;$/;"	m	class:oneflow::final	access:private
override	operator/copy_comm_net_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/copy_hd_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/copy_hd_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/data_loader_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/data_loader_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/data_loader_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/innerproduct_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/innerproduct_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/innerproduct_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/loss_print_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/loss_print_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/model_save_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/model_save_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/momentum_model_update_op.h	/^      const ParallelContext* parallel_ctx) override;$/;"	m	class:oneflow::final	access:public
override	operator/momentum_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/momentum_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/multinomial_logistic_loss_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
override	operator/multinomial_logistic_loss_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/multinomial_logistic_loss_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/multinomial_logistic_loss_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/normal_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/normal_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/pooling_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/pooling_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/pooling_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/print_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/print_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/relu_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/relu_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/relu_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/rmsprop_model_update_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/rmsprop_model_update_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/rmsprop_model_update_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_loss_op.h	/^      KernelConf* kernel_conf) const override;$/;"	m	class:oneflow::final	access:private
override	operator/softmax_loss_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_loss_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_loss_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_op.h	/^      const ParallelContext* parallel_ctx) const override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_op.h	/^  const PbMessage& GetSpecialConf() const override;$/;"	m	class:oneflow::final	access:public
override	operator/softmax_op.h	/^  void InitFromOpConf() override;$/;"	m	class:oneflow::final	access:public
override	persistence/cyclic_persistent_in_stream.h	/^  void AddNForCurFilePos(uint64_t n) override;$/;"	m	class:oneflow::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/hadoop/hadoop_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/posix/posix_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^                           std::unique_ptr<RandomAccessFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^                         std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^                       std::unique_ptr<WritableFile>* result) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^                  const std::string& new_name) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  bool FileExists(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  bool IsDirectory(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  std::vector<std::string> ListDir(const std::string& dir) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  uint64_t GetFileSize(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  void CreateDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  void DelFile(const std::string& fname) override;$/;"	m	class:oneflow::fs::final	access:public
override	persistence/windows/windows_file_system.h	/^  void DeleteDir(const std::string& dirname) override;$/;"	m	class:oneflow::fs::final	access:public
packed_blob	register/register.h	/^  Blob* packed_blob() { return packed_blob_.get(); }$/;"	f	class:oneflow::final	access:public	signature:()
packed_blob_	register/register.h	/^  std::unique_ptr<Blob> packed_blob_;$/;"	m	class:oneflow::final	access:private
packed_blob_desc	register/runtime_register_desc.h	/^  const BlobDesc* packed_blob_desc() const { return &packed_blob_desc_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
packed_blob_desc_	register/register_desc.h	/^  std::unique_ptr<BlobDesc> packed_blob_desc_;$/;"	m	class:oneflow::final	access:private
packed_blob_desc_	register/runtime_register_desc.h	/^  BlobDesc packed_blob_desc_;$/;"	m	class:oneflow::RtRegstDesc	access:private
parallel_ctx	actor/actor.h	/^  const ParallelContext* parallel_ctx() const { return parallel_ctx_.get(); }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
parallel_ctx	graph/task_node.h	/^  virtual const ParallelContext* parallel_ctx() const { return nullptr; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
parallel_ctx_	actor/actor.h	/^  std::unique_ptr<ParallelContext> parallel_ctx_;$/;"	m	class:oneflow::Actor	access:private
parallel_ctx_	graph/compute_task_node.h	/^  ParallelContext parallel_ctx_;$/;"	m	class:oneflow::CompTaskNode	access:private
parallel_desc	graph/chain_node.cpp	/^std::shared_ptr<const ParallelDesc> ChainNode::parallel_desc() const {$/;"	f	class:oneflow::ChainNode	signature:() const
parallel_desc	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc() const;$/;"	p	class:oneflow::ChainNode	access:public	signature:() const
parallel_desc	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc() const {$/;"	f	class:oneflow::final	access:public	signature:() const
parallel_desc_	graph/chain_node.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc_;$/;"	m	class:oneflow::ChainNode	access:private
parallel_desc_	graph/logical_graph.h	/^  std::shared_ptr<const ParallelDesc> parallel_desc_;$/;"	m	class:oneflow::final	access:private
parallel_id	graph/compute_task_node.h	/^  int64_t parallel_id() const { return parallel_ctx_.parallel_id(); }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:() const
parallel_id_max	graph/boxing_task_node.h	/^    int64_t parallel_id_max;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
parallel_id_min	graph/boxing_task_node.h	/^    int64_t parallel_id_min;$/;"	m	struct:oneflow::BoxingTaskNode::EdgeInfo	access:public
parallel_num	job/parallel_desc.h	/^  int64_t parallel_num() const { return parallel_num_; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
parallel_num_	job/parallel_desc.h	/^  int64_t parallel_num_;$/;"	m	class:oneflow::ParallelDesc	access:private
part_id_	kernel/model_save_kernel.h	/^  int32_t part_id_;$/;"	m	class:oneflow::final	access:private
part_num_	kernel/model_save_kernel.h	/^  int32_t part_num_;$/;"	m	class:oneflow::final	access:private
pending_in_regst_	actor/accumulate_compute_actor.h	/^  std::queue<Regst*> pending_in_regst_;$/;"	m	class:oneflow::AccumulateCompActor	access:private
pending_in_regst_	actor/copy_hd_actor.h	/^  std::queue<Regst*> pending_in_regst_;$/;"	m	class:oneflow::final	access:private
pending_in_regsts_	actor/forward_compute_actor.h	/^  std::queue<Regst*> pending_in_regsts_;$/;"	m	class:oneflow::final	access:private
pending_kv_calls_	control/ctrl_server.h	/^      pending_kv_calls_;$/;"	m	class:oneflow::final	access:private
pending_model_diff_acc_queue_	actor/model_update_compute_actor.h	/^  std::queue<Regst*> pending_model_diff_acc_queue_;$/;"	m	class:oneflow::final	access:private
pending_msg_queue_	comm_network/epoll/socket_write_helper.h	/^  std::queue<SocketMsg>* pending_msg_queue_;$/;"	m	class:oneflow::final	access:private
pending_msg_queue_mtx_	comm_network/epoll/socket_write_helper.h	/^  std::mutex pending_msg_queue_mtx_;$/;"	m	class:oneflow::final	access:private
persistence_thrd_offset_	job/id_manager.h	/^  std::vector<int64_t> persistence_thrd_offset_;$/;"	m	class:oneflow::final	access:private
piece_id	actor/actor_message.cpp	/^int64_t ActorMsg::piece_id() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
piece_id	actor/actor_message.h	/^    int64_t piece_id;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
piece_id	actor/actor_message.h	/^  int64_t piece_id() const;$/;"	p	class:oneflow::final	access:public	signature:() const
piece_id	register/blob.h	/^  int64_t piece_id() const { return piece_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
piece_id	register/register.h	/^  int64_t piece_id() const { return piece_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
piece_id2regst_ctx	actor/copy_comm_net_actor.h	/^  HashMap<int64_t, RegstCtx> piece_id2regst_ctx;$/;"	m	class:oneflow::final	access:private
piece_id_	register/blob.h	/^  int64_t piece_id_;$/;"	m	class:oneflow::final	access:private
piece_id_	register/register.h	/^  int64_t piece_id_;$/;"	m	class:oneflow::final	access:private
piece_num_of_experiment_phase	job/job_desc.cpp	/^int64_t JobDesc::piece_num_of_experiment_phase() const {$/;"	f	class:oneflow::JobDesc	signature:() const
piece_num_of_experiment_phase	job/job_desc.h	/^  int64_t piece_num_of_experiment_phase() const;$/;"	p	class:oneflow::final	access:public	signature:() const
piece_status	register/blob.h	/^  const PieceStatus& piece_status() const { return piece_status_; }$/;"	f	class:oneflow::final	access:public	signature:() const
piece_status	register/register.h	/^  const PieceStatus& piece_status() const {$/;"	f	class:oneflow::final	access:public	signature:() const
piece_status_	register/blob.h	/^  PieceStatus piece_status_;$/;"	m	class:oneflow::final	access:private
placement	job/job_desc.h	/^  const Placement& placement() const { return placement_; }$/;"	f	class:oneflow::final	access:public	signature:() const
placement_	job/job_desc.h	/^  Placement placement_;$/;"	m	class:oneflow::final	access:private
policy	job/parallel_desc.h	/^  ParallelPolicy policy() const { return policy_; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
policy_	job/parallel_desc.h	/^  ParallelPolicy policy_;$/;"	m	class:oneflow::ParallelDesc	access:private
pollers_	comm_network/epoll/epoll_comm_network.h	/^  std::vector<IOEventPoller*> pollers_;$/;"	m	class:oneflow::final	access:private
pre_model_regst_	actor/model_update_compute_actor.h	/^  Regst* pre_model_regst_;$/;"	m	class:oneflow::final	access:private
pread	persistence/windows/windows_file_system.cpp	/^SSIZE_T pread(HANDLE hfile, char* src, size_t num_bytes, uint64_t offset) {$/;"	f	namespace:oneflow::fs::__anon41	signature:(HANDLE hfile, char* src, size_t num_bytes, uint64_t offset)
pred_node	graph/logical_graph.h	/^    LogicalNode* pred_node;$/;"	m	struct:oneflow::final::CloneInfo	access:public
private	common/test_util.h	9;"	d
produced_regst2reading_cnt_	actor/actor.h	/^  HashMap<Regst*, int64_t> produced_regst2reading_cnt_;$/;"	m	class:oneflow::Actor	access:private
produced_regsts_	actor/actor.h	/^  HashMap<int64_t, std::vector<std::unique_ptr<Regst>>> produced_regsts_;$/;"	m	class:oneflow::Actor	access:private
produced_regsts_	graph/task_node.h	/^  HashMap<std::string, std::shared_ptr<RegstDesc>> produced_regsts_;$/;"	m	class:oneflow::TaskNode	access:private
producer	actor/copy_comm_net_actor.h	/^    int64_t producer;$/;"	m	struct:oneflow::final::RegstCtx	access:public
producer	register/register_desc.h	/^  const TaskNode* producer() const { return producer_; }$/;"	f	class:oneflow::final	access:public	signature:() const
producer_	register/register_desc.h	/^  const TaskNode* producer_;$/;"	m	class:oneflow::final	access:private
producer_actor_id	register/register.h	/^  int64_t producer_actor_id() const { return regst_desc_->producer_actor_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
producer_actor_id	register/runtime_register_desc.h	/^  int64_t producer_actor_id() const { return producer_actor_id_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
producer_actor_id_	register/runtime_register_desc.h	/^  int64_t producer_actor_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
queue_not_empty_fd_	comm_network/epoll/socket_write_helper.h	/^  int queue_not_empty_fd_;$/;"	m	class:oneflow::final	access:private
random_seed_	actor/model_update_compute_actor.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
random_seed_	graph/chain_node.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
random_seed_	graph/model_update_compute_task_node.h	/^  uint32_t random_seed_;$/;"	m	class:oneflow::final	access:private
read_ctx_list	comm_network/epoll/epoll_comm_network.h	/^    std::list<ReadContext*> read_ctx_list;$/;"	m	struct:oneflow::final::ActorReadContext	access:public
read_ctx_list_mtx	comm_network/epoll/epoll_comm_network.h	/^    std::mutex read_ctx_list_mtx;$/;"	m	struct:oneflow::final::ActorReadContext	access:public
read_done_id	comm_network/epoll/socket_message.h	/^  void* read_done_id;$/;"	m	struct:oneflow::RequestReadMsg	access:public
read_done_id	comm_network/epoll/socket_message.h	/^  void* read_done_id;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
read_handler	comm_network/epoll/io_event_poller.h	/^    std::function<void()> read_handler;$/;"	m	struct:oneflow::final::IOHandler	access:public
read_helper_	comm_network/epoll/socket_helper.h	/^  SocketReadHelper* read_helper_;$/;"	m	class:oneflow::final	access:private
read_id_	actor/copy_comm_net_actor.cpp	/^  void* read_id_;$/;"	m	class:oneflow::final	file:	access:private
read_ptr_	comm_network/epoll/socket_read_helper.h	/^  char* read_ptr_;$/;"	m	class:oneflow::final	access:private
read_size_	comm_network/epoll/socket_read_helper.h	/^  size_t read_size_;$/;"	m	class:oneflow::final	access:private
readable_regst_	actor/boxing_actor.h	/^  HashMap<int64_t, std::queue<Regst*>> readable_regst_;$/;"	m	class:oneflow::final	access:private
readable_regst_	actor/rnn_boxing_actor.h	/^  std::map<int64_t, HashMap<int64_t, std::queue<Regst*>>> readable_regst_;$/;"	m	class:oneflow::final	access:private
readable_regst_cnt_	actor/backward_compute_actor.h	/^  int64_t readable_regst_cnt_;$/;"	m	class:oneflow::final	access:private
readable_regst_cnt_	actor/boxing_actor.h	/^  int64_t readable_regst_cnt_;$/;"	m	class:oneflow::final	access:private
readable_regsts_	actor/backward_compute_actor.h	/^  HashMap<int64_t, std::queue<Regst*>> readable_regsts_;$/;"	m	class:oneflow::final	access:private
readable_snapshot_	persistence/snapshot_manager.h	/^  std::unique_ptr<const Snapshot> readable_snapshot_;$/;"	m	class:oneflow::SnapshotMgr	access:private
recurrent_flag	register/register.h	/^  int recurrent_flag() const { return recurrent_flag_; }$/;"	f	class:oneflow::final	access:public	signature:() const
recurrent_flag_	register/register.h	/^  int recurrent_flag_;$/;"	m	class:oneflow::final	access:private
register_num	register/runtime_register_desc.h	/^  int64_t register_num() const { return register_num_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
register_num_	register/runtime_register_desc.h	/^  int64_t register_num_;$/;"	m	class:oneflow::RtRegstDesc	access:private
regst	actor/actor_message.cpp	/^Regst* ActorMsg::regst() const {$/;"	f	class:oneflow::ActorMsg	signature:() const
regst	actor/actor_message.h	/^    Regst* regst;$/;"	m	struct:oneflow::final::RegstWrapper	access:public
regst	actor/actor_message.h	/^  Regst* regst() const;$/;"	p	class:oneflow::final	access:public	signature:() const
regst_desc	register/register.h	/^  const RtRegstDesc* regst_desc() const { return regst_desc_; }$/;"	f	class:oneflow::final	access:public	signature:() const
regst_desc_	register/register.h	/^  const RtRegstDesc* regst_desc_;$/;"	m	class:oneflow::final	access:private
regst_desc_id	register/register.h	/^  int64_t regst_desc_id() const { return regst_desc_->regst_desc_id(); }$/;"	f	class:oneflow::final	access:public	signature:() const
regst_desc_id	register/register_desc.h	/^  int64_t regst_desc_id() const { return regst_desc_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
regst_desc_id	register/runtime_register_desc.h	/^  int64_t regst_desc_id() const { return regst_desc_id_; }$/;"	f	class:oneflow::RtRegstDesc	access:public	signature:() const
regst_desc_id_	register/register_desc.h	/^  int64_t regst_desc_id_;$/;"	m	class:oneflow::final	access:private
regst_desc_id_	register/runtime_register_desc.h	/^  int64_t regst_desc_id_;$/;"	m	class:oneflow::RtRegstDesc	access:private
regst_desc_id_count_	job/id_manager.h	/^  int64_t regst_desc_id_count_;$/;"	m	class:oneflow::final	access:private
regst_raw_ptr	actor/copy_comm_net_actor.h	/^    Regst* regst_raw_ptr;$/;"	m	struct:oneflow::final::RegstCtx	access:public
regst_wrapper_	actor/actor_message.h	/^    RegstWrapper regst_wrapper_;$/;"	m	union:oneflow::final::__anon42	access:public
related_fw_actor_id_	actor/model_update_compute_actor.h	/^  int64_t related_fw_actor_id_;$/;"	m	class:oneflow::final	access:private
related_save_actor_id_	actor/model_update_compute_actor.h	/^  int64_t related_save_actor_id_;$/;"	m	class:oneflow::final	access:private
remaining_eord_cnt	actor/actor.h	/^  int64_t remaining_eord_cnt() const { return remaining_eord_cnt_; }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
remaining_eord_cnt_	actor/actor.h	/^  int64_t remaining_eord_cnt_;$/;"	m	class:oneflow::Actor	access:private
request	control/ctrl_call.h	/^  const RequestMessageType& request() const { return request_; }$/;"	f	class:oneflow::final	access:public	signature:() const
request_	control/ctrl_call.h	/^  RequestMessageType request_;$/;"	m	class:oneflow::final	access:private
request_handler_	control/ctrl_call.h	/^  std::function<void()> request_handler_;$/;"	m	class:oneflow::final	access:private
resource	job/job_desc.h	/^  const Resource& resource() const { return resource_; }$/;"	f	class:oneflow::final	access:public	signature:() const
resource_	job/job_desc.h	/^  Resource resource_;$/;"	m	class:oneflow::final	access:private
responder_	control/ctrl_call.h	/^  grpc::ServerAsyncResponseWriter<ResponseMessageType> responder_;$/;"	m	class:oneflow::final	access:private
response_	control/ctrl_call.h	/^  ResponseMessageType response_;$/;"	m	class:oneflow::final	access:private
root_path_	persistence/snapshot.h	/^  std::string root_path_;$/;"	m	class:oneflow::final	access:private
rt_regst_descs_	register/register_manager.h	/^  std::list<std::unique_ptr<const RtRegstDesc>> rt_regst_descs_;$/;"	m	class:oneflow::final	access:private
seg_idx_	kernel/boxing_kernel.cpp	/^  int64_t seg_idx_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
seg_num_	kernel/boxing_kernel.cpp	/^  int64_t seg_num_;$/;"	m	class:oneflow::__anon27::final	file:	access:private
server_ctx_	control/ctrl_call.h	/^  grpc::ServerContext server_ctx_;$/;"	m	class:oneflow::final	access:private
set_bw_node	graph/chain_node.h	/^  void set_bw_node(BackwardChainNode* val) { bw_node_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(BackwardChainNode* val)
set_chain_node	graph/compute_task_node.h	/^  void set_chain_node(const ChainNode* val) { chain_node_ = val; }$/;"	f	class:oneflow::CompTaskNode	access:public	signature:(const ChainNode* val)
set_comm_network_ptr	comm_network/comm_network.h	/^  static void set_comm_network_ptr(CommNet* val) { comm_network_ptr_ = val; }$/;"	f	class:oneflow::CommNet	access:protected	signature:(CommNet* val)
set_cublas_handle	device/device_context.h	/^  void set_cublas_handle(const cublasHandle_t* val) { cublas_handle_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cublasHandle_t* val)
set_cuda_stream	device/device_context.h	/^  void set_cuda_stream(const cudaStream_t* val) { cuda_stream_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cudaStream_t* val)
set_cudnn_handle	device/device_context.h	/^  void set_cudnn_handle(const cudnnHandle_t* val) { cudnn_handle_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(const cudnnHandle_t* val)
set_cur_file_pos	persistence/persistent_in_stream.h	/^  void set_cur_file_pos(uint64_t val) { cur_file_pos_ = val; }$/;"	f	class:oneflow::PersistentInStream	access:protected	signature:(uint64_t val)
set_data_output_lbns	graph/chain_node.cpp	/^void BackwardChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::BackwardChainNode	signature:()
set_data_output_lbns	graph/chain_node.cpp	/^void ForwardChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::ForwardChainNode	signature:()
set_data_output_lbns	graph/chain_node.cpp	/^void SourceChainNode::set_data_output_lbns() {$/;"	f	class:oneflow::SourceChainNode	signature:()
set_data_output_lbns	graph/chain_node.h	/^  virtual void set_data_output_lbns() {}$/;"	f	class:oneflow::ChainNode	access:public	signature:()
set_data_type	register/blob_desc.h	/^  void set_data_type(DataType val) { data_type_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(DataType val)
set_fw_node	graph/chain_node.h	/^  void set_fw_node(ForwardChainNode* val) { fw_node_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(ForwardChainNode* val)
set_has_data_id	register/blob_desc.h	/^  void set_has_data_id(bool val) { has_data_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(bool val)
set_is_forward	register/register.h	/^  void set_is_forward(bool val) { is_forward_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(bool val)
set_lbn	graph/exec_graph.h	/^  void set_lbn(const std::string& lbn) { lbn_ = lbn; }$/;"	f	class:oneflow::final	access:public	signature:(const std::string& lbn)
set_machine_id	graph/task_node.cpp	/^void TaskNode::set_machine_id(int64_t val) {$/;"	f	class:oneflow::TaskNode	signature:(int64_t val)
set_machine_id	graph/task_node.h	/^  void set_machine_id(int64_t val);$/;"	p	class:oneflow::TaskNode	access:public	signature:(int64_t val)
set_max_col_id	register/blob.h	/^  void set_max_col_id(int64_t max_col_id) {$/;"	f	class:oneflow::final	access:public	signature:(int64_t max_col_id)
set_max_register_num	register/register_desc.h	/^  void set_max_register_num(int32_t val) { max_register_num_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int32_t val)
set_min_register_num	register/register_desc.h	/^  void set_min_register_num(int32_t val) { min_register_num_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int32_t val)
set_model_version_id	register/register.h	/^  void set_model_version_id(int64_t val) { model_version_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t val)
set_msg_handler	actor/actor.h	/^  void set_msg_handler(MsgHandler val) { msg_handler_ = val; }$/;"	f	class:oneflow::Actor	access:protected	signature:(MsgHandler val)
set_piece_id	register/register.h	/^  void set_piece_id(int64_t val) { piece_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int64_t val)
set_piece_status	register/blob.h	/^  void set_piece_status(const PieceStatus& pst) { piece_status_ = pst; }$/;"	f	class:oneflow::final	access:public	signature:(const PieceStatus& pst)
set_policy	job/parallel_desc.h	/^  void set_policy(ParallelPolicy val) { policy_ = val; }$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(ParallelPolicy val)
set_producer	register/register_desc.h	/^  void set_producer(const TaskNode* val) { producer_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(const TaskNode* val)
set_random_seed	graph/model_update_compute_task_node.h	/^  void set_random_seed(uint32_t val) { random_seed_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(uint32_t val)
set_read_id	actor/copy_comm_net_actor.cpp	/^  void set_read_id(void* val) { read_id_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(void* val)
set_recurrent_flag	register/register.h	/^  void set_recurrent_flag(int val) { recurrent_flag_ = val; }$/;"	f	class:oneflow::final	access:public	signature:(int val)
set_request_handler	control/ctrl_call.h	/^  void set_request_handler(std::function<void()> val) {$/;"	f	class:oneflow::final	access:public	signature:(std::function<void()> val)
set_thrd_id	graph/task_node.cpp	/^void TaskNode::set_thrd_id(int64_t val) {$/;"	f	class:oneflow::TaskNode	signature:(int64_t val)
set_thrd_id	graph/task_node.h	/^  void set_thrd_id(int64_t val);$/;"	p	class:oneflow::TaskNode	access:public	signature:(int64_t val)
set_thrd_id	thread/thread.h	/^  void set_thrd_id(int64_t val) { thrd_id_ = val; }$/;"	f	class:oneflow::Thread	access:protected	signature:(int64_t val)
set_work_stream_id	device/device_context.h	/^  void set_work_stream_id(int64_t val) { work_stream_id_ = val; }$/;"	f	class:oneflow::DeviceCtx	access:protected	signature:(int64_t val)
shape	register/blob.h	/^  const Shape& shape() const { return blob_desc_->shape(); }$/;"	f	class:oneflow::final	access:public	signature:() const
shape	register/blob_desc.h	/^  const Shape& shape() const { return shape_; }$/;"	f	class:oneflow::final	access:public	signature:() const
shape_	register/blob_desc.h	/^  Shape shape_;$/;"	m	class:oneflow::final	access:private
sink_nodes	graph/graph.h	/^  const std::unordered_set<NodeType*>& sink_nodes() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
size	common/range.h	/^  int64_t size() const { return end_ - begin_; }$/;"	f	class:oneflow::final	access:public	signature:() const
sleep_seconds	control/ctrl_client.cpp	/^const int64_t sleep_seconds = 10;$/;"	m	namespace:oneflow::__anon38	file:
snapshot_id2writeable_snapshot_	persistence/snapshot_manager.h	/^  HashMap<int64_t, std::unique_ptr<Snapshot>> snapshot_id2writeable_snapshot_;$/;"	m	class:oneflow::SnapshotMgr	access:private
sockfd2helper_	comm_network/epoll/epoll_comm_network.h	/^  HashMap<int, SocketHelper*> sockfd2helper_;$/;"	m	class:oneflow::final	access:private
sockfd_	comm_network/epoll/socket_read_helper.h	/^  int sockfd_;$/;"	m	class:oneflow::final	access:private
sockfd_	comm_network/epoll/socket_write_helper.h	/^  int sockfd_;$/;"	m	class:oneflow::final	access:private
sorted_dev_phy_ids	job/parallel_desc.h	/^  const std::vector<int64_t>& sorted_dev_phy_ids(int64_t machine_id) const {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:(int64_t machine_id) const
sorted_machine_ids	job/parallel_desc.h	/^  const std::vector<int64_t>& sorted_machine_ids() const {$/;"	f	class:oneflow::ParallelDesc	access:public	signature:() const
sorted_machine_ids_	job/parallel_desc.h	/^  std::vector<int64_t> sorted_machine_ids_;$/;"	m	class:oneflow::ParallelDesc	access:private
source_nodes	graph/graph.h	/^  const std::unordered_set<NodeType*>& source_nodes() const;$/;"	p	class:oneflow::Graph	access:public	signature:() const
split_num_	common/balanced_splitter.h	/^  int64_t split_num_;$/;"	m	class:oneflow::final	access:private
src_actor_id	actor/actor_message.h	/^  int64_t src_actor_id() const { return src_actor_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
src_actor_id_	actor/actor_message.h	/^  int64_t src_actor_id_;$/;"	m	class:oneflow::final	access:private
src_bn	graph/exec_graph.h	/^  const std::string& src_bn() const { return src_bn_; }$/;"	f	class:oneflow::final	access:public	signature:() const
src_bn_	graph/exec_graph.h	/^  std::string src_bn_;$/;"	m	class:oneflow::final	access:private
src_node	graph/node.h	/^  NodeType* src_node() const { return src_node_; }$/;"	f	class:oneflow::Edge	access:public	signature:() const
src_node_	graph/node.h	/^  NodeType* src_node_;$/;"	m	class:oneflow::Edge	access:private
src_token	comm_network/epoll/socket_message.h	/^  const void* src_token;$/;"	m	struct:oneflow::RequestReadMsg	access:public
src_token	comm_network/epoll/socket_message.h	/^  const void* src_token;$/;"	m	struct:oneflow::RequestWriteMsg	access:public
status	persistence/hadoop/hadoop_file_system.h	/^  bool status() { return status_; }$/;"	f	class:oneflow::fs::LibHDFS	access:public	signature:()
status_	control/ctrl_call.h	/^  Status status_;$/;"	m	class:oneflow::final	access:private
status_	persistence/hadoop/hadoop_file_system.h	/^  bool status_;$/;"	m	class:oneflow::fs::LibHDFS	access:private
stubs_	control/ctrl_client.h	/^  std::vector<std::unique_ptr<CtrlService::Stub>> stubs_;$/;"	m	class:oneflow::final	access:private
tObjectKind	persistence/hadoop/hdfs.h	/^typedef enum tObjectKind {$/;"	g
tObjectKind	persistence/hadoop/hdfs.h	/^} tObjectKind;$/;"	t	typeref:enum:tObjectKind
tOffset	persistence/hadoop/hdfs.h	/^typedef int64_t tOffset;  \/\/\/ offset within the file$/;"	t
tPort	persistence/hadoop/hdfs.h	/^typedef uint16_t tPort;   \/\/\/ port$/;"	t
tSize	persistence/hadoop/hdfs.h	/^typedef int32_t tSize;    \/\/\/ size of data for read\/write io ops$/;"	t
tTime	persistence/hadoop/hdfs.h	/^typedef time_t tTime;     \/\/\/ time type in seconds$/;"	t
task_id	graph/task_node.h	/^  int64_t task_id() const { return task_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
task_id_	graph/task_node.h	/^  int64_t task_id_;$/;"	m	class:oneflow::TaskNode	access:private
task_id_bit_num_	job/id_manager.h	/^  static const int64_t task_id_bit_num_ = 39;$/;"	m	class:oneflow::final	access:private
task_type2color	job/compiler.cpp	/^std::map<TaskType, std::string> task_type2color = {$/;"	m	namespace:oneflow::__anon34	file:
test	job/mock_job_desc.h	/^namespace test {$/;"	n	namespace:oneflow
test	kernel/accumulate_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/boxing_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/clone_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/concat_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/convolution_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/copy_hd_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/innerproduct_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/momentum_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/multinomial_logistic_loss_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/normal_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/opkernel_test_common.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/opkernel_test_common.h	/^namespace test {$/;"	n	namespace:oneflow
test	kernel/pooling_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/relu_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/rmsprop_model_update_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/softmax_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
test	kernel/softmax_loss_kernel_test.cpp	/^namespace test {$/;"	n	namespace:oneflow	file:
this_machine_id	job/machine_context.h	/^  int64_t this_machine_id() const { return this_machine_id_; }$/;"	f	class:oneflow::final	access:public	signature:() const
this_machine_id_	job/machine_context.h	/^  int64_t this_machine_id_;$/;"	m	class:oneflow::final	access:private
thrd_id	actor/actor.cpp	/^int64_t Actor::thrd_id() const {$/;"	f	class:oneflow::Actor	signature:() const
thrd_id	actor/actor.h	/^  int64_t thrd_id() const;$/;"	p	class:oneflow::Actor	access:public	signature:() const
thrd_id	graph/task_node.h	/^  int64_t thrd_id() const { return thrd_id_; }$/;"	f	class:oneflow::TaskNode	access:public	signature:() const
thrd_id_	graph/task_node.h	/^  int64_t thrd_id_;$/;"	m	class:oneflow::TaskNode	access:private
thrd_id_	thread/thread.h	/^  int64_t thrd_id_;$/;"	m	class:oneflow::Thread	access:private
thread_	comm_network/epoll/io_event_poller.h	/^  std::thread thread_;$/;"	m	class:oneflow::final	access:private
thread_id2num_of_streams_	job/id_manager.h	/^  HashMap<int64_t, int64_t> thread_id2num_of_streams_;$/;"	m	class:oneflow::final	access:private
thread_id2num_of_tasks_	job/id_manager.h	/^  HashMap<int64_t, int64_t> thread_id2num_of_tasks_;$/;"	m	class:oneflow::final	access:private
thread_id_bit_num_	job/id_manager.h	/^  static const int64_t thread_id_bit_num_ = 8;$/;"	m	class:oneflow::final	access:private
threads_	thread/thread_manager.h	/^  std::vector<Thread*> threads_;$/;"	m	class:oneflow::final	access:private
totalBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
totalLocalBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalLocalBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
totalShortCircuitBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalShortCircuitBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
totalZeroCopyBytesRead	persistence/hadoop/hdfs.h	/^  uint64_t totalZeroCopyBytesRead;$/;"	m	struct:hdfsReadStatistics	access:public
total_mbn_num	graph/logical_graph.h	/^  int64_t total_mbn_num() const { return total_mbn_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
total_mbn_num	persistence/snapshot_manager.h	/^  int64_t total_mbn_num() const { return total_mbn_num_; }$/;"	f	class:oneflow::SnapshotMgr	access:public	signature:() const
total_mbn_num_	graph/logical_graph.h	/^  int64_t total_mbn_num_;$/;"	m	class:oneflow::final	access:private
total_mbn_num_	persistence/snapshot_manager.h	/^  int64_t total_mbn_num_;$/;"	m	class:oneflow::SnapshotMgr	access:private
total_piece_num	job/runtime_context.h	/^  int64_t total_piece_num() const { return total_piece_num_; }$/;"	f	class:oneflow::final	access:public	signature:() const
total_piece_num_	job/runtime_context.h	/^  int64_t total_piece_num_;$/;"	m	class:oneflow::final	access:private
total_reading_cnt	actor/actor.h	/^  int64_t total_reading_cnt() const { return total_reading_cnt_; }$/;"	f	class:oneflow::Actor	access:protected	signature:() const
total_reading_cnt_	actor/actor.h	/^  int64_t total_reading_cnt_;$/;"	m	class:oneflow::Actor	access:private
txt_out_stream_	actor/act_event_logger.h	/^  PersistentOutStream txt_out_stream_;$/;"	m	class:oneflow::final	access:private
unregister_mem_descs_cnt_	comm_network/epoll/epoll_comm_network.h	/^  size_t unregister_mem_descs_cnt_;$/;"	m	class:oneflow::final	access:private
val	common/data_type.cpp	/^const DataType GetDataType<void>::val = DataType::kChar;$/;"	m	class:oneflow::GetDataType	file:
val	common/data_type.h	/^  static const DataType val;$/;"	m	struct:oneflow::GetDataType	access:public
val	kernel/kernel_util.h	/^  static const cudaMemcpyKind val = cudaMemcpyKind::cudaMemcpyDeviceToDevice;$/;"	m	struct:oneflow::GetCudaMemcpyKind	access:public
val	kernel/kernel_util.h	/^  static const cudaMemcpyKind val = cudaMemcpyKind::cudaMemcpyHostToHost;$/;"	m	struct:oneflow::GetCudaMemcpyKind	access:public
val_	common/channel.h	/^  std::queue<T> val_;$/;"	m	class:oneflow::final	access:private
work_stream_id	device/device_context.h	/^  int64_t work_stream_id() const { return work_stream_id_; }$/;"	f	class:oneflow::DeviceCtx	access:public	signature:() const
work_stream_id_	device/device_context.h	/^  int64_t work_stream_id_;$/;"	m	class:oneflow::DeviceCtx	access:private
write_handler	comm_network/epoll/io_event_poller.h	/^    std::function<void()> write_handler;$/;"	m	struct:oneflow::final::IOHandler	access:public
write_helper_	comm_network/epoll/socket_helper.h	/^  SocketWriteHelper* write_helper_;$/;"	m	class:oneflow::final	access:private
write_ptr_	comm_network/epoll/socket_write_helper.h	/^  const char* write_ptr_;$/;"	m	class:oneflow::final	access:private
write_size_	comm_network/epoll/socket_write_helper.h	/^  size_t write_size_;$/;"	m	class:oneflow::final	access:private
writeable_produced_regst_	actor/actor.h	/^  HashMap<int64_t, std::deque<Regst*>> writeable_produced_regst_;$/;"	m	class:oneflow::Actor	access:private
writeable_produced_regst_desc_num_	actor/actor.h	/^  int64_t writeable_produced_regst_desc_num_;$/;"	m	class:oneflow::Actor	access:private
~AccCompTaskNode	graph/accumulate_compute_task_node.h	/^  virtual ~AccCompTaskNode() = default;$/;"	p	class:oneflow::AccCompTaskNode	access:public	signature:()
~AccumulateCompActor	actor/accumulate_compute_actor.h	/^  virtual ~AccumulateCompActor() = default;$/;"	p	class:oneflow::AccumulateCompActor	access:public	signature:()
~AccumulateKernel	kernel/accumulate_kernel.h	/^  ~AccumulateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~AccumulateOp	operator/accumulate_op.h	/^  ~AccumulateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ActEventLogger	actor/act_event_logger.h	/^  ~ActEventLogger() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Actor	actor/actor.h	/^  virtual ~Actor() = default;$/;"	p	class:oneflow::Actor	access:public	signature:()
~ActorMsg	actor/actor_message.h	/^  ~ActorMsg() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ActorMsgBus	actor/actor_message_bus.h	/^  ~ActorMsgBus() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~AsyncService	control/ctrl_service.h	/^    ~AsyncService() = default;$/;"	p	class:oneflow::final::final	access:public	signature:()
~BackwardCompActor	actor/backward_compute_actor.h	/^  ~BackwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BackwardCompTaskNode	graph/backward_compute_task_node.h	/^  ~BackwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BalancedSplitter	common/balanced_splitter.h	/^  ~BalancedSplitter() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Blob	register/blob.h	/^  ~Blob() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BlobDesc	register/blob_desc.h	/^  ~BlobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BlockingCounter	common/blocking_counter.h	/^  ~BlockingCounter() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BoxingActor	actor/boxing_actor.h	/^  ~BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BoxingActor	actor/rnn_boxing_actor.h	/^  ~BoxingActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BoxingKernel	kernel/boxing_kernel.h	/^  ~BoxingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BoxingOp	operator/boxing_op.h	/^  ~BoxingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~BoxingTaskNode	graph/boxing_task_node.h	/^  virtual ~BoxingTaskNode() = default;$/;"	p	class:oneflow::BoxingTaskNode	access:public	signature:()
~ChainEdge	graph/chain_node.h	/^  ~ChainEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ChainGraph	graph/chain_graph.h	/^  ~ChainGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ChainNode	graph/chain_node.h	/^  virtual ~ChainNode() = default;$/;"	p	class:oneflow::ChainNode	access:public	signature:()
~Channel	common/channel.h	/^  ~Channel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CloneKernel	kernel/clone_kernel.h	/^  ~CloneKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CloneOp	operator/clone_op.h	/^  ~CloneOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CommNet	comm_network/comm_network.h	/^  virtual ~CommNet() = default;$/;"	p	class:oneflow::CommNet	access:public	signature:()
~CommNetDeviceCtx	actor/copy_comm_net_actor.cpp	/^  ~CommNetDeviceCtx() = default;$/;"	p	class:oneflow::final	file:	access:public	signature:()
~CompActor	actor/compute_actor.h	/^  virtual ~CompActor() = default;$/;"	p	class:oneflow::CompActor	access:public	signature:()
~CompTaskNode	graph/compute_task_node.h	/^  virtual ~CompTaskNode() = default;$/;"	p	class:oneflow::CompTaskNode	access:public	signature:()
~Compiler	job/compiler.h	/^  ~Compiler() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ConcatKernel	kernel/concat_kernel.h	/^  ~ConcatKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ConcatOp	operator/concat_op.h	/^  ~ConcatOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ConvolutionKernel	kernel/convolution_kernel.h	/^  ~ConvolutionKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ConvolutionOp	operator/convolution_op.h	/^  ~ConvolutionOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyCommNetActor	actor/copy_comm_net_actor.cpp	/^CopyCommNetActor::~CopyCommNetActor() {$/;"	f	class:oneflow::CopyCommNetActor	signature:()
~CopyCommNetActor	actor/copy_comm_net_actor.h	/^  ~CopyCommNetActor();$/;"	p	class:oneflow::final	access:public	signature:()
~CopyCommNetKernel	kernel/copy_comm_net_kernel.h	/^  ~CopyCommNetKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyCommNetOp	operator/copy_comm_net_op.h	/^  ~CopyCommNetOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyCommNetTaskNode	graph/copy_task_node.h	/^  ~CopyCommNetTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyHdActor	actor/copy_hd_actor.h	/^  ~CopyHdActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyHdKernel	kernel/copy_hd_kernel.h	/^  ~CopyHdKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyHdOp	operator/copy_hd_op.h	/^  ~CopyHdOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyHdTaskNode	graph/copy_task_node.h	/^  ~CopyHdTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CopyTaskNode	graph/copy_task_node.h	/^  virtual ~CopyTaskNode() = default;$/;"	p	class:oneflow::CopyTaskNode	access:public	signature:()
~CpuDeviceCtx	device/cpu_device_context.h	/^  ~CpuDeviceCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CpuThread	thread/cpu_thread.h	/^  ~CpuThread() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CtrlCall	control/ctrl_call.h	/^  ~CtrlCall() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CtrlCallIf	control/ctrl_call.h	/^  virtual ~CtrlCallIf() = default;$/;"	p	class:oneflow::CtrlCallIf	access:public	signature:()
~CtrlClient	control/ctrl_client.h	/^  ~CtrlClient() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CtrlServer	control/ctrl_server.cpp	/^CtrlServer::~CtrlServer() {$/;"	f	class:oneflow::CtrlServer	signature:()
~CtrlServer	control/ctrl_server.h	/^  ~CtrlServer();$/;"	p	class:oneflow::final	access:public	signature:()
~CudaDeviceCtx	device/cuda_device_context.h	/^  ~CudaDeviceCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~CudaStreamHandle	device/cuda_stream_handle.cpp	/^CudaStreamHandle::~CudaStreamHandle() {$/;"	f	class:oneflow::CudaStreamHandle	signature:()
~CudaStreamHandle	device/cuda_stream_handle.h	/^  ~CudaStreamHandle();$/;"	p	class:oneflow::final	access:public	signature:()
~CyclicPersistentInStream	persistence/cyclic_persistent_in_stream.h	/^  ~CyclicPersistentInStream() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~DataContentIterator	kernel/boxing_kernel.cpp	/^  ~DataContentIterator() = default;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
~DataIdIterator	kernel/boxing_kernel.cpp	/^  ~DataIdIterator() = default;$/;"	p	class:oneflow::__anon27::final	file:	access:public	signature:()
~DataLoaderKernel	kernel/data_loader_kernel.h	/^  ~DataLoaderKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~DataLoaderOp	operator/data_loader_op.h	/^  ~DataLoaderOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~DeviceCtx	device/device_context.h	/^  virtual ~DeviceCtx() = default;$/;"	p	class:oneflow::DeviceCtx	access:public	signature:()
~Edge	graph/node.h	/^  virtual ~Edge() = default;$/;"	p	class:oneflow::Edge	access:public	signature:()
~EpollCommNet	comm_network/epoll/epoll_comm_network.cpp	/^EpollCommNet::~EpollCommNet() {$/;"	f	class:oneflow::EpollCommNet	signature:()
~EpollCommNet	comm_network/epoll/epoll_comm_network.h	/^  ~EpollCommNet();$/;"	p	class:oneflow::final	access:public	signature:()
~ExecEdge	graph/exec_graph.h	/^  ~ExecEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ExecGraph	graph/exec_graph.h	/^  ~ExecGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ExecNode	graph/exec_graph.h	/^  ~ExecNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~FileSystem	persistence/file_system.h	/^  virtual ~FileSystem() = default;$/;"	p	class:oneflow::fs::FileSystem	access:public	signature:()
~ForwardCompActor	actor/forward_compute_actor.h	/^  ~ForwardCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ForwardCompTaskNode	graph/forward_compute_task_node.h	/^  ~ForwardCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~GpuThread	thread/gpu_thread.h	/^  ~GpuThread() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Graph	graph/graph.h	/^  virtual ~Graph() = default;$/;"	p	class:oneflow::Graph	access:public	signature:()
~HadoopFileSystem	persistence/hadoop/hadoop_file_system.h	/^  ~HadoopFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
~IDMgr	job/id_manager.h	/^  ~IDMgr() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~IOEventPoller	comm_network/epoll/io_event_poller.cpp	/^IOEventPoller::~IOEventPoller() {$/;"	f	class:oneflow::IOEventPoller	signature:()
~IOEventPoller	comm_network/epoll/io_event_poller.h	/^  ~IOEventPoller();$/;"	p	class:oneflow::final	access:public	signature:()
~Improver	job/improver.h	/^  ~Improver() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~InBoxingTaskNode	graph/boxing_task_node.h	/^  ~InBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~InnerProductKernel	kernel/innerproduct_kernel.h	/^  ~InnerProductKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~InnerProductOp	operator/innerproduct_op.h	/^  ~InnerProductOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~JobDesc	job/job_desc.h	/^  ~JobDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Kernel	kernel/kernel.h	/^  virtual ~Kernel() = default;$/;"	p	class:oneflow::Kernel	access:public	signature:()
~KernelIf	kernel/kernel.h	/^  virtual ~KernelIf() = default;$/;"	p	class:oneflow::KernelIf	access:public	signature:()
~LogicalEdge	graph/logical_graph.h	/^  ~LogicalEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LogicalGraph	graph/logical_graph.h	/^  ~LogicalGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LogicalNode	graph/logical_graph.h	/^  ~LogicalNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossAccCompActor	actor/loss_accumulate_compute_actor.h	/^  ~LossAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossAccCompTaskNode	graph/loss_accumulate_compute_task_node.h	/^  ~LossAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossCompTaskNode	graph/loss_compute_task_node.h	/^  ~LossCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossPrintCompActor	actor/loss_print_compute_actor.h	/^  ~LossPrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossPrintCompTaskNode	graph/loss_print_compute_task_node.h	/^  ~LossPrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossPrintKernel	kernel/loss_print_kernel.h	/^  ~LossPrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~LossPrintOp	operator/loss_print_op.h	/^  ~LossPrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MachineCtx	job/machine_context.h	/^  ~MachineCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdDiffAccCompActor	actor/model_diff_accumulate_compute_actor.h	/^  ~MdDiffAccCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdDiffAccCompTaskNode	graph/model_diff_accumulate_compute_task_node.h	/^  ~MdDiffAccCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdSaveCompActor	actor/model_save_compute_actor.h	/^  ~MdSaveCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdSaveCompTaskNode	graph/model_save_compute_task_node.h	/^  ~MdSaveCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdUpdateKernel	kernel/model_update_kernel.h	/^  ~MdUpdateKernel() = default;$/;"	p	class:oneflow::MdUpdateKernel	access:public	signature:()
~MdUpdtChainNode	graph/chain_node.h	/^  ~MdUpdtChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdUpdtCompActor	actor/model_update_compute_actor.h	/^  ~MdUpdtCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MdUpdtCompTaskNode	graph/model_update_compute_task_node.h	/^  ~MdUpdtCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MemoryAllocator	memory/memory_allocator.h	/^  ~MemoryAllocator() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ModelSaveKernel	kernel/model_save_kernel.h	/^  ~ModelSaveKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ModelSaveOp	operator/model_save_op.h	/^  ~ModelSaveOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ModelUpdtOp	operator/model_update_op.h	/^  virtual ~ModelUpdtOp() = default;$/;"	p	class:oneflow::ModelUpdtOp	access:public	signature:()
~MomentumMdUpdateKernel	kernel/momentum_model_update_kernel.h	/^  ~MomentumMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MomentumModelUpdateOp	operator/momentum_model_update_op.h	/^  ~MomentumModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MultinomialLogisticLossKernel	kernel/multinomial_logistic_loss_kernel.h	/^  ~MultinomialLogisticLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~MultinomialLogisticLossOp	operator/multinomial_logistic_loss_op.h	/^  ~MultinomialLogisticLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Node	graph/node.h	/^  virtual ~Node() = default;$/;"	p	class:oneflow::Node	access:public	signature:()
~NormalMdUpdateKernel	kernel/normal_model_update_kernel.h	/^  ~NormalMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~NormalModelUpdateOp	operator/normal_model_update_op.h	/^  ~NormalModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Oneflow	job/oneflow.cpp	/^  ~Oneflow() = default;$/;"	p	class:oneflow::final	file:	access:public	signature:()
~Operator	operator/operator.h	/^  virtual ~Operator() = default;$/;"	p	class:oneflow::Operator	access:public	signature:()
~OutBoxingTaskNode	graph/boxing_task_node.h	/^  ~OutBoxingTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ParallelDesc	job/parallel_desc.h	/^  ~ParallelDesc() = default;$/;"	p	class:oneflow::ParallelDesc	access:public	signature:()
~PersistentInStream	persistence/persistent_in_stream.cpp	/^PersistentInStream::~PersistentInStream() { delete[] buffer_; }$/;"	f	class:oneflow::PersistentInStream	signature:()
~PersistentInStream	persistence/persistent_in_stream.h	/^  virtual ~PersistentInStream();$/;"	p	class:oneflow::PersistentInStream	access:public	signature:()
~PersistentOutStream	persistence/persistent_out_stream.cpp	/^PersistentOutStream::~PersistentOutStream() { file_->Close(); }$/;"	f	class:oneflow::PersistentOutStream	signature:()
~PersistentOutStream	persistence/persistent_out_stream.h	/^  ~PersistentOutStream();$/;"	p	class:oneflow::final	access:public	signature:()
~PieceStatus	register/blob.h	/^  ~PieceStatus() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PoolingKernel	kernel/pooling_kernel.h	/^  ~PoolingKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PoolingOp	operator/pooling_op.h	/^  ~PoolingOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PosixFileSystem	persistence/posix/posix_file_system.h	/^  ~PosixFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
~PrintChainNode	graph/chain_node.h	/^  ~PrintChainNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PrintCompActor	actor/print_compute_actor.h	/^  ~PrintCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PrintCompTaskNode	graph/print_compute_task_node.h	/^  ~PrintCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PrintKernel	kernel/print_kernel.h	/^  ~PrintKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~PrintOp	operator/print_op.h	/^  ~PrintOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RMSPropMdUpdateKernel	kernel/rmsprop_model_update_kernel.h	/^  ~RMSPropMdUpdateKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RMSPropModelUpdateOp	operator/rmsprop_model_update_op.h	/^  ~RMSPropModelUpdateOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RandomAccessFile	persistence/file_system.h	/^  virtual ~RandomAccessFile() = default;$/;"	p	class:oneflow::fs::RandomAccessFile	access:public	signature:()
~Range	common/range.h	/^  ~Range() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Regst	register/register.h	/^  ~Regst() { deleter_(); }$/;"	f	class:oneflow::final	access:public	signature:()
~RegstDesc	register/register_desc.h	/^  ~RegstDesc() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RegstMgr	register/register_manager.h	/^  ~RegstMgr() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ReluKernel	kernel/relu_kernel.h	/^  ~ReluKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~ReluOp	operator/relu_op.h	/^  ~ReluOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RtRegstDesc	register/runtime_register_desc.h	/^  ~RtRegstDesc() = default;$/;"	p	class:oneflow::RtRegstDesc	access:public	signature:()
~Runtime	job/runtime.h	/^  ~Runtime() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~RuntimeCtx	job/runtime_context.h	/^  ~RuntimeCtx() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~Shape	common/shape.h	/^  ~Shape() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SinkCompActor	actor/sink_compute_actor.h	/^  virtual ~SinkCompActor() = default;$/;"	p	class:oneflow::SinkCompActor	access:public	signature:()
~SinkCompTaskNode	graph/sink_compute_task_node.h	/^  virtual ~SinkCompTaskNode() = default;$/;"	p	class:oneflow::SinkCompTaskNode	access:public	signature:()
~Snapshot	persistence/snapshot.h	/^  ~Snapshot() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SnapshotMgr	persistence/snapshot_manager.h	/^  ~SnapshotMgr() = default;$/;"	p	class:oneflow::SnapshotMgr	access:public	signature:()
~SocketHelper	comm_network/epoll/socket_helper.cpp	/^SocketHelper::~SocketHelper() {$/;"	f	class:oneflow::SocketHelper	signature:()
~SocketHelper	comm_network/epoll/socket_helper.h	/^  ~SocketHelper();$/;"	p	class:oneflow::final	access:public	signature:()
~SocketReadHelper	comm_network/epoll/socket_read_helper.cpp	/^SocketReadHelper::~SocketReadHelper() {$/;"	f	class:oneflow::SocketReadHelper	signature:()
~SocketReadHelper	comm_network/epoll/socket_read_helper.h	/^  ~SocketReadHelper();$/;"	p	class:oneflow::final	access:public	signature:()
~SocketWriteHelper	comm_network/epoll/socket_write_helper.cpp	/^SocketWriteHelper::~SocketWriteHelper() {$/;"	f	class:oneflow::SocketWriteHelper	signature:()
~SocketWriteHelper	comm_network/epoll/socket_write_helper.h	/^  ~SocketWriteHelper();$/;"	p	class:oneflow::final	access:public	signature:()
~SoftmaxKernel	kernel/softmax_kernel.h	/^  ~SoftmaxKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SoftmaxLossKernel	kernel/softmax_loss_kernel.h	/^  ~SoftmaxLossKernel() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SoftmaxLossOp	operator/softmax_loss_op.h	/^  ~SoftmaxLossOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SoftmaxOp	operator/softmax_op.h	/^  ~SoftmaxOp() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SourceCompActor	actor/source_compute_actor.h	/^  ~SourceCompActor() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~SourceCompTaskNode	graph/source_compute_task_node.h	/^  ~SourceCompTaskNode() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~TaskEdge	graph/task_node.h	/^  ~TaskEdge() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~TaskGraph	graph/task_graph.h	/^  ~TaskGraph() = default;$/;"	p	class:oneflow::final	access:public	signature:()
~TaskNode	graph/task_node.h	/^  virtual ~TaskNode() = default;$/;"	p	class:oneflow::TaskNode	access:public	signature:()
~Thread	thread/thread.cpp	/^Thread::~Thread() {$/;"	f	class:oneflow::Thread	signature:()
~Thread	thread/thread.h	/^  virtual ~Thread();$/;"	p	class:oneflow::Thread	access:public	signature:()
~ThreadMgr	thread/thread_manager.cpp	/^ThreadMgr::~ThreadMgr() {$/;"	f	class:oneflow::ThreadMgr	signature:()
~ThreadMgr	thread/thread_manager.h	/^  ~ThreadMgr();$/;"	p	class:oneflow::final	access:public	signature:()
~WindowsFileSystem	persistence/windows/windows_file_system.h	/^  ~WindowsFileSystem() = default;$/;"	p	class:oneflow::fs::final	access:public	signature:()
~WritableFile	persistence/file_system.h	/^  virtual ~WritableFile() = default;$/;"	p	class:oneflow::fs::WritableFile	access:public	signature:()
