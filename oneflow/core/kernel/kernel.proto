syntax = "proto2";
package oneflow;

import "oneflow/core/common/shape.proto";
import "oneflow/core/common/data_type.proto";
import "oneflow/core/common/dtype_signature.proto";
import "oneflow/core/operator/op_attribute.proto";
import "oneflow/core/operator/op_conf.proto";
import "oneflow/core/job/placement.proto";
import "oneflow/core/job/sbp_parallel.proto";
import "oneflow/core/register/blob_desc.proto";

message ConvKernelConf {
  required ShapeProto in = 1;
  required ShapeProto out = 2;
  required ShapeProto weight = 3;
  optional ShapeProto bias = 4;
  required int32 dim = 5;
  repeated int32 pad_small_side = 6;
  repeated int32 pad_large_side = 7;
  repeated int32 dilation_rate = 8;
  repeated int32 strides = 9;
  optional int32 cudnn_fwd_algo = 10 [default = -1];
  optional int32 cudnn_bwd_filter_algo = 11 [default = -1];
  optional int32 cudnn_bwd_data_algo = 12 [default = -1];
}

message LossKernelConf {
  required DataType prediction_type = 1;
  required DataType label_type = 2;
  required float weight_scalar = 3;
  required ScalarReductionType reduction = 4;
}

message PoolingKernelConf {
  required ShapeProto in = 1;
  required ShapeProto out = 2;
  required int32 dim = 3;
  repeated int32 padding_before = 4;
  repeated int32 padding_after = 5;
  repeated int32 pool_size = 6;
  repeated int32 strides = 7;
  required string data_format = 8;
  optional bool need_infer_cudnn_desc_each_forward = 9 [default = false];
}

message AveragePoolingKernelConf {
  required PoolingKernelConf pooling_conf = 1;
}

message MaxPoolingKernelConf {
  required PoolingKernelConf pooling_conf = 1;
}

message ReduceSumKernelConf {
  required ShapeProto kept_dims_shape = 1;
}

message SoftmaxKernelConf {
  required int32 axis = 1;
  required int64 transpose_rows = 2;
  required int64 transpose_cols = 3;
  required bool need_transpose = 4;
  repeated int32 perm = 5;
}

message TransposeKernelConf {
  repeated int32 perm = 1;
  repeated int32 invert_perm = 2;
}

message LocalResponseNormalizationKernelConf {
  required ShapeProto batch = 1;
}

message DecodeRandomKernelConf {
  required uint32 random_seed = 1;
}

message DecodeOFRecordKernelConf {
  required uint32 random_seed = 1;
}

message ReduceGatherKernelConf {
  repeated int64 data_offset = 1;
}

message SliceKernelConf {
  required ShapeProto in_shape = 1;
}

message ConstantKernelConf {
  required InitializerConf initializer = 1;
  required uint32 random_seed = 2;
}

message GatherKernelConf {
  required int64 axis = 1;
}

message VariableKernelConf {
  required bool is_fw_inplace = 1;
  required bool is_bw_inplace = 2;
}

message RecordLoadKernelConf {
  required int64 device_piece_size = 1;
  required int64 parallel_id = 2;
  required int64 parallel_num = 3;
}

message PReluAlphaGradKernelConf {
  repeated int32 perm = 1;
}

message ShapeElemCntKernelConf {
  repeated int32 axis = 1;
}

message GatherMs0KernelConf {
  required int64 offset = 1;
}

message GatherMs0GradKernelConf {
  required int64 offset = 1;
  required DataType indices_data_type = 2;
}

message NcclTupleReduceConf {
  required ParallelContext parallel_ctx = 1;
}

message NcclTupleBroadcastConf {
  required ParallelContext parallel_ctx = 1;
}

message UserKernelConf {
  map<string, BlobDescProto> bn_in_op2blob_desc = 1;
  required ParallelContext parallel_ctx = 2;
  required SbpSignature sbp_sig = 3;
  map<string, BlobDescProto> bn_in_op2logical_blob_desc = 4;
}

message XrtLaunchKernelConf {
  required ParallelContext parallel_ctx = 1;
}

message UniqueWithCountsKernelConf {
  required DataType indices_data_type = 1;
}

message IndexedSlicesReduceSumKernelConf {
  required DataType indices_data_type = 1;
}

message UnsortedSegmentSumKernelConf {
  required DataType indices_data_type = 1;
  required int64 axis = 2;
}

message IndexedSlicesNaiveModelUpdateKernelConf {
  required DataType indices_data_type = 1;
  required int64 lower_bound = 2;
  required int64 upper_bound = 3;
}

message IndexedSlicesMomentumModelUpdateKernelConf {
  required DataType indices_data_type = 1;
  required int64 lower_bound = 2;
  required int64 upper_bound = 3;
}

message IndexedSlicesLazyAdamModelUpdateKernelConf {
  required DataType indices_data_type = 1;
  required int64 lower_bound = 2;
  required int64 upper_bound = 3;
}

message SyncDynamicResizeKernelConf {
  required DataType size_data_type = 1;
}

message ArgWhereKernelConf {
  required int32 num_axes = 1;
  required DataType in_data_type = 2;
}

message BroadcastToCompatibleWithKernelConf {
  repeated int64 broadcast_axes = 1;
}

message KernelConf {
  required OpAttribute op_attribute = 1;
  required DataType data_type = 2;
  optional bool need_do_opaque_header = 4 [default = false];
  optional bool need_do_tensor_list = 5 [default = false];
  optional bool need_do_shape = 6 [default = false];
  required DTypeSignature dtype_signature = 7;

  oneof kernel_type {
    UserKernelConf user_conf = 100;
    DecodeRandomKernelConf decode_random_conf = 103;
    DecodeOFRecordKernelConf decode_ofrecord_conf = 104;
    SoftmaxKernelConf softmax_conf = 116;
    TransposeKernelConf transpose_conf = 117;
    ReduceSumKernelConf reduce_sum_conf = 120;
    ConvKernelConf conv_conf = 127;
    AveragePoolingKernelConf average_pooling_conf = 204;
    MaxPoolingKernelConf max_pooling_conf = 205;
    LocalResponseNormalizationKernelConf local_response_normalization_conf = 300;
    ReduceGatherKernelConf reduce_gather_conf = 350;
    XrtLaunchKernelConf xrt_launch_conf = 353;
    UniqueWithCountsKernelConf unique_with_counts_conf = 354;
    IndexedSlicesReduceSumKernelConf indexed_slices_reduce_sum_conf = 355;
    UnsortedSegmentSumKernelConf unsorted_segment_sum_conf = 356;
    IndexedSlicesNaiveModelUpdateKernelConf indexed_slices_naive_model_update_conf = 357;
    IndexedSlicesMomentumModelUpdateKernelConf indexed_slices_momentum_model_update_conf = 358;
    IndexedSlicesLazyAdamModelUpdateKernelConf indexed_slices_lazy_adam_model_update_conf = 359;
    SyncDynamicResizeKernelConf sync_dynamic_resize_conf = 360;
    ArgWhereKernelConf arg_where_conf = 361;

    SliceKernelConf slice_conf = 402;
    ConstantKernelConf constant_conf = 403;
    GatherKernelConf gather_conf = 406;
    VariableKernelConf variable_conf = 407;
    RecordLoadKernelConf record_load_conf = 408;
    PReluAlphaGradKernelConf prelu_alpha_grad_conf = 409;
    ShapeElemCntKernelConf shape_elem_cnt_conf = 412;
    GatherMs0KernelConf gather_ms0_conf = 414;
    GatherMs0GradKernelConf gather_ms0_grad_conf = 415;
    NcclTupleReduceConf nccl_tuple_reduce_conf = 426;
    NcclTupleBroadcastConf nccl_tuple_broadcast_conf = 427;
    BroadcastToCompatibleWithKernelConf broadcast_to_compatible_with_conf = 428;
  }
}
