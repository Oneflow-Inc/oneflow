syntax = "proto2";
package oneflow;

import "oneflow/core/common/shape.proto";
import "oneflow/core/common/data_type.proto";
import "oneflow/core/common/dtype_signature.proto";
import "oneflow/core/operator/op_attribute.proto";
import "oneflow/core/operator/op_conf.proto";
import "oneflow/core/job/placement.proto";
import "oneflow/core/data/data.proto";

message ConvKernelConf {
  required ShapeProto in = 1;
  required ShapeProto out = 2;
  required ShapeProto weight = 3;
  optional ShapeProto bias = 4;
  required int32 dim = 5;
  repeated int32 pad_small_side = 6;
  repeated int32 pad_large_side = 7;
  repeated int32 dilation_rate = 8;
  repeated int32 strides = 9;
  optional int32 cudnn_fwd_algo = 10 [default = -1];
  optional int32 cudnn_bwd_filter_algo = 11 [default = -1];
  optional int32 cudnn_bwd_data_algo = 12 [default = -1];
}

message LossKernelConf {
  required DataType prediction_type = 1;
  required DataType label_type = 2;
  required float weight_scalar = 3;
  required ScalarReductionType reduction = 4;
}

message SparseSoftmaxCrossEntropyLossKernelConf {
  required LossKernelConf loss_conf = 1;
}

message SparseCrossEntropyLossKernelConf {
  required LossKernelConf loss_conf = 1;
}

message SigmoidCrossEntropyLossKernelConf {
    required LossKernelConf loss_conf = 1;
}

message SigmoidCrossEntropyLossGradKernelConf {
    required LossKernelConf loss_conf = 1;
}

message IdentityLossKernelConf {
  required LossKernelConf loss_conf = 1;
}

message PoolingKernelConf {
  required ShapeProto in = 1;
  required ShapeProto out = 2;
  required int32 dim = 3;
  repeated int32 padding_before = 4;
  repeated int32 padding_after = 5;
  repeated int32 pool_size = 6;
  repeated int32 strides = 7;
  required string data_format = 8;
  optional bool need_infer_cudnn_desc_each_forward = 9 [default = false];
}

message AveragePoolingKernelConf {
  required PoolingKernelConf pooling_conf = 1;
}

message MaxPoolingKernelConf {
  required PoolingKernelConf pooling_conf = 1;
}

message ReduceSumKernelConf {
  required ShapeProto kept_dims_shape = 1;
}

message SoftmaxKernelConf {
  required int32 axis = 1;
  required int64 transpose_rows = 2;
  required int64 transpose_cols = 3;
  required bool need_transpose = 4;
  repeated int32 perm = 5;
}

message TransposeKernelConf {
  repeated int32 perm = 1;
  repeated int32 invert_perm = 2;
}

message LocalResponseNormalizationKernelConf {
  required ShapeProto batch = 1;
}

message DecodeRandomKernelConf {
  required uint32 random_seed = 1;
}

message DecodeOFRecordKernelConf {
  required uint32 random_seed = 1;
}

message ReduceGatherKernelConf {
  repeated int64 data_offset = 1;
}

message ReduceConcatKernelConf {
  repeated int64 data_offset = 1;
}

message ReduceSplitKernelConf {
  repeated int64 data_offset = 1;
}

message AccuracyKernelConf {
  required DataType prediction_type = 1;
  required DataType label_type = 2;
}

message HingeLossKernelConf {
  required LossKernelConf loss_conf = 1;
}

message SliceKernelConf {
  required ShapeProto in_shape = 1;
}

message ConstantKernelConf {
  required InitializerConf initializer = 1;
  required uint32 random_seed = 2;
}

message GatherKernelConf {
  required int64 axis = 1;
}

message VariableKernelConf {
  required bool is_fw_inplace = 1;
  required bool is_bw_inplace = 2;
}

message RecordLoadKernelConf {
  required int64 device_piece_size = 1;
  required int64 parallel_id = 2;
  required int64 parallel_num = 3;
}

message PReluAlphaGradKernelConf {
  repeated int32 perm = 1;
}

message ShapeElemCntKernelConf {
  repeated int32 axis = 1;
}

message GatherMs0KernelConf {
  required int64 offset = 1;
}

message GatherMs0GradKernelConf {
  required int64 offset = 1;
}

message DeconvKernelConf {
  required ShapeProto in = 1;
  required ShapeProto out = 2;
  required ShapeProto weight = 3;
  required int32 dim = 4;
  repeated int32 pad_small_side = 5;
  repeated int32 pad_large_side = 6;
  repeated int32 strides = 7;
  optional int32 cudnn_bwd_data_algo = 8 [default = -1];
}

message TopKConf {
  required int32 temp_storage_bytes = 1;
}

message SortConf {
  required int32 temp_storage_bytes = 1;
}

message ArgSortConf {
  required int32 temp_storage_bytes = 1;
}

message NcclTupleReduceConf {
  required ParallelContext parallel_ctx = 1;
}

message NcclTupleBroadcastConf {
  required ParallelContext parallel_ctx = 1;
}

message DataLoadKernelConf {
  required DataInstanceProto data_instance = 1;
  required int32 device_batch_size = 3;
  required int32 parallel_num = 4;
  required int32 parallel_id = 5;
}

message WhereKernelConf {
  required DataType cond_type = 1;
  required DataType value_type = 2;
}

message ScatterNdUpdateKernelConf {
  required DataType idx_type = 1;
}

message GatherNdUpdateKernelConf {
  required DataType idx_type = 1;
}

message NonzeroGpuKernelConf {
  required int32 num_axes = 1;
}

message KernelConf {
  required OpAttribute op_attribute = 1;
  required DataType data_type = 2;
  optional bool need_do_opaque_header = 4 [default = false];
  optional bool need_do_lod = 5 [default = false];
  optional bool need_do_dense_shape = 6 [default = false];
  required DTypeSignature dtype_signature = 7;

  oneof kernel_type {
    SparseSoftmaxCrossEntropyLossKernelConf sparse_softmax_cross_entropy_loss_conf = 101;
    SparseCrossEntropyLossKernelConf sparse_cross_entropy_loss_conf = 102;
    DecodeRandomKernelConf decode_random_conf = 103;
    DecodeOFRecordKernelConf decode_ofrecord_conf = 104;
    HingeLossKernelConf hinge_loss_conf = 105;
    SoftmaxKernelConf softmax_conf = 116;
    TransposeKernelConf transpose_conf = 117;
    ReduceSumKernelConf reduce_sum_conf = 120;
    ConvKernelConf conv_conf = 127;
    AveragePoolingKernelConf average_pooling_conf = 204;
    MaxPoolingKernelConf max_pooling_conf = 205;
    LocalResponseNormalizationKernelConf local_response_normalization_conf = 300;
    ReduceGatherKernelConf reduce_gather_conf = 350;
    ReduceConcatKernelConf reduce_concat_conf = 351;
    ReduceSplitKernelConf reduce_split_conf = 352;
    AccuracyKernelConf accuracy_conf = 401;
    SliceKernelConf slice_conf = 402;
    ConstantKernelConf constant_conf = 403;
    SigmoidCrossEntropyLossKernelConf sigmoid_cross_entropy_loss_conf = 404;
    IdentityLossKernelConf identity_loss_conf = 405;
    GatherKernelConf gather_conf = 406;
    VariableKernelConf variable_conf = 407;
    RecordLoadKernelConf record_load_conf = 408;
    PReluAlphaGradKernelConf prelu_alpha_grad_conf = 409;
    ShapeElemCntKernelConf shape_elem_cnt_conf = 412;
    GatherMs0KernelConf gather_ms0_conf = 413;
    GatherMs0GradKernelConf gather_ms0_grad_conf = 414;
    DeconvKernelConf deconv_conf = 415;
    TopKConf top_k_conf = 416;
    SortConf sort_conf = 417;
    ArgSortConf arg_sort_conf = 418;
    SigmoidCrossEntropyLossGradKernelConf sigmoid_cross_entropy_loss_grad_conf = 419;
    NcclTupleReduceConf nccl_tuple_reduce_conf = 420;
    NcclTupleBroadcastConf nccl_tuple_broadcast_conf = 421;
    WhereKernelConf where_conf = 422;
    ScatterNdUpdateKernelConf scatter_nd_update_conf = 423;
    GatherNdUpdateKernelConf gather_nd_update_conf = 424;
    NonzeroGpuKernelConf nonzero_gpu_kernel_conf = 425;
    DataLoadKernelConf data_load_conf = 426;
  }
}
