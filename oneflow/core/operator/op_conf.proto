syntax = "proto2";
package oneflow;

import "oneflow/core/common/shape.proto";
import "oneflow/core/common/data_type.proto";

enum ActivationType {
  kTanH = 0;
  kSigmoid = 1;
}

message ConstantInitializerConf {
  optional float value = 1 [default = 0];
}

message RandomUniformInitializerConf {
  optional float min = 1 [default = 0];
  optional float max = 2 [default = 1];
}

message RandomNormalInitializerConf {
  optional float mean = 1 [default = 0];
  optional float std = 2 [default = 1];
}

enum VarianceNorm {
  kFanIn = 0;
  kFanOut = 1;
  kAverage = 2;
}

message XavierInitializerConf {
  required VarianceNorm variance_norm = 1;
}

message MsraInitializerConf {
  required VarianceNorm variance_norm = 1;
}

message InitializerConf {
  oneof type {
    ConstantInitializerConf constant_conf = 1;
    RandomUniformInitializerConf random_uniform_conf = 2;
    RandomNormalInitializerConf random_normal_conf = 3;
    XavierInitializerConf xavier_conf = 4;
    MsraInitializerConf msra_conf = 5;
  }
}

message ConvolutionOpConf {
  required string in = 1;
  required string out = 2;

  optional int32 out_num = 3 [default = 1];
  optional bool has_bias_term = 4 [default = true];

  optional int32 pad_h = 5 [default = 0];
  optional int32 pad_w = 6 [default = 0];
  required int32 kernel_h = 7;
  required int32 kernel_w = 8;
  optional int32 stride_h = 9 [default = 1];
  optional int32 stride_w = 10 [default = 1];
  optional int32 dilation_h = 11 [default = 1];
  optional int32 dilation_w = 12 [default = 1];

  optional InitializerConf weight_initializer = 13;
  optional InitializerConf bias_initializer = 14;
}

message FullyConnectedOpConf {
  required string in = 1;
  required string out = 2;
  required int32 units = 3;
  optional bool use_bias = 4 [default = true];
  optional InitializerConf weight_initializer = 5;
  optional InitializerConf bias_initializer = 6;
}

message BasicDataLoaderOpConf {
  required string out = 1;
  required DataType data_type = 2;
  required string data_dir = 3;
  optional int32 max_sequence_size = 4 [default = 1];
  required ShapeProto shape = 5;
}

message AveragePooling2DOpConf {
  required string in = 1;
  required string out = 2;

  required string padding = 3 ;
  required int32 pool_size_h = 4;
  required int32 pool_size_w = 5;
  optional int32 strides_h = 6 [default = 1];
  optional int32 strides_w = 7 [default = 1];
}

message MaxPooling2DOpConf {
  required string in = 1;
  required string out = 2;

  required string padding = 3;
  required int32 pool_size_h = 4;
  required int32 pool_size_w = 5;
  optional int32 strides_h = 6 [default = 1];
  optional int32 strides_w = 7 [default = 1];
}

message ReluOpConf {
  required string in = 1;
  required string out = 2;
}

message SigmoidOpConf {
  required string in = 1;
  required string out = 2;
}

message TanHOpConf {
  required string in = 1;
  required string out = 2;
}

message SoftmaxOpConf {
  required string in = 1;
  required string out = 2;
}

message SoftmaxLossOpConf {
  required string prediction = 1;
  required string label = 2;
  required string loss = 3;
}

message MultinomialLogisticLossOpConf {
  required string prediction = 1;
  required string label = 2;
  required string loss = 3;
}

message ConcatOpConf {
  repeated string in = 1;
  required string out = 2;
  required int32 axis = 3;
}

message CopyCommNetOpConf {
}

message CopyHdOpConf {
  enum Type {
    H2D = 0;
    D2H = 1;
  }
  required Type type = 1;
}

message CloneOpConf {
  required int32 out_num = 1;
  required string lbn = 2;
}

message BoxConcatConf {
  required int32 axis = 1;
}

message BoxAddConf {
}

message BoxSplitConf {
  required int32 axis = 1;
  repeated int32 part_num = 2;
}

message BoxCloneConf {
}

message BoxingOpConf {
  required string lbn = 1;
  required int32 in_num = 2;
  required int32 out_num = 3;

  oneof in_box {
    BoxConcatConf concat_box = 4;
    BoxAddConf add_box = 5;
  }
  oneof out_box {
    BoxSplitConf split_box = 6;
    BoxCloneConf clone_box = 7;
  }
}

message NormalModelUpdateConf {
  optional float learning_rate = 1 [default = 0.01];
}

message MomentumModelUpdateConf {
  optional float learning_rate = 1 [default = 0.01];
  optional float beta = 2 [default = 0.9];
}

message RMSPropModelUpdateConf {
  optional float learning_rate = 1 [default = 0.01];
  optional float decay_rate = 2 [default = 0.99];
  optional float epsilon = 3 [default = 1e-8];
}

message ModelUpdateOpUserConf {
  oneof mdupdt {
    NormalModelUpdateConf normal_conf = 1000;
    MomentumModelUpdateConf momentum_conf = 1001;
    RMSPropModelUpdateConf rmsprop_conf = 1002;
  }
}

message ModelUpdateOpConf {
  required ModelUpdateOpUserConf user_conf = 1;
  required int32 in_num = 2;
}

message AccumulateOpConf {
}

message ModelSaveOpConf {
  repeated string lbns = 1;
}

message PrintOpConf {
  repeated string lbn = 1;
  required string print_path = 2;
}

message LossPrintOpConf {
}

message ReduceSumOpConf {
  required string in = 1;
  required string out = 2;
  optional int32 axis = 3;
  optional bool keepdims = 4 [default = false];
}

message BasicRnnOpConf {
  required string in = 1;
  optional string init_hidden = 2;
  required string out = 3;
  required int32 hidden_size = 4;
  optional ActivationType activation = 6 [default = kTanH];

  optional InitializerConf init_hidden_initializer = 7;
  optional InitializerConf bias_initializer = 8;
  optional InitializerConf i2h_weight_initializer = 9;
  optional InitializerConf h2h_weight_initializer = 10;

  optional bool is_init_hidden_trainable = 11 [default = true];
  optional bool use_bias = 12 [default = true];
}

message BasicLstmOpConf {
}

message ReshapeOpConf {
  required string in = 1;
  required string out = 2;
  required ShapeProto shape = 3;
}

message OperatorConf {
  required string name = 1;
  optional string model_load_dir = 2;
  optional bool use_cudnn_on_gpu = 3;
  oneof op_type {
    ConvolutionOpConf convolution_conf = 100;
    FullyConnectedOpConf fully_connected_conf = 101;
    BasicDataLoaderOpConf basic_data_loader_conf = 102;
    ReluOpConf relu_conf = 104;
    SoftmaxOpConf softmax_conf = 105;
    MultinomialLogisticLossOpConf multinomial_logistic_loss_conf = 106;
    CopyHdOpConf copy_hd_conf = 107;
    CloneOpConf clone_conf = 108;
    BoxingOpConf boxing_conf = 109;
    ModelUpdateOpConf mdupdt_conf = 110;
    ModelSaveOpConf model_save_conf = 111;
    AccumulateOpConf accumulate_conf = 112;
    ConcatOpConf concat_conf = 113;
    CopyCommNetOpConf copy_comm_net_conf = 114;
    SoftmaxLossOpConf softmax_loss_conf = 117;
    PrintOpConf print_conf = 118;
    LossPrintOpConf loss_print_conf = 119;
    ReduceSumOpConf reduce_sum_conf = 120;
    BasicRnnOpConf basic_rnn_conf = 121;
    ReshapeOpConf reshape_conf = 122;
    SigmoidOpConf sigmoid_conf = 123;
    TanHOpConf tanh_conf = 124;
    AveragePooling2DOpConf average_pooling_2d_conf = 200;
    MaxPooling2DOpConf max_pooling_2d_conf = 201;
  }
}

message OpNameSet {
  repeated string op_name = 1;
}
