#include "OneFlowPDLLUtils.pdll"

Pattern {
  let device_name: Attr;
  let device_tag: Attr;
  let axis: Attr;
  let epsilon: Attr;
  let training = attr<"true : bool">;
  let momentum: Attr;
  let moving_mean: Value;
  let moving_variance: Value;
  let gamma: Value;
  let beta: Value;

  let conv = op<oneflow.conv2d>(x: Value, op<oneflow.variable_ir>(value: Value){device_name = device_name, device_tag = device_tag})
  {device_name = device_name, device_tag = device_tag};

  let normalization = op<oneflow.normalization>(conv, moving_mean, moving_variance, gamma, beta) {operand_segment_sizes = attr<"dense<[1, 1, 1, 1, 1, 0]> : vector<6xi32>">, axis = axis, epsilon = epsilon, training = training, momentum = momentum, device_name = device_name, device_tag = device_tag} -> (y: Type, mean: Type, inv_variance: Type);
 
  rewrite normalization with{
    let conv2d_bn = CreateConv2DBatchNorm(conv, normalization);
    replace normalization with conv2d_bn;
  };
  
}


